{"version":3,"sources":["Replace.js","Tools.js","App.js","ToolFunctions.js","index.js"],"names":["btnStyle","display","margin","Replace","state","fcr","fcg","fcb","fca","rcr","rcg","rcb","rca","tcr","tcg","tcb","tca","onChange","bind","event","value","Number","target","isNaN","name","this","setState","onSubmit","e","props","submit","className","type","style","Component","Tools","replace","file","input","preventDefault","replaceColour","App","imgData","newData","x1","x2","y1","y2","imageChange","download","loadImage","swapImage","recentre","files","img","Image","reader","FileReader","onload","read","imgEvent","canvas","document","createElement","width","height","getContext","drawImage","getImageData","filedata","result","startsWith","src","alert","readAsDataURL","getElementById","scrollWidth","scrollHeight","ctx","putImageData","copyNew","canvasName","imgFile","data","Uint8ClampedArray","copy","ImageData","oldVal","newVal","tolerance","file1","file2","match","imgData1","imgData2","i","length","offset","Math","abs","changeImgData","link","setAttribute","toDataURL","click","clearRect","x","id","y","half","point","clientX","offsetLeft","clientY","offsetTop","width1","height1","width2","height2","row","col","val","onClick","hidden","href","ReactDOM","render"],"mappings":"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","file":"static/js/main.db4bd61c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Replace.css\";\r\n\r\nconst btnStyle = {\r\n  display: \"block\",\r\n  margin: \"10px auto\"\r\n};\r\n\r\nclass Replace extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fcr: 255,\r\n      fcg: 255,\r\n      fcb: 255,\r\n      fca: 255,\r\n      rcr: 255,\r\n      rcg: 255,\r\n      rcb: 255,\r\n      rca: 255,\r\n      tcr: 10,\r\n      tcg: 10,\r\n      tcb: 10,\r\n      tca: 10\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(event) {\r\n    let value = Number(event.target.value);\r\n    if (!isNaN(value) && value >= 0 && value <= 255) {\r\n      let state = { [event.target.name]: value };\r\n      this.setState(state);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={e => this.props.submit(this.state, e)}>\r\n        <div className=\"replaceGrid\">\r\n          <label></label>\r\n          <label>Find</label>\r\n          <label>Replace</label>\r\n          <label>Tolerance</label>\r\n          <label>Red:</label>\r\n          <input type=\"text\" value={this.state.fcr} onChange={e => this.onChange(e)} name=\"fcr\" />\r\n          <input type=\"text\" value={this.state.rcr} onChange={e => this.onChange(e)} name=\"rcr\" />\r\n          <input type=\"text\" value={this.state.tcr} onChange={e => this.onChange(e)} name=\"tcr\" />\r\n          <label>Green:</label>\r\n          <input type=\"text\" value={this.state.fcg} onChange={e => this.onChange(e)} name=\"fcg\" />\r\n          <input type=\"text\" value={this.state.rcg} onChange={e => this.onChange(e)} name=\"rcg\" />\r\n          <input type=\"text\" value={this.state.tcg} onChange={e => this.onChange(e)} name=\"tcg\" />\r\n          <label>Blue:</label>\r\n          <input type=\"text\" value={this.state.fcb} onChange={e => this.onChange(e)} name=\"fcb\" />\r\n          <input type=\"text\" value={this.state.rcb} onChange={e => this.onChange(e)} name=\"rcb\" />\r\n          <input type=\"text\" value={this.state.tcb} onChange={e => this.onChange(e)} name=\"tcb\" />\r\n          <label>Alpha:</label>\r\n          <input type=\"text\" value={this.state.fca} onChange={e => this.onChange(e)} name=\"fca\" />\r\n          <input type=\"text\" value={this.state.rca} onChange={e => this.onChange(e)} name=\"rca\" />\r\n          <input type=\"text\" value={this.state.tca} onChange={e => this.onChange(e)} name=\"tca\" />\r\n        </div>\r\n        <button style={btnStyle} type=\"submit\">\r\n          Replace Colour\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Replace;\r\n","import React from \"react\";\r\nimport Replace from \"./Replace\";\r\n\r\nfunction replaceColour(replace, file, input, event) {\r\n  event.preventDefault();\r\n  let oldVal = [input.fcr, input.fcg, input.fcb, input.fca];\r\n  let newVal = [input.rcr, input.rcg, input.rcb, input.rca];\r\n  let tolerance = [input.tcr, input.tcg, input.tcb, input.tca];\r\n  replace(file, oldVal, newVal, tolerance);\r\n}\r\n\r\nfunction Tools(props) {\r\n  return (\r\n    <div>\r\n      <Replace submit={(state, event) => replaceColour(props.replace, props.file, state, event)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tools;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Tools from \"./Tools\";\nimport { changeImgData } from \"./ToolFunctions\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { imgData: null, newData: null, x1: 0, x2: 0, y1: 0, y2: 0 };\n    this.imageChange = this.imageChange.bind(this);\n    this.download = this.download.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.swapImage = this.swapImage.bind(this);\n    this.replace = this.replace.bind(this);\n    this.recentre = this.recentre.bind(this);\n  }\n\n  imageChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      let img = new Image();\n      const reader = new FileReader();\n      reader.onload = read => {\n        img.onload = imgEvent => {\n          var canvas = document.createElement(\"canvas\");\n          let img = imgEvent.target;\n          let width = img.width;\n          let height = img.height;\n          canvas.width = width;\n          canvas.height = height;\n          canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n          let imgData = canvas.getContext(\"2d\").getImageData(0, 0, width, height);\n          this.setState({ imgData }, this.loadImage);\n        };\n        let filedata = read.target.result;\n        if (filedata.startsWith(\"data:image\")) {\n          img.src = filedata;\n        } else {\n          alert(\"That file type is not supported\");\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n    event.target.value = \"\";\n  }\n\n  loadImage() {\n    var canvas = document.getElementById(\"canvas\");\n    canvas.width = canvas.scrollWidth;\n    canvas.height = canvas.scrollHeight;\n    const ctx = canvas.getContext(\"2d\");\n    canvas = document.getElementById(\"newCanvas\");\n    canvas.width = canvas.scrollWidth;\n    canvas.height = canvas.scrollHeight;\n    ctx.putImageData(this.state.imgData, 0, 0);\n    // copy image data into other canvas\n    this.swapImage(false);\n  }\n\n  swapImage(copyNew) {\n    if (this.state.imgData) {\n      let [canvasName, imgFile] = copyNew ? [\"canvas\", this.state.newData] : [\"newCanvas\", this.state.imgData];\n      const ctx = document.getElementById(canvasName).getContext(\"2d\");\n      ctx.putImageData(imgFile, 0, 0);\n      let data = new Uint8ClampedArray(imgFile.data);\n      let copy = new ImageData(data, imgFile.width, imgFile.height);\n      copyNew ? this.setState({ imgData: copy, x1: 0, y1: 0 }) : this.setState({ newData: copy, x2: 0, y2: 0 });\n    }\n  }\n\n  replace(file, oldVal, newVal, tolerance) {\n    if (file) {\n      changeImgData(this.state.imgData, file, oldVal, newVal, tolerance);\n      var canvas2 = document.getElementById(\"newCanvas\").getContext(\"2d\");\n      canvas2.putImageData(file, 0, 0);\n    }\n  }\n\n  // Download new image\n  download() {\n    const link = document.getElementById(\"download\");\n    if (this.state.imgData) {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = this.state.imgData.width;\n      canvas.height = this.state.imgData.height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.putImageData(this.state.newData, 0, 0);\n      link.setAttribute(\"href\", canvas.toDataURL());\n      link.click();\n    }\n  }\n\n  recentre(event) {\n    let canvas = event.target;\n    if (this.state.imgData && (this.state.imgData.width > canvas.width || this.state.imgData.height > canvas.height)) {\n      let ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      let x = canvas.id === \"canvas\" ? this.state.x1 : this.state.x2;\n      let y = canvas.id === \"canvas\" ? this.state.y1 : this.state.y2;\n      let imgData = canvas.id === \"canvas\" ? this.state.imgData : this.state.newData;\n      let half = canvas.width / 2;\n      let point = [x + event.clientX - canvas.offsetLeft - half, y + event.clientY - canvas.offsetTop - half];\n      point[0] = point[0] < 0 ? 0 : point[0];\n      point[0] = point[0] > imgData.width - canvas.width ? imgData.width - canvas.width : point[0];\n      point[0] = imgData.width < canvas.width ? 0 : point[0];\n      point[1] = point[1] < 0 ? 0 : point[1];\n      point[1] = point[1] > imgData.height - canvas.height ? imgData.height - canvas.height : point[1];\n      point[1] = imgData.width < canvas.width ? 0 : point[1];\n      canvas.id === \"canvas\" ? this.setState({ x1: point[0], y1: point[1] }) : this.setState({ x2: point[0], y2: point[1] });\n      let [width1, height1] = [imgData.width, imgData.height];\n      let [width2, height2] = [width1 - point[0], height1 - point[1]];\n      let data = new Uint8ClampedArray(width2 * height2 * 4);\n      for (let row = 0; row < height2; row++) {\n        for (let col = 0; col < width2; col++) {\n          for (let val = 0; val < 4; val++) {\n            data[row * width2 * 4 + col * 4 + val] =\n              imgData.data[(point[1] + row) * width1 * 4 + (point[0] + col) * 4 + val];\n          }\n        }\n      }\n      imgData = new ImageData(data, width2, height2);\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"grid\">\n          <label>Old Preview</label>\n          <label>New Preview</label>\n          <div className=\"transparent\">\n            <canvas id=\"canvas\" onClick={this.recentre}></canvas>\n          </div>\n          <div className=\"transparent\">\n            <canvas id=\"newCanvas\" onClick={this.recentre}></canvas>\n          </div>\n          <input id=\"upload\" type=\"file\" onChange={this.imageChange} hidden />\n          <button onClick={() => document.getElementById(\"upload\").click()}>Upload Image</button>\n          <button onClick={this.download}>Download</button>\n          <button onClick={() => this.swapImage(true)}>Copy new into old</button>\n          <button onClick={() => this.swapImage(false)}>Copy old into new</button>\n        </div>\n        <a id=\"download\" href=\"/\" style={{ display: \"none\" }} download=\"converted\">\n          Download\n        </a>\n        <Tools replace={this.replace} file={this.state.newData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*\r\n  -file1 and file2 are both ImageData objects\r\n  -oldVal and newVal are pixels (rgba values in an array)\r\n  -tolerance is an rgba range\r\n  searches the pixels in file1 looking for a match with oldVal within the given tolerance range.\r\n  corresponding pixels in file2 that were matched are changed to newVal\r\n  corresponding pixels in file2 that were unmatched are changed to the unmatched pixel\r\n  */\r\nexport function changeImgData(file1, file2, oldVal, newVal, tolerance) {\r\n  let match = false;\r\n  let imgData1 = file1.data;\r\n  let imgData2 = file2.data;\r\n  for (let i = 0; i < imgData1.length; i += 4) {\r\n    match = true;\r\n    for (let offset = 0; offset < 4; offset++) {\r\n      match = match && Math.abs(imgData1[i + offset] - oldVal[offset]) <= tolerance[offset];\r\n    }\r\n    if (match) {\r\n      for (let offset = 0; offset < 4; offset++) {\r\n        imgData2[i + offset] = newVal[offset];\r\n      }\r\n    } else {\r\n      for (let offset = 0; offset < 4; offset++) {\r\n        imgData2[i + offset] = imgData1[i + offset];\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}