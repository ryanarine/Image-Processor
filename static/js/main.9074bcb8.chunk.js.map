{"version":3,"sources":["ToolFunctions.js","Reducers/imageReducer.js","Actions/toolActions.js","Replace.js","Tools.js","Lighten.js","SimpleTools.js","Upload.js","Download.js","App.js","index.js"],"names":["isMatch","pixel1","pixel2","tolerance","match","offset","Math","abs","initialState","imgData","newData","x1","x2","y1","y2","sample","pixel","mapEffectToFunction","GRAYSCALE","data","avg","i","length","round","NEGATIVE","BRIGHT","mult","REPLACE","oldVal","newVal","redraw","x","y","canvas","document","getElementById","getContext","putImageData","scrollWidth","scrollHeight","copy","data1","data2","forEach","index","changeCursor","className","imageReducer","state","action","type","isNewCanvas","effect","payload","section","Image","width","height","adjacent","visited","Array","oldColour","frontier","pop","colour","push","adj","getSection","copyToNew","canvasName","imgFile","Uint8ClampedArray","ImageData","basicImgEffect","swap","Replace","fcr","fcg","fcb","fca","rcr","rcg","rcb","rca","tcr","tcg","tcb","tca","onChange","bind","replace","click","navigate","event","value","Number","target","isNaN","toFixed","name","this","setState","preventDefault","props","switchSample","alert","key","which","parent","parentElement","start","end","num","selectionStart","focus","id","onKeyDown","onClick","title","e","prevState","Component","connect","Tools","Lighten","val","handleChange","handleClick","multiplier","text","Fragment","style","SimpleTools","dispatch","useDispatch","display","gridTemplateColumns","justifyItems","ratio","Upload","change","hidden","Download","download","href","App","imageChange","recenter","file","files","img","reader","FileReader","onload","read","imgEvent","createElement","drawImage","getImageData","ctx","setImgData","then","refresh","filedata","result","startsWith","src","readAsDataURL","link","setAttribute","toDataURL","half","point","pageX","offsetLeft","pageY","offsetTop","updatePoint","width1","height1","width2","height2","min","row","col","updatePixel","Promise","resolve","store","createStore","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.9074bcb8.chunk.js","sourcesContent":["/*\r\n  -data is an array of pixels\r\n  -oldVal and newVal are pixels (rgba values in an array)\r\n  -tolerance is an rgba range\r\n  searches the pixels in data looking for a match with oldVal within the given tolerance range.\r\n  matched pixels get changed to newVal\r\n  */\r\nexport function changeImgData(data, oldVal, newVal, tolerance) {\r\n  let match = false;\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    match = isMatch([data[i], data[i + 1], data[i + 2], data[i + 3]], oldVal, tolerance);\r\n    if (match) {\r\n      for (let offset = 0; offset < 4; offset++) {\r\n        data[i + offset] = newVal[offset];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n  -Image is an ImageData objects\r\n  -pixel ([r,g,b,a,x,y]) is a pixel in Image containing its x and y coordinate\r\n  -tolerance is an rgba range\r\n  -Returns an array of pixel indices that corresponds to a section in Image originating at pixel with the given tolerance range\r\n*/\r\nexport function getSection(Image, pixel, tolerance) {\r\n  let [width, height, data] = [Image.width, Image.height, Image.data];\r\n  // Adjacent offsets of pixels (Up, Right, Down, Left)\r\n  let adjacent = [[0, -1], [1, 0], [0, 1], [-1, 0]];\r\n  // visited[i] indicates whether pixel i has been added to the frontier before\r\n  let visited = new Array(width * height);\r\n  // The array of pixels to return\r\n  let section = [];\r\n  let oldColour = [pixel[0], pixel[1], pixel[2], pixel[3]];\r\n  let [x, y] = [pixel[4], pixel[5]];\r\n  // The array of pixels that need to be checked if they belong to the section\r\n  let frontier = [[x, y]];\r\n  visited[y * width + x] = true;\r\n  while (frontier.length !== 0) {\r\n    [x, y] = frontier.pop();\r\n    // Check if pixel has valid coordinates\r\n    if (x < 0 || x > width || y < 0 || y > height) {\r\n      continue;\r\n    }\r\n    // Get the colour of the pixel\r\n    let colour = [];\r\n    for (let offset = 0; offset < 4; offset++) {\r\n      colour.push(data[y * width * 4 + x * 4 + offset]);\r\n    }\r\n    // Check that the pixel colour is a match\r\n    if (isMatch(colour, oldColour, tolerance)) {\r\n      // Add pixel to section\r\n      section.push(y * width * 4 + x * 4);\r\n      // Add adjacent pixels to frontier\r\n      // eslint-disable-next-line\r\n      adjacent.forEach(adj => {\r\n        // If they have not been added before\r\n        if (!visited[(y + adj[1]) * width + x + adj[0]]) {\r\n          visited[(y + adj[1]) * width + x + adj[0]] = true;\r\n          frontier.push([x + adj[0], y + adj[1]]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return section;\r\n}\r\n\r\n// Grayscales the image data\r\nexport function grayscale(data) {\r\n  let avg = 0;\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    avg = Math.round((data[i] + data[i + 1] + data[i + 2]) / 3);\r\n    data[i] = avg;\r\n    data[i + 1] = avg;\r\n    data[i + 2] = avg;\r\n  }\r\n}\r\n\r\n// Negates the image data\r\nexport function negative(data) {\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    data[i] = 255 - data[i];\r\n    data[i + 1] = 255 - data[i + 1];\r\n    data[i + 2] = 255 - data[i + 2];\r\n  }\r\n}\r\n\r\n// Change the light intensity of the data by the given multiplier\r\nexport function lighten(data, mult) {\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    data[i] = data[i] * mult > 255 ? 255 : data[i] * mult;\r\n    data[i + 1] = data[i + 1] * mult > 255 ? 255 : data[i + 1] * mult;\r\n    data[i + 2] = data[i + 2] * mult > 255 ? 255 : data[i + 2] * mult;\r\n  }\r\n}\r\n\r\n// returns true if the two pixels are similar enough according to the tolerance range\r\nexport function isMatch(pixel1, pixel2, tolerance) {\r\n  let match = true;\r\n  for (let offset = 0; offset < 4; offset++) {\r\n    match = match && Math.abs(pixel1[offset] - pixel2[offset]) <= tolerance[offset];\r\n  }\r\n  return match;\r\n}\r\n","import { grayscale, negative, lighten, changeImgData, getSection } from \"../ToolFunctions\";\r\n\r\nexport const initialState = {\r\n  imgData: null,\r\n  newData: null,\r\n  x1: 0,\r\n  x2: 0,\r\n  y1: 0,\r\n  y2: 0,\r\n  sample: false,\r\n  pixel: null\r\n};\r\n\r\nconst mapEffectToFunction = { GRAYSCALE: grayscale, NEGATIVE: negative, BRIGHT: lighten, REPLACE: changeImgData };\r\n\r\nfunction imageReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET\":\r\n      return action.isNewCanvas ? { ...state, newData: action.data } : { ...state, imgData: action.data };\r\n    case \"REFRESH\":\r\n      return { ...state, x1: 0, x2: 0, y1: 0, y2: 0, sample: false, pixel: null };\r\n    case \"POINT\":\r\n      return action.isNewCanvas ? { ...state, x2: action.x, y2: action.y } : { ...state, x1: action.x, y1: action.y };\r\n    case \"PIXEL\":\r\n      changeCursor(state.sample);\r\n      return action.pixel ? { ...state, sample: false, pixel: action.pixel } : { ...state, sample: false };\r\n    case \"SAMPLE\":\r\n      changeCursor(state.sample);\r\n      return { ...state, sample: !state.sample };\r\n    case \"BASIC\":\r\n      if (state.newData) {\r\n        let effect = mapEffectToFunction[action.effect];\r\n        copy(state.imgData.data, state.newData.data);\r\n        if (action.payload) {\r\n          effect(state.newData.data, ...action.payload);\r\n        } else {\r\n          effect(state.newData.data);\r\n        }\r\n        redraw(state.x2, state.y2, state.newData);\r\n      }\r\n      return state;\r\n    case \"SECTION\": {\r\n      if (state.pixel && state.newData) {\r\n        let section = getSection(state.imgData, state.pixel, action.tolerance);\r\n        let data = state.newData.data;\r\n        copy(state.imgData.data, state.newData.data);\r\n        // Replace the colour of each pixel in the section\r\n        let newVal = action.newVal;\r\n        section.forEach(pixel => {\r\n          data[pixel] = newVal[0];\r\n          data[pixel + 1] = newVal[1];\r\n          data[pixel + 2] = newVal[2];\r\n          data[pixel + 3] = newVal[3];\r\n        });\r\n        redraw(state.x2, state.y2, state.newData);\r\n      }\r\n      return state;\r\n    }\r\n    case \"SWAP\": {\r\n      if (state.imgData) {\r\n        let [canvasName, imgFile, x, y] = action.copyToNew\r\n          ? [\"newCanvas\", state.imgData, state.x2, state.y2]\r\n          : [\"canvas\", state.newData, state.x1, state.y1];\r\n        const canvas = document.getElementById(canvasName);\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.putImageData(imgFile, -x, -y, x, y, canvas.scrollWidth, canvas.scrollHeight);\r\n        let data = new Uint8ClampedArray(imgFile.data);\r\n        let copy = new ImageData(data, imgFile.width, imgFile.height);\r\n        return action.copyToNew ? { ...state, newData: copy } : { ...state, imgData: copy };\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Redraw the new canvas\r\nfunction redraw(x, y, data) {\r\n  let canvas = document.getElementById(\"newCanvas\");\r\n  canvas.getContext(\"2d\").putImageData(data, -x, -y, x, y, canvas.scrollWidth, canvas.scrollHeight);\r\n}\r\n\r\n// Copy the image data from data1 into data2\r\nfunction copy(data1, data2) {\r\n  data1.forEach((pixel, index) => (data2[index] = pixel));\r\n}\r\n\r\n// Change the cursor style\r\nfunction changeCursor(sample) {\r\n  document.getElementById(\"container\").className = sample ? \"container\" : \"container cross\";\r\n}\r\n\r\nexport default imageReducer;\r\n","export const setImgData = (isNewCanvas, data) => dispatch => {\r\n  dispatch({ type: \"SET\", isNewCanvas, data });\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const refresh = () => ({ type: \"REFRESH\" });\r\n\r\nexport const updatePoint = (isNewCanvas, x, y) => ({ type: \"POINT\", isNewCanvas, x, y });\r\n\r\nexport const updatePixel = (pixel = null) => ({ type: \"PIXEL\", pixel });\r\n\r\nexport const switchSample = () => ({ type: \"SAMPLE\" });\r\n\r\nexport const basicImgEffect = (effect, payload) => ({ type: \"BASIC\", effect, payload });\r\n\r\nexport const section = (newVal, tolerance) => ({ type: \"SECTION\", newVal, tolerance });\r\n\r\nexport const swap = copyToNew => ({ type: \"SWAP\", copyToNew });\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { switchSample, basicImgEffect, section } from \"./Actions/toolActions\";\r\n\r\nclass Replace extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fcr: 255,\r\n      fcg: 255,\r\n      fcb: 255,\r\n      fca: 255,\r\n      rcr: 255,\r\n      rcg: 255,\r\n      rcb: 255,\r\n      rca: 255,\r\n      tcr: 10,\r\n      tcg: 10,\r\n      tcb: 10,\r\n      tca: 10\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.replace = this.replace.bind(this);\r\n    this.section = this.section.bind(this);\r\n    this.click = this.click.bind(this);\r\n    this.navigate = this.navigate.bind(this);\r\n  }\r\n\r\n  onChange(event) {\r\n    let value = Number(event.target.value);\r\n    if (!isNaN(value) && value >= 0 && value <= 255) {\r\n      value = Number(value.toFixed());\r\n      let state = { [event.target.name]: value };\r\n      this.setState(state);\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, prevState) {\r\n    if (props.pixel) {\r\n      let pixel = props.pixel;\r\n      if (prevState.pixel && prevState.pixel[4] === pixel[4] && prevState.pixel[5] === pixel[5]) {\r\n        return null;\r\n      }\r\n      return { fcr: pixel[0], fcg: pixel[1], fcb: pixel[2], fca: pixel[3], pixel };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  replace(event) {\r\n    event.preventDefault();\r\n    //this.props.replace(this.state);\r\n    let state = this.state;\r\n    let oldVal = [state.fcr, state.fcg, state.fcb, state.fca];\r\n    let newVal = [state.rcr, state.rcg, state.rcb, state.rca];\r\n    let tolerance = [state.tcr, state.tcg, state.tcb, state.tca];\r\n    this.props.basicImgEffect(\"REPLACE\", [oldVal, newVal, tolerance]);\r\n  }\r\n\r\n  click(event) {\r\n    event.preventDefault();\r\n    this.props.switchSample();\r\n  }\r\n\r\n  section(event) {\r\n    event.preventDefault();\r\n    let pixel = this.props.pixel;\r\n    let state = this.state;\r\n    if (pixel && pixel[0] === state.fcr && pixel[1] === state.fcg && pixel[2] === state.fcb && pixel[3] === state.fca) {\r\n      let newVal = [state.rcr, state.rcg, state.rcb, state.rca];\r\n      let tolerance = [state.tcr, state.tcg, state.tcb, state.tca];\r\n      this.props.section(newVal, tolerance);\r\n    } else {\r\n      alert(\"You must first specify a section to paint. Click the cursor icon and then click on an area of the canvas.\");\r\n    }\r\n  }\r\n\r\n  // Helps the user navigate the input boxes using arrow keys\r\n  navigate(event) {\r\n    let key = event.which;\r\n    if (key >= 37 && key <= 40) {\r\n      let parent = event.target.parentElement;\r\n      let name = event.target.name;\r\n      let start = name[0];\r\n      let end = name[2];\r\n      let num = start === \"f\" ? 1 : start === \"r\" ? 2 : 3;\r\n      num += end === \"r\" ? 0 : end === \"g\" ? 3 : end === \"b\" ? 6 : 9;\r\n      if (key === 37) {\r\n        // Left\r\n        num -= event.target.selectionStart === 0 ? 1 : num;\r\n      } else if (key === 38) {\r\n        // Up\r\n        num -= 3;\r\n      } else if (key === 39) {\r\n        // Right\r\n        num += event.target.selectionStart === event.target.value.length ? 1 : 12;\r\n      } else {\r\n        // Down\r\n        num += 3;\r\n      }\r\n      if (num >= 1 && num <= 12) {\r\n        parent[num].focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"e\" className=\"replaceGrid\" onKeyDown={this.navigate}>\r\n        <label></label>\r\n        <span>\r\n          <label>Find</label>\r\n          <button onClick={this.click} title=\"Click section on canvas\" className=\"infoTool\">\r\n            <i id=\"clickIcon\">&nbsp;&nbsp;&nbsp;&nbsp;</i>\r\n          </button>\r\n        </span>\r\n        <label>Replace</label>\r\n        <label>Tolerance</label>\r\n        <label>Red:</label>\r\n        <input type=\"text\" value={this.state.fcr} onChange={e => this.onChange(e)} name=\"fcr\" />\r\n        <input type=\"text\" value={this.state.rcr} onChange={e => this.onChange(e)} name=\"rcr\" />\r\n        <input type=\"text\" value={this.state.tcr} onChange={e => this.onChange(e)} name=\"tcr\" />\r\n        <label>Green:</label>\r\n        <input type=\"text\" value={this.state.fcg} onChange={e => this.onChange(e)} name=\"fcg\" />\r\n        <input type=\"text\" value={this.state.rcg} onChange={e => this.onChange(e)} name=\"rcg\" />\r\n        <input type=\"text\" value={this.state.tcg} onChange={e => this.onChange(e)} name=\"tcg\" />\r\n        <label>Blue:</label>\r\n        <input type=\"text\" value={this.state.fcb} onChange={e => this.onChange(e)} name=\"fcb\" />\r\n        <input type=\"text\" value={this.state.rcb} onChange={e => this.onChange(e)} name=\"rcb\" />\r\n        <input type=\"text\" value={this.state.tcb} onChange={e => this.onChange(e)} name=\"tcb\" />\r\n        <label>Alpha:</label>\r\n        <input type=\"text\" value={this.state.fca} onChange={e => this.onChange(e)} name=\"fca\" />\r\n        <input type=\"text\" value={this.state.rca} onChange={e => this.onChange(e)} name=\"rca\" />\r\n        <input type=\"text\" value={this.state.tca} onChange={e => this.onChange(e)} name=\"tca\" />\r\n        <div id=\"replaceBtns\">\r\n          <button onClick={this.replace}>Replace Colour</button>\r\n          <button onClick={this.section}>Replace Section Colour</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    pixel: state.pixel\r\n  }),\r\n  { switchSample, basicImgEffect, section }\r\n)(Replace);\r\n","import React from \"react\";\r\nimport Replace from \"./Replace\";\r\nimport \"./Styles/Tools.css\";\r\n\r\nfunction Tools() {\r\n  return (\r\n    <div>\r\n      <Replace />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tools;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { basicImgEffect } from \"./Actions/toolActions\";\r\n\r\nclass Lighten extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { val: 0 };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    let val = event.target.value;\r\n    if (!isNaN(val) && val >= 0 && val <= 500) {\r\n      val = Number(Number(val).toFixed());\r\n      this.setState({ val });\r\n    }\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.basicImgEffect(\"BRIGHT\", [this.props.multiplier(this.state.val)]);\r\n  }\r\n\r\n  render() {\r\n    let text = this.props.text || \"Lighten\";\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={this.handleClick}> {text}</button>\r\n        <input type=\"text\" value={this.state.val} onChange={this.handleChange} style={{ width: \"25px\" }} />\r\n        <label>%</label>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  () => ({}),\r\n  { basicImgEffect }\r\n)(Lighten);\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { basicImgEffect } from \"./Actions/toolActions\";\r\nimport Lighten from \"./Lighten\";\r\n\r\nfunction SimpleTools() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr\", justifyItems: \"center\" }}>\r\n      <div>\r\n        <button onClick={() => dispatch(basicImgEffect(\"GRAYSCALE\"))}> Grayscale </button>\r\n        <button onClick={() => dispatch(basicImgEffect(\"NEGATIVE\"))}> Negative </button>\r\n        <Lighten multiplier={ratio => ratio / 100 + 1} />\r\n        <Lighten multiplier={ratio => 100 / (ratio + 100)} text={\"Darken\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SimpleTools;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { swap } from \"./Actions/toolActions\";\r\n\r\nfunction Upload(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <input id=\"upload\" type=\"file\" onChange={props.change} hidden />\r\n      <button onClick={() => document.getElementById(\"upload\").click()}>Upload Image</button>\r\n      <button onClick={() => dispatch(swap(false))}>\r\n        <i id=\"leftIcon\" title=\"Copy new preview to old\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { swap } from \"./Actions/toolActions\";\r\n\r\nfunction Download(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <button onClick={props.download}>Download</button>\r\n      <button onClick={() => dispatch(swap(true))}>\r\n        <i id=\"rightIcon\" title=\"Copy old preview to new\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <a id=\"download\" href=\"/\" style={{ display: \"none\" }} download=\"converted\">\r\n        Download\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Download;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setImgData, refresh, updatePoint, updatePixel, basicImgEffect, swap } from \"./Actions/toolActions\";\nimport Tools from \"./Tools\";\nimport SimpleTools from \"./SimpleTools\";\nimport \"./Styles/App.css\";\nimport Upload from \"./Upload\";\nimport Download from \"./Download\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.imageChange = this.imageChange.bind(this);\n    this.download = this.download.bind(this);\n    this.recenter = this.recenter.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // Fires when a new image is uploaded\n  imageChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      let img = new Image();\n      const reader = new FileReader();\n      reader.onload = read => {\n        img.onload = imgEvent => {\n          // Get image data\n          var canvas = document.createElement(\"canvas\");\n          let img = imgEvent.target;\n          let width = img.width;\n          let height = img.height;\n          canvas.width = width;\n          canvas.height = height;\n          canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n          let imgData = canvas.getContext(\"2d\").getImageData(0, 0, width, height);\n\n          // Draw image onto canvases\n          canvas = document.getElementById(\"canvas\");\n          canvas.width = canvas.scrollWidth;\n          canvas.height = canvas.scrollHeight;\n          const ctx = canvas.getContext(\"2d\");\n          canvas = document.getElementById(\"newCanvas\");\n          canvas.width = canvas.scrollWidth;\n          canvas.height = canvas.scrollHeight;\n          this.props.setImgData(false, imgData).then(() => {\n            ctx.putImageData(this.props.imgData, 0, 0, 0, 0, canvas.scrollWidth, canvas.scrollHeight);\n            // copy image data into other canvas\n            this.props.swap(true);\n          });\n\n          // refresh state\n          this.props.refresh();\n        };\n\n        let filedata = read.target.result;\n        if (filedata.startsWith(\"data:image\")) {\n          img.src = filedata;\n        } else {\n          alert(\"That file type is not supported\");\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n    // Prevent file name from appearing\n    //let name = event.target.value.substr(event.target.value.lastIndexOf(\"\\\\\") + 1);\n    event.target.value = \"\";\n  }\n\n  // Download new image\n  download() {\n    const link = document.getElementById(\"download\");\n    if (this.props.imgData) {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = this.props.imgData.width;\n      canvas.height = this.props.imgData.height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.putImageData(this.props.newData, 0, 0);\n      link.setAttribute(\"href\", canvas.toDataURL());\n      link.click();\n    }\n  }\n\n  // Center the image on canvas to the clicked point\n  recenter(event) {\n    let canvas = event.target;\n    if (this.props.imgData && (this.props.imgData.width > canvas.width || this.props.imgData.height > canvas.height)) {\n      let ctx = canvas.getContext(\"2d\");\n      let [x, y, imgData] =\n        canvas.id === \"canvas\"\n          ? [this.props.x1, this.props.y1, this.props.imgData]\n          : [this.props.x2, this.props.y2, this.props.newData];\n      let half = canvas.width / 2;\n\n      // x/y + pageX/pageY + offsetLeft/offsetTop = x/y coordinate of clicked point\n      // Subtract by half to get the top left coordinate if clicked point was the center\n      let point = [x + event.pageX - canvas.offsetLeft - half, y + event.pageY - canvas.offsetTop - half];\n      // Compensate for boundaries\n      if (imgData.width < canvas.width || point[0] < 0) {\n        point[0] = 0;\n      } else {\n        point[0] = point[0] > imgData.width - canvas.width ? imgData.width - canvas.width : point[0];\n      }\n      if (imgData.height < canvas.height || point[1] < 0) {\n        point[1] = 0;\n      } else {\n        point[1] = point[1] > imgData.height - canvas.height ? imgData.height - canvas.height : point[1];\n      }\n\n      // Recenter image if the center point has changed\n      if (point[0] !== x || point[1] !== y) {\n        // Update state\n        this.props.updatePoint(canvas.id === \"newCanvas\", point[0], point[1]);\n        // Construct the recentered image data\n        let [width1, height1] = [imgData.width, imgData.height];\n        let [width2, height2] = [width1 - point[0], height1 - point[1]];\n        // Construct only the parts we need\n        width2 = Math.min(canvas.width, width2);\n        height2 = Math.min(canvas.height, height2);\n        let data = new Uint8ClampedArray(width2 * height2 * 4);\n        // Copy the image data\n        for (let row = 0; row < height2; row++) {\n          for (let col = 0; col < width2; col++) {\n            for (let val = 0; val < 4; val++) {\n              data[row * width2 * 4 + col * 4 + val] =\n                imgData.data[(point[1] + row) * width1 * 4 + (point[0] + col) * 4 + val];\n            }\n          }\n        }\n        // Draw image\n        imgData = new ImageData(data, width2, height2);\n        ctx.putImageData(imgData, 0, 0);\n      }\n    }\n  }\n\n  handleClick(event) {\n    if (this.props.imgData && this.props.sample && event.target.id === \"canvas\") {\n      let canvas = event.target;\n      let point = [event.pageX - canvas.offsetLeft + this.props.x1, event.pageY - canvas.offsetTop + this.props.y1];\n      if (point[0] >= 0 && point[0] <= this.props.imgData.width && point[1] >= 0 && point[1] <= this.props.imgData.height) {\n        let r = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4];\n        let g = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4 + 1];\n        let b = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4 + 2];\n        let a = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4 + 3];\n        let pixel = [r, g, b, a, point[0], point[1]];\n        this.props.updatePixel(pixel);\n      }\n    } else if (this.props.sample) {\n      this.props.updatePixel();\n    } else {\n      this.recenter(event);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\" id={\"container\"}>\n        <div className=\"grid\">\n          <label>Old Preview</label>\n          <label>New Preview</label>\n\n          <div className=\"transparent\">\n            <canvas id=\"canvas\" onClick={this.handleClick}></canvas>\n          </div>\n          <div className=\"transparent\">\n            <canvas id=\"newCanvas\" onClick={this.handleClick}></canvas>\n          </div>\n\n          <Upload change={this.imageChange} />\n          <Download download={this.download} />\n        </div>\n\n        <Tools />\n        <SimpleTools />\n      </div>\n    );\n  }\n\n  // No need to rerender since the canvas rerenders on its own\n  shouldComponentUpdate() {\n    return false;\n  }\n}\n\nexport default connect(\n  state => ({ ...state }),\n  { setImgData, refresh, updatePoint, updatePixel, basicImgEffect, swap }\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport imageReducer, { initialState } from \"./Reducers/imageReducer.js\";\nimport App from \"./App\";\n\nlet store = createStore(imageReducer, initialState, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}