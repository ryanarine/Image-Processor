{"version":3,"sources":["Replace.js","Section.js","Tools.js","ToolFunctions.js","App.js","index.js"],"names":["btnStyle","display","margin","Replace","state","fcr","fcg","fcb","fca","rcr","rcg","rcb","rca","tcr","tcg","tcb","tca","onChange","bind","event","value","Number","target","isNaN","name","this","setState","onSubmit","e","props","submit","className","type","id","style","Component","Section","pixel","onClick","click","title","Tools","replace","file","input","preventDefault","replaceColour","isMatch","pixel1","pixel2","tolerance","match","offset","Math","abs","App","imgData","newData","x1","x2","y1","y2","sample","imageChange","download","loadImage","swapImage","recentre","handleClick","replaceSection","files","img","Image","reader","FileReader","onload","read","imgEvent","canvas","document","createElement","width","height","getContext","drawImage","getImageData","filedata","result","startsWith","src","alert","readAsDataURL","getElementById","scrollWidth","scrollHeight","ctx","putImageData","copyNew","canvasName","imgFile","data","Uint8ClampedArray","copy","ImageData","oldVal","newVal","file1","file2","imgData1","imgData2","i","length","changeImgData","link","setAttribute","toDataURL","clearRect","x","y","half","point","pageX","offsetLeft","pageY","offsetTop","width1","height1","width2","height2","row","col","val","newColour","section","adjacent","visited","Array","oldColour","frontier","pop","colour","push","forEach","adj","getSection","cls","hidden","href","ReactDOM","render"],"mappings":"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","file":"static/js/main.9825e3dd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst btnStyle = {\r\n  display: \"block\",\r\n  margin: \"10px auto\"\r\n};\r\n\r\nclass Replace extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fcr: 255,\r\n      fcg: 255,\r\n      fcb: 255,\r\n      fca: 255,\r\n      rcr: 255,\r\n      rcg: 255,\r\n      rcb: 255,\r\n      rca: 255,\r\n      tcr: 10,\r\n      tcg: 10,\r\n      tcb: 10,\r\n      tca: 10\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(event) {\r\n    let value = Number(event.target.value);\r\n    if (!isNaN(value) && value >= 0 && value <= 255) {\r\n      let state = { [event.target.name]: value };\r\n      this.setState(state);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={e => this.props.submit(this.state, e)} className=\"replaceGrid\">\r\n        <label></label>\r\n        <label>Find</label>\r\n        <label>Replace</label>\r\n        <label>Tolerance</label>\r\n        <label>Red:</label>\r\n        <input type=\"text\" value={this.state.fcr} onChange={e => this.onChange(e)} name=\"fcr\" />\r\n        <input type=\"text\" value={this.state.rcr} onChange={e => this.onChange(e)} name=\"rcr\" />\r\n        <input type=\"text\" value={this.state.tcr} onChange={e => this.onChange(e)} name=\"tcr\" />\r\n        <label>Green:</label>\r\n        <input type=\"text\" value={this.state.fcg} onChange={e => this.onChange(e)} name=\"fcg\" />\r\n        <input type=\"text\" value={this.state.rcg} onChange={e => this.onChange(e)} name=\"rcg\" />\r\n        <input type=\"text\" value={this.state.tcg} onChange={e => this.onChange(e)} name=\"tcg\" />\r\n        <label>Blue:</label>\r\n        <input type=\"text\" value={this.state.fcb} onChange={e => this.onChange(e)} name=\"fcb\" />\r\n        <input type=\"text\" value={this.state.rcb} onChange={e => this.onChange(e)} name=\"rcb\" />\r\n        <input type=\"text\" value={this.state.tcb} onChange={e => this.onChange(e)} name=\"tcb\" />\r\n        <label>Alpha:</label>\r\n        <input type=\"text\" value={this.state.fca} onChange={e => this.onChange(e)} name=\"fca\" />\r\n        <input type=\"text\" value={this.state.rca} onChange={e => this.onChange(e)} name=\"rca\" />\r\n        <input type=\"text\" value={this.state.tca} onChange={e => this.onChange(e)} name=\"tca\" />\r\n        <button id=\"replaceBtn\" style={btnStyle} type=\"submit\">\r\n          Replace Colour\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Replace;\r\n","import React, { Component } from \"react\";\r\n\r\nconst btnStyle = {\r\n  display: \"block\",\r\n  margin: \"10px auto\"\r\n};\r\n\r\nclass Section extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rcr: 255,\r\n      rcg: 255,\r\n      rcb: 255,\r\n      rca: 255,\r\n      tcr: 10,\r\n      tcg: 10,\r\n      tcb: 10,\r\n      tca: 10\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(event) {\r\n    let value = Number(event.target.value);\r\n    if (!isNaN(value) && value >= 0 && value <= 255) {\r\n      let state = { [event.target.name]: value };\r\n      this.setState(state);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let pixel = this.props.pixel ? this.props.pixel : [0, 0, 0, 0, 0, 0];\r\n    return (\r\n      <form onSubmit={e => this.props.submit(e, this.state)} className=\"sectionGrid\">\r\n        <label></label>\r\n        <span>\r\n          <label>Find</label>\r\n          <i id=\"clickIcon\" onClick={this.props.click} title=\"Click section on canvas\">\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n          </i>\r\n        </span>\r\n        <label>Replace</label>\r\n        <label>Tolerance</label>\r\n        <label>Red:</label>\r\n        <label>{pixel[0]}</label>\r\n        <input type=\"text\" value={this.state.rcr} onChange={e => this.onChange(e)} name=\"rcr\" />\r\n        <input type=\"text\" value={this.state.tcr} onChange={e => this.onChange(e)} name=\"tcr\" />\r\n        <label>Green:</label>\r\n        <label>{pixel[1]}</label>\r\n        <input type=\"text\" value={this.state.rcg} onChange={e => this.onChange(e)} name=\"rcg\" />\r\n        <input type=\"text\" value={this.state.tcg} onChange={e => this.onChange(e)} name=\"tcg\" />\r\n        <label>Blue:</label>\r\n        <label>{pixel[2]}</label>\r\n        <input type=\"text\" value={this.state.rcb} onChange={e => this.onChange(e)} name=\"rcb\" />\r\n        <input type=\"text\" value={this.state.tcb} onChange={e => this.onChange(e)} name=\"tcb\" />\r\n        <label>Alpha:</label>\r\n        <label>{pixel[3]}</label>\r\n        <input type=\"text\" value={this.state.rca} onChange={e => this.onChange(e)} name=\"rca\" />\r\n        <input type=\"text\" value={this.state.tca} onChange={e => this.onChange(e)} name=\"tca\" />\r\n        <label>X:</label>\r\n        <label>{pixel[4]}</label>\r\n        <label id=\"sectionBlank\"></label>\r\n        <label>Y:</label>\r\n        <label>{pixel[5]}</label>\r\n        <button id=\"sectionBtn\" style={btnStyle} type=\"submit\">\r\n          Replace Section Colour\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport Replace from \"./Replace\";\r\nimport \"./Tools.css\";\r\nimport Section from \"./Section\";\r\n\r\nfunction replaceColour(replace, file, input, event) {\r\n  event.preventDefault();\r\n  let oldVal = [input.fcr, input.fcg, input.fcb, input.fca];\r\n  let newVal = [input.rcr, input.rcg, input.rcb, input.rca];\r\n  let tolerance = [input.tcr, input.tcg, input.tcb, input.tca];\r\n  replace(file, oldVal, newVal, tolerance);\r\n}\r\n\r\nfunction Tools(props) {\r\n  return (\r\n    <div>\r\n      <Replace submit={(state, event) => replaceColour(props.replace, props.file, state, event)} />\r\n      <Section click={props.click} pixel={props.pixel} submit={props.submit} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tools;\r\n","/*\r\n  -file1 and file2 are both ImageData objects\r\n  -oldVal and newVal are pixels (rgba values in an array)\r\n  -tolerance is an rgba range\r\n  searches the pixels in file1 looking for a match with oldVal within the given tolerance range.\r\n  corresponding pixels in file2 that were matched are changed to newVal\r\n  corresponding pixels in file2 that were unmatched are changed to the unmatched pixel\r\n  */\r\nexport function changeImgData(file1, file2, oldVal, newVal, tolerance) {\r\n  let match = false;\r\n  let imgData1 = file1.data;\r\n  let imgData2 = file2.data;\r\n  for (let i = 0; i < imgData1.length; i += 4) {\r\n    match = isMatch([imgData1[i], imgData1[i + 1], imgData1[i + 2], imgData1[i + 3]], oldVal, tolerance);\r\n    if (match) {\r\n      for (let offset = 0; offset < 4; offset++) {\r\n        imgData2[i + offset] = newVal[offset];\r\n      }\r\n    } else {\r\n      for (let offset = 0; offset < 4; offset++) {\r\n        imgData2[i + offset] = imgData1[i + offset];\r\n      }\r\n    }\r\n  }\r\n}\r\n/*\r\n  -Image is an ImageData objects\r\n  -pixel ([r,g,b,a,x,y]) is a pixel in Image containing its x and y coordinate\r\n  -tolerance is an rgba range\r\n  -Returns an array of pixel indices that corresponds to a section in Image originating at pixel with the given tolerance range\r\n*/\r\nexport function getSection(Image, pixel, tolerance) {\r\n  let [width, height, data] = [Image.width, Image.height, Image.data];\r\n  // Adjacent offsets of pixels starting from 0 deg bearing going clockwise\r\n  let adjacent = [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]];\r\n  // visited[i] indicates whether pixel i has been visited or not\r\n  let visited = new Array(width * height);\r\n  // The array of pixels to return\r\n  let section = [];\r\n  let oldColour = [pixel[0], pixel[1], pixel[2], pixel[3]];\r\n  let [x, y] = [pixel[4], pixel[5]];\r\n  // The array of pixels that need to be checked if they belong to the section\r\n  let frontier = [[x, y]];\r\n  while (frontier.length !== 0) {\r\n    [x, y] = frontier.pop();\r\n    // Check if pixel has valid coordinates\r\n    if (x < 0 || x > width || y < 0 || y > height) {\r\n      continue;\r\n    }\r\n    // Mark the pixel visited\r\n    visited[y * width + x] = true;\r\n    // Get the colour of the pixel\r\n    let colour = [];\r\n    for (let offset = 0; offset < 4; offset++) {\r\n      colour.push(data[y * width * 4 + x * 4 + offset]);\r\n    }\r\n    // Check that the pixel colour is a match\r\n    if (isMatch(colour, oldColour, tolerance)) {\r\n      // Add pixel to section\r\n      section.push(y * width * 4 + x * 4);\r\n      // Add adjacent pixels to frontier\r\n      adjacent.forEach(adj => {\r\n        // If they have not been visited before\r\n        if (!visited[(y + adj[1]) * width + x + adj[0]]) {\r\n          frontier.push([x + adj[0], y + adj[1]]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return section;\r\n}\r\n\r\n// returns true if the two pixels are similar enough according to the tolerance range\r\nexport function isMatch(pixel1, pixel2, tolerance) {\r\n  let match = true;\r\n  for (let offset = 0; offset < 4; offset++) {\r\n    match = match && Math.abs(pixel1[offset] - pixel2[offset]) <= tolerance[offset];\r\n  }\r\n  return match;\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Tools from \"./Tools\";\nimport { changeImgData, getSection } from \"./ToolFunctions\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { imgData: null, newData: null, x1: 0, x2: 0, y1: 0, y2: 0, sample: false, pixel: null };\n    this.imageChange = this.imageChange.bind(this);\n    this.download = this.download.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.swapImage = this.swapImage.bind(this);\n    this.replace = this.replace.bind(this);\n    this.recentre = this.recentre.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.replaceSection = this.replaceSection.bind(this);\n  }\n\n  imageChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      let img = new Image();\n      const reader = new FileReader();\n      reader.onload = read => {\n        img.onload = imgEvent => {\n          var canvas = document.createElement(\"canvas\");\n          let img = imgEvent.target;\n          let width = img.width;\n          let height = img.height;\n          canvas.width = width;\n          canvas.height = height;\n          canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n          let imgData = canvas.getContext(\"2d\").getImageData(0, 0, width, height);\n          this.setState({ imgData }, this.loadImage);\n        };\n        let filedata = read.target.result;\n        if (filedata.startsWith(\"data:image\")) {\n          img.src = filedata;\n        } else {\n          alert(\"That file type is not supported\");\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n    event.target.value = \"\";\n  }\n\n  loadImage() {\n    var canvas = document.getElementById(\"canvas\");\n    canvas.width = canvas.scrollWidth;\n    canvas.height = canvas.scrollHeight;\n    const ctx = canvas.getContext(\"2d\");\n    canvas = document.getElementById(\"newCanvas\");\n    canvas.width = canvas.scrollWidth;\n    canvas.height = canvas.scrollHeight;\n    ctx.putImageData(this.state.imgData, 0, 0);\n    // copy image data into other canvas\n    this.swapImage(false);\n  }\n\n  swapImage(copyNew) {\n    if (this.state.imgData) {\n      let [canvasName, imgFile] = copyNew ? [\"canvas\", this.state.newData] : [\"newCanvas\", this.state.imgData];\n      const ctx = document.getElementById(canvasName).getContext(\"2d\");\n      ctx.putImageData(imgFile, 0, 0);\n      let data = new Uint8ClampedArray(imgFile.data);\n      let copy = new ImageData(data, imgFile.width, imgFile.height);\n      copyNew ? this.setState({ imgData: copy, x1: 0, y1: 0 }) : this.setState({ newData: copy, x2: 0, y2: 0 });\n    }\n  }\n\n  replace(file, oldVal, newVal, tolerance) {\n    if (file) {\n      changeImgData(this.state.imgData, file, oldVal, newVal, tolerance);\n      var canvas2 = document.getElementById(\"newCanvas\").getContext(\"2d\");\n      canvas2.putImageData(file, 0, 0);\n    }\n  }\n\n  // Download new image\n  download() {\n    const link = document.getElementById(\"download\");\n    if (this.state.imgData) {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = this.state.imgData.width;\n      canvas.height = this.state.imgData.height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.putImageData(this.state.newData, 0, 0);\n      link.setAttribute(\"href\", canvas.toDataURL());\n      link.click();\n    }\n  }\n\n  recentre(event) {\n    let canvas = event.target;\n    if (this.state.imgData && (this.state.imgData.width > canvas.width || this.state.imgData.height > canvas.height)) {\n      let ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      let x = canvas.id === \"canvas\" ? this.state.x1 : this.state.x2;\n      let y = canvas.id === \"canvas\" ? this.state.y1 : this.state.y2;\n      let imgData = canvas.id === \"canvas\" ? this.state.imgData : this.state.newData;\n      let half = canvas.width / 2;\n      let point = [x + event.pageX - canvas.offsetLeft - half, y + event.pageY - canvas.offsetTop - half];\n      point[0] = point[0] < 0 ? 0 : point[0];\n      point[0] = point[0] > imgData.width - canvas.width ? imgData.width - canvas.width : point[0];\n      point[0] = imgData.width < canvas.width ? 0 : point[0];\n      point[1] = point[1] < 0 ? 0 : point[1];\n      point[1] = point[1] > imgData.height - canvas.height ? imgData.height - canvas.height : point[1];\n      point[1] = imgData.width < canvas.width ? 0 : point[1];\n      canvas.id === \"canvas\" ? this.setState({ x1: point[0], y1: point[1] }) : this.setState({ x2: point[0], y2: point[1] });\n      let [width1, height1] = [imgData.width, imgData.height];\n      let [width2, height2] = [width1 - point[0], height1 - point[1]];\n      let data = new Uint8ClampedArray(width2 * height2 * 4);\n      for (let row = 0; row < height2; row++) {\n        for (let col = 0; col < width2; col++) {\n          for (let val = 0; val < 4; val++) {\n            data[row * width2 * 4 + col * 4 + val] =\n              imgData.data[(point[1] + row) * width1 * 4 + (point[0] + col) * 4 + val];\n          }\n        }\n      }\n      imgData = new ImageData(data, width2, height2);\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  handleClick(event) {\n    if (this.state.imgData && this.state.sample && event.target.id === \"canvas\") {\n      let canvas = event.target;\n      let point = [event.pageX - canvas.offsetLeft + this.state.x1, event.pageY - canvas.offsetTop + this.state.y1];\n      if (point[0] >= 0 && point[0] <= this.state.imgData.width && point[1] >= 0 && point[1] <= this.state.imgData.height) {\n        let r = this.state.imgData.data[point[1] * this.state.imgData.width * 4 + point[0] * 4];\n        let g = this.state.imgData.data[point[1] * this.state.imgData.width * 4 + point[0] * 4 + 1];\n        let b = this.state.imgData.data[point[1] * this.state.imgData.width * 4 + point[0] * 4 + 2];\n        let a = this.state.imgData.data[point[1] * this.state.imgData.width * 4 + point[0] * 4 + 3];\n        let pixel = [r, g, b, a, point[0], point[1]];\n        this.setState({ sample: false, pixel });\n      }\n    } else {\n      this.recentre(event);\n    }\n  }\n\n  replaceSection(event, state) {\n    event.preventDefault();\n    if (this.state.pixel) {\n      let newColour = [state.rcr, state.rcg, state.rcb, state.rca];\n      let tolerance = [state.tcr, state.tcg, state.tcb, state.tca];\n      let section = getSection(this.state.imgData, this.state.pixel, tolerance);\n      let data = this.state.newData.data;\n      // Replace the colour of each pixel in the section\n      section.forEach(pixel => {\n        data[pixel] = newColour[0];\n        data[pixel + 1] = newColour[1];\n        data[pixel + 2] = newColour[2];\n        data[pixel + 3] = newColour[3];\n      });\n      // Redraw the image\n      document\n        .getElementById(\"newCanvas\")\n        .getContext(\"2d\")\n        .putImageData(this.state.newData, 0, 0);\n    }\n  }\n\n  render() {\n    let cls = this.state.sample ? \"container cross\" : \"container\";\n    return (\n      <div className={cls}>\n        <div className=\"grid\">\n          <label>Old Preview</label>\n          <label>New Preview</label>\n          <div className=\"transparent\">\n            <canvas id=\"canvas\" onClick={this.handleClick}></canvas>\n          </div>\n          <div className=\"transparent\">\n            <canvas id=\"newCanvas\" onClick={this.handleClick}></canvas>\n          </div>\n          <input id=\"upload\" type=\"file\" onChange={this.imageChange} hidden />\n          <button onClick={() => document.getElementById(\"upload\").click()}>Upload Image</button>\n          <button onClick={this.download}>Download</button>\n          <button onClick={() => this.swapImage(true)}>Copy new into old</button>\n          <button onClick={() => this.swapImage(false)}>Copy old into new</button>\n        </div>\n        <a id=\"download\" href=\"/\" style={{ display: \"none\" }} download=\"converted\">\n          Download\n        </a>\n        <Tools\n          replace={this.replace}\n          file={this.state.newData}\n          click={() => this.setState({ sample: !this.state.sample })}\n          pixel={this.state.pixel}\n          submit={this.replaceSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}