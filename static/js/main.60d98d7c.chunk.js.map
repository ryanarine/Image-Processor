{"version":3,"sources":["ToolFunctions.js","Reducers/imageReducer.js","Reducers/replaceReducer.js","Reducers/rootReducer.js","Actions/toolActions.js","Actions/replaceActions.js","Options.js","Constants.js","Find.js","Replace.js","Tolerance.js","ReplaceTool.js","Tools.js","Lighten.js","SimpleTools.js","Upload.js","Download.js","App.js","index.js"],"names":["isMatch","comparisons","pixel1","pixel2","tolerance","match","offset","Math","abs","alert","operate","operators","data","pixel","index","initialState","imgData","newData","x1","x2","y1","y2","pixelSample","colourSample","zoom1","zoom2","mapEffectToFunction","GRAYSCALE","avg","i","length","round","NEGATIVE","BRIGHT","mult","REPLACE","oldVal","newVal","smallestSize","zoomRatio","boundary","point","canvas","imgWidth","imgHeight","width","height","redraw","x","y","canvasName","document","getElementById","getContext","putImageData","copy","data1","data2","forEach","changeCursor","sample","cursor","className","imageReducer","state","action","type","isNewCanvas","fileName","name","id","pageX","pageY","halfX","halfY","ratioX","scrollWidth","ratioY","scrollHeight","offsetLeft","offsetTop","centerPoint","ctx","width1","height1","width2","height2","min","Uint8ClampedArray","row","col","val","ImageData","effect","payload","body","style","section","Image","oldColour","adjacent","visited","Array","frontier","pop","colour","push","adj","getSection","copyToNew","imgFile","zoom","isZoomOut","newZoom","max","cc","fc","oc","rc","tc","rModal","fModal","replaceReducer","value","startsWith","operator","isNaN","Number","toFixed","substring","isOperator","option","replace","r","g","b","a","combineReducers","image","switchSample","basicImgEffect","swap","updateInput","event","target","updateOption","replaceModal","findModal","sampleColour","arrowStyle","position","borderLeft","borderRight","borderTop","top","left","animation","boxStyle","padding","backgroundColor","borderRadius","transform","Options","props","dispatch","useDispatch","modal","buttons","options","map","key","onClick","window","addEventListener","click","removeEventListener","Fragment","colours","fullColours","columnInitials","mapCompareToTitle","compare","msg","Find","useSelector","title","e","stopPropagation","onChange","mapOperatorToTitle","Replace","percentage","button","Tolerance","ReplaceTool","bind","navigate","this","which","parent","findIndex","selectionStart","newName","focus","end","setTimeout","setSelectionRange","store","getState","frt","onKeyDown","autoComplete","Component","connect","Tools","Lighten","handleChange","handleClick","setState","multiplier","text","PureComponent","SimpleTools","display","gridTemplateColumns","justifyItems","ratio","Upload","change","hidden","Download","useState","anchor","setAnchor","handleClose","handleDownload","download","currentTarget","Menu","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","App","imageChange","recenter","file","files","img","reader","FileReader","onload","read","imgEvent","createElement","drawImage","getImageData","setImgData","then","refresh","filedata","result","src","setFileName","lastIndexOf","readAsDataURL","link","setAttribute","toDataURL","remove","center","updatePixel","Promise","resolve","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render"],"mappings":"2QA8FA,SAASA,EAAQC,EAAaC,EAAQC,EAAQC,GAG5C,IAFA,IAAIC,GAAQ,EAEHC,GADKL,EAAY,GACR,GAAGK,EAAS,EAAGA,IAE/B,OADUL,EAAYK,IAEpB,IAAK,IACHD,EAAQA,GAASE,KAAKC,IAAIN,EAAOI,GAAUH,EAAOG,KAAYF,EAAUE,GACxE,MACF,IAAK,IACHD,EAAQA,GAASH,EAAOI,GAAUH,EAAOG,GACzC,MACF,IAAK,KACHD,EAAQA,GAASH,EAAOI,IAAWH,EAAOG,GAE1C,MACF,IAAK,IACHD,EAAQA,GAASH,EAAOI,GAAUH,EAAOG,GACzC,MACF,IAAK,KACHD,EAAQA,GAASH,EAAOI,IAAWH,EAAOG,GAC1C,MACF,QAEE,YADAG,MAAM,wEAIZ,OAAOJ,EAIF,SAASK,EAAQC,EAAWC,EAAMC,EAAOC,GAE9C,IADA,IACSR,EAAS,EAAGA,EAAS,EAAGA,IAE/B,OADWK,EAAUL,IAEnB,IAAK,IACHM,EAAKE,EAAQR,GAAUO,EAAMP,GAC7B,MACF,IAAK,IACHM,EAAKE,EAAQR,IAAWO,EAAMP,GAC9B,MACF,IAAK,IACHM,EAAKE,EAAQR,IAAWO,EAAMP,GAC9B,MACF,IAAK,IACHM,EAAKE,EAAQR,IAAWO,EAAMP,GAC9B,MACF,IAAK,IACHM,EAAKE,EAAQR,IAAWO,EAAMP,GAC9B,MACF,QAEE,YADAG,MAAM,yE,yjBChJP,IAAMM,EAAe,CAC1BC,QAAS,KACTC,QAAS,KACTC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,aAAa,EACbC,cAAc,EACdV,MAAO,KACPW,MAAO,EACPC,MAAO,GAGHC,EAAsB,CAAEC,UDiDvB,SAAmBf,GAExB,IADA,IAAIgB,EAAM,EACDC,EAAI,EAAGA,EAAIjB,EAAKkB,OAAQD,GAAK,EACpCD,EAAMrB,KAAKwB,OAAOnB,EAAKiB,GAAKjB,EAAKiB,EAAI,GAAKjB,EAAKiB,EAAI,IAAM,GACzDjB,EAAKiB,GAAKD,EACVhB,EAAKiB,EAAI,GAAKD,EACdhB,EAAKiB,EAAI,GAAKD,GCvDkCI,SD4D7C,SAAkBpB,GACvB,IAAK,IAAIiB,EAAI,EAAGA,EAAIjB,EAAKkB,OAAQD,GAAK,EACpCjB,EAAKiB,GAAK,IAAMjB,EAAKiB,GACrBjB,EAAKiB,EAAI,GAAK,IAAMjB,EAAKiB,EAAI,GAC7BjB,EAAKiB,EAAI,GAAK,IAAMjB,EAAKiB,EAAI,IChEuCI,ODqEjE,SAAiBrB,EAAMsB,GAC5B,IAAK,IAAIL,EAAI,EAAGA,EAAIjB,EAAKkB,OAAQD,GAAK,EACpCjB,EAAKiB,GAAKjB,EAAKiB,GAAKK,EACpBtB,EAAKiB,EAAI,GAAKjB,EAAKiB,EAAI,GAAKK,EAC5BtB,EAAKiB,EAAI,GAAKjB,EAAKiB,EAAI,GAAKK,GCzEyDC,QDRlF,SAAuBvB,EAAMX,EAAamC,EAAQzB,EAAW0B,EAAQjC,GAC1E,IAAK,IAAIyB,EAAI,EAAGA,EAAIjB,EAAKkB,OAAQD,GAAK,EAChC7B,EAAQC,EAAa,CAACW,EAAKiB,GAAIjB,EAAKiB,EAAI,GAAIjB,EAAKiB,EAAI,GAAIjB,EAAKiB,EAAI,IAAKO,EAAQhC,IACjFM,EAAQC,EAAWC,EAAMyB,EAAQR,KCMjCS,EAAe,GACfC,EAAY,IAyKlB,SAASC,EAASC,EAAOC,EAAQC,EAAUC,GAazC,OAVID,EAAWD,EAAOG,OAASJ,EAAM,GAAK,EACxCA,EAAM,GAAK,EAEXA,EAAM,GAAKA,EAAM,GAAKE,EAAWD,EAAOG,MAAQF,EAAWD,EAAOG,MAAQJ,EAAM,GAE9EG,EAAYF,EAAOI,QAAUL,EAAM,GAAK,EAC1CA,EAAM,GAAK,EAEXA,EAAM,GAAKA,EAAM,GAAKG,EAAYF,EAAOI,OAASF,EAAYF,EAAOI,OAASL,EAAM,GAE/EA,EAIT,SAASM,EAAOC,EAAGC,EAAGrC,GAAiC,IAA3BsC,EAA0B,uDAAb,YACnCR,EAASS,SAASC,eAAeF,GACrCR,EAAOW,WAAW,MAAMC,aAAa1C,GAAOoC,GAAIC,EAAGD,EAAGC,EAAGP,EAAOG,MAAOH,EAAOI,QAIhF,SAASS,EAAKC,EAAOC,GACnBD,EAAME,SAAQ,SAAC7C,EAAOC,GAAR,OAAmB2C,EAAM3C,GAASD,KAIlD,SAAS8C,EAAaC,GAA+B,IAC/CC,IAD8C,yDACrB,kBAAoB,oBACjDV,SAASC,eAAe,aAAaU,UAAYF,EAAS,YAAcC,EAG3DE,MAxMf,WAAqD,IAA/BC,EAA8B,uDAAtBjD,EAAckD,EAAQ,uCAClD,OAAQA,EAAOC,MACb,IAAK,MACH,OAAOD,EAAOE,YAAP,KAA0BH,EAA1B,CAAiC/C,QAASgD,EAAOrD,OAAjD,KAA+DoD,EAA/D,CAAsEhD,QAASiD,EAAOrD,OAC/F,IAAK,OACH,OAAO,EAAP,GAAWoD,EAAX,CAAkBI,SAAUH,EAAOI,OACrC,IAAK,UACH,OAAO,EAAP,GAAYL,EAAZ,CAAmB9C,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGuC,QAAQ,EAAO/C,MAAO,KAAMW,MAAO,EAAGC,MAAO,IAC9F,IAAK,SACH,IAAIiB,EAASuB,EAAOvB,OADtB,EAGkB,WAAdA,EAAO4B,GAAkB,CAACN,EAAM9C,GAAI8C,EAAM5C,GAAI4C,EAAMhD,SAAW,CAACgD,EAAM7C,GAAI6C,EAAM3C,GAAI2C,EAAM/C,SAH9F,mBAEO+B,EAFP,KAEUC,EAFV,KAEajC,EAFb,KAKMyB,EAyIV,SAAqBC,EAAQM,EAAGC,EAAGJ,EAAOC,EAAQyB,EAAOC,GACvD,IAAIC,EAAQ/B,EAAOG,MAAQ,EACvB6B,EAAQhC,EAAOI,OAAS,EACxB6B,EAASjC,EAAOG,MAAQH,EAAOkC,YAC/BC,EAASnC,EAAOI,OAASJ,EAAOoC,aASpC,OAAOtC,EALK,CACVjC,KAAKwB,MAAMiB,GAAKuB,EAAQ7B,EAAOqC,YAAcJ,EAASF,GACtDlE,KAAKwB,MAAMkB,GAAKuB,EAAQ9B,EAAOsC,WAAaH,EAASH,IAGhChC,EAAQG,EAAOC,GAtJtBmC,CAAYhB,EAAOvB,OAAQM,EAAGC,EAAGjC,EAAQ6B,MAAO7B,EAAQ8B,OAAQmB,EAAOM,MAAON,EAAOO,OAEjG,GAAI/B,EAAM,KAAOO,GAAKP,EAAM,KAAOQ,EAAG,CAAC,IAAD,QAChCiC,EAAMxC,EAAOW,WAAW,MAEd,cAAdX,EAAO4B,IAAP,EAAoD7B,EAApD,mBAA8BuB,EAAM7C,GAApC,KAAwC6C,EAAM3C,GAA9C,SAAqFoB,EAArF,mBAA+DuB,EAAM9C,GAArE,KAAyE8C,EAAM5C,GAA/E,MAHoC,MAKZ,CAACJ,EAAQ6B,MAAO7B,EAAQ8B,QAA3CqC,EAL+B,KAKvBC,EALuB,KAM/BC,EAAoBF,EAAS1C,EAAM,GAA3B6C,EAA+BF,EAAU3C,EAAM,GAE5D4C,EAAS9E,KAAKgF,IAAI7C,EAAOG,MAAOwC,GAChCC,EAAU/E,KAAKgF,IAAI7C,EAAOI,OAAQwC,GAGlC,IAFA,IAAI1E,EAAO,IAAI4E,kBAAkBH,EAASC,EAAU,GAE3CG,EAAM,EAAGA,EAAMH,EAASG,IAC/B,IAAK,IAAIC,EAAM,EAAGA,EAAML,EAAQK,IAC9B,IAAK,IAAIC,EAAM,EAAGA,EAAM,EAAGA,IACzB/E,EAAK6E,EAAMJ,EAAS,EAAU,EAANK,EAAUC,GAChC3E,EAAQJ,MAAM6B,EAAM,GAAKgD,GAAON,EAAS,EAAuB,GAAlB1C,EAAM,GAAKiD,GAAWC,GAK5E3E,EAAU,IAAI4E,UAAUhF,EAAMyE,EAAQC,GACtCJ,EAAI5B,aAAatC,EAAS,EAAG,GAE/B,OAAOgD,EACT,IAAK,QAEH,OADAL,EAAaK,EAAM1C,aACZ,EAAP,GAAY0C,EAAZ,CAAmB1C,aAAa,EAAOT,MAAOoD,EAAOpD,QACvD,IAAK,SACH,MAAsB,UAAlBoD,EAAOL,QACTD,EAAaK,EAAM1C,aACZ,EAAP,GAAY0C,EAAZ,CAAmB1C,aAAc0C,EAAM1C,YAAaC,cAAc,KACvC,WAAlB0C,EAAOL,QAChBD,EAAaK,EAAMzC,cAAc,GAC1B,EAAP,GAAYyC,EAAZ,CAAmB1C,aAAa,EAAOC,cAAeyC,EAAMzC,gBAEvDyC,EACT,IAAK,QACH,GAAIA,EAAM/C,QAAS,CAEjB,IAAI4E,EAASnE,EAAoBuC,EAAO4B,QAExCtC,EAAKS,EAAMhD,QAAQJ,KAAMoD,EAAM/C,QAAQL,MAEnCqD,EAAO6B,QACTD,EAAM,WAAN,GAAO7B,EAAM/C,QAAQL,MAArB,mBAA8BqD,EAAO6B,WAErCD,EAAO7B,EAAM/C,QAAQL,MAEvBmC,EAAOiB,EAAM7C,GAAI6C,EAAM3C,GAAI2C,EAAM/C,SAEnC,OAAO+C,EACT,IAAK,UACH,GAAIA,EAAMnD,OAASmD,EAAM/C,QAAS,CAChCkC,SAAS4C,KAAKC,MAAMnC,OAAS,WAC7B,IAAIoC,EDnEL,SAAoBC,EAAOrF,EAAOZ,EAAakG,EAAW/F,GAAY,IAAD,EAC9C,CAAC8F,EAAMrD,MAAOqD,EAAMpD,OAAQoD,EAAMtF,MAAzDiC,EADqE,KAC9DC,EAD8D,KACtDlC,EADsD,KAGtEwF,EAAW,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,IAE1CC,EAAU,IAAIC,MAAMzD,EAAQC,GAE5BmD,EAAU,GAP4D,EAQ7D,CAACpF,EAAM,GAAIA,EAAM,IAAzBmC,EARqE,KAQlEC,EARkE,KAUtEsD,EAAW,CAAC,CAACvD,EAAGC,IAEpB,IADAoD,EAAQpD,EAAIJ,EAAQG,IAAK,EACE,IAApBuD,EAASzE,QAAc,CAAC,IAAD,EACnByE,EAASC,MADU,mBAG5B,GAFCxD,EAD2B,KACxBC,EADwB,OAGxBD,EAAI,GAAKA,EAAIH,GAASI,EAAI,GAAKA,EAAIH,GAAvC,CAKA,IADA,IAAI2D,EAAS,GACJnG,EAAS,EAAGA,EAAS,EAAGA,IAC/BmG,EAAOC,KAAK9F,EAAKqC,EAAIJ,EAAQ,EAAQ,EAAJG,EAAQ1C,IAGvCN,EAAQC,EAAawG,EAAQN,EAAW/F,KAE1C6F,EAAQS,KAAKzD,EAAIJ,EAAQ,EAAQ,EAAJG,GAG7BoD,EAAS1C,SAAQ,SAAAiD,GAEVN,GAASpD,EAAI0D,EAAI,IAAM9D,EAAQG,EAAI2D,EAAI,MAC1CN,GAASpD,EAAI0D,EAAI,IAAM9D,EAAQG,EAAI2D,EAAI,KAAM,EAC7CJ,EAASG,KAAK,CAAC1D,EAAI2D,EAAI,GAAI1D,EAAI0D,EAAI,WAK3C,OAAOV,EC6BaW,CAAW5C,EAAMhD,QAASgD,EAAMnD,MAAOoD,EAAOhE,YAAagE,EAAO7B,OAAQ6B,EAAO7D,WAC3FQ,EAAOoD,EAAM/C,QAAQL,KACzB2C,EAAKS,EAAMhD,QAAQJ,KAAMoD,EAAM/C,QAAQL,MAEvC,IAAIyB,EAAS4B,EAAO5B,OAChB1B,EAAYsD,EAAOtD,UACvBsF,EAAQvC,SAAQ,SAAA7C,GACdH,EAAQC,EAAWC,EAAMyB,EAAQxB,MAEnCkC,EAAOiB,EAAM7C,GAAI6C,EAAM3C,GAAI2C,EAAM/C,SACjCkC,SAAS4C,KAAKC,MAAMnC,OAAS,eACnBG,EAAMnD,OAChBJ,MACE,kHAGJ,OAAOuD,EAET,IAAK,OACH,GAAIA,EAAMhD,QAAS,CAAC,IAAD,EACiBiD,EAAO4C,UACrC,CAAC,YAAa7C,EAAMhD,QAASgD,EAAM7C,GAAI6C,EAAM3C,IAC7C,CAAC,SAAU2C,EAAM/C,QAAS+C,EAAM9C,GAAI8C,EAAM5C,IAH7B,mBACZ8B,EADY,KACA4D,EADA,KACS9D,EADT,KACYC,EADZ,KAIXP,EAASS,SAASC,eAAeF,GAC3BR,EAAOW,WAAW,MAC1BC,aAAawD,GAAU9D,GAAIC,EAAGD,EAAGC,EAAGP,EAAOG,MAAOH,EAAOI,QAC7D,IAAIlC,EAAO,IAAI4E,kBAAkBsB,EAAQlG,MACrC2C,EAAO,IAAIqC,UAAUhF,EAAMkG,EAAQjE,MAAOiE,EAAQhE,QACtD,OAAOmB,EAAO4C,UAAP,KAAwB7C,EAAxB,CAA+B/C,QAASsC,IAAxC,KAAsDS,EAAtD,CAA6DhD,QAASuC,IAE/E,OAAOS,EAET,IAAK,OACH,GAAIA,EAAMhD,QAAS,CAAC,IAAD,EACuBiD,EAAOE,YAC3C,CAAC,YAAaH,EAAM/C,QAAS+C,EAAMvC,MAAOuC,EAAM7C,GAAI6C,EAAM3C,IAC1D,CAAC,SAAU2C,EAAMhD,QAASgD,EAAMxC,MAAOwC,EAAM9C,GAAI8C,EAAM5C,IAH1C,mBACZ8B,EADY,KACA4D,EADA,KACSC,GADT,KACe/D,GADf,KACkBC,GADlB,KAIXP,GAASS,SAASC,eAAeF,GAGvC,IAAKe,EAAO+C,WAAaD,GAAO,GAAKD,EAAQjE,MAAQH,GAAOkC,aAAekC,EAAQhE,OAASJ,GAAOoC,aAAc,CAC/G,IAAImC,GAAUhD,EAAO+C,UAAYD,GAAO,EAAIA,GAAO,EAC/C7E,GAAI,SAAGK,EAAa0E,IAEpBpE,GAAQtC,KAAKwB,MAAMW,GAAOkC,YAAc1C,IAU5C,IARK+B,EAAO+C,WAAaD,IAAQ,IAAQ9C,EAAO+C,WAAaD,IAAQ,MAC9D9C,EAAO+C,WAAanE,GAAQP,EAC/BO,GAAQP,EACC2B,EAAO+C,WAAanE,IAASiE,EAAQjE,OAASA,IAASiE,EAAQhE,SACxED,GAAQtC,KAAK2G,IAAIJ,EAAQjE,MAAOiE,EAAQhE,UAIxCD,KAAUH,GAAOG,MAAO,CAE1BH,GAAOG,MAAQH,GAAOI,OAASD,GAFL,OAIjBL,EAAS,CAACQ,GAAGC,IAAIP,GAAQoE,EAAQjE,MAAOiE,EAAQhE,QAJ/B,qBAIzBE,GAJyB,MAItBC,GAJsB,MAM1Be,EAAQC,EAAOE,YAAP,KACCH,EADD,CACQ7C,GAAI6B,GAAG3B,GAAI4B,GAAGxB,MAAOwF,KAD7B,KAECjD,EAFD,CAEQ9C,GAAI8B,GAAG5B,GAAI6B,GAAGzB,MAAOyF,KACrClE,EAAOC,GAAGC,GAAG6D,EAAS5D,KAI5B,OAAOc,EAET,QACE,OAAOA,IChKPjD,EAAe,CACnBoG,GAAI,CAAC,IAAK,IAAK,IAAK,KACpBC,GAAI,CAAC,IAAK,IAAK,IAAK,KACpBC,GAAI,CAAC,IAAK,IAAK,IAAK,KACpBC,GAAI,CAAC,IAAK,IAAK,IAAK,KACpBC,GAAI,CAAC,GAAI,GAAI,GAAI,IACjBC,OAAQ,EAAC,GAAO,GAAO,GAAO,GAC9BC,OAAQ,EAAC,GAAO,GAAO,GAAO,IAwDjBC,MArDf,WAAuD,IAA/B1D,EAA8B,uDAAtBjD,EAAckD,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IAAK,cAAgB,IAAD,EACS,CAACD,EAAOI,KAAMJ,EAAO0D,MAAO1D,EAAOnD,OAAzDuD,EADa,KACPsD,EADO,KACA7G,EADA,KAEdoG,EAAM,IACV,GAAI7C,EAAKuD,WAAW,KAAM,CACxB,IAAIC,EAAW7D,EAAMqD,GAAGvG,GACP,MAAb+G,GAAiC,MAAbA,IACtBX,EAAM,KAGV,OAAKY,MAAMH,IAAUA,GAAS,GAAKA,GAAST,GAC1CS,EAAQI,OAAOA,OAAOJ,GAAOK,WAC7BhE,EAAMK,EAAK4D,UAAU,EAAG,IAAInH,GAAS6G,EAC9B3D,GAEFA,EAGT,IAAK,eAAiB,IAAD,EACe,CAACC,EAAOnD,MAAOmD,EAAO0D,MAAO1D,EAAOiE,YAAjEpH,EADc,KACPqH,EADO,KACCD,EADD,KAUnB,OARIA,GAAclE,EAAMsD,GAAGxG,GAAS,KAAkB,MAAXqH,GAA6B,MAAXA,IAC3DnE,EAAMsD,GAAGxG,GAAS,KAEhBoH,EACFlE,EAAMqD,GAAGvG,GAASqH,EAElBnE,EAAMmD,GAAGrG,GAASqH,EAEbnE,EAGT,IAAK,QACH,IAAK,IAAInC,EAAI,EAAGA,EAAImC,EAAMwD,OAAO1F,OAAQD,IACvCmC,EAAMwD,OAAO3F,IAAK,EAClBmC,EAAMyD,OAAO5F,IAAK,EAKpB,OAHIoC,EAAOnD,OAAS,IAClBmD,EAAOmE,QAAWpE,EAAMwD,OAAOvD,EAAOnD,QAAS,EAASkD,EAAMyD,OAAOxD,EAAOnD,QAAS,GAEhFkD,EAET,IAAK,eAKH,OAJAA,EAAMoD,GAAG,GAAKnD,EAAOoE,EACrBrE,EAAMoD,GAAG,GAAKnD,EAAOqE,EACrBtE,EAAMoD,GAAG,GAAKnD,EAAOsE,EACrBvE,EAAMoD,GAAG,GAAKnD,EAAOuE,EACdxE,EACT,QACE,OAAOA,ICvDEyE,cAAgB,CAC7BC,MAAO3E,EACPqE,QAASV,I,+CCKEiB,EAAe,SAAA/E,GAAM,MAAK,CAAEM,KAAM,SAAUN,WAE5CgF,EAAiB,SAAC/C,EAAQC,GAAT,MAAsB,CAAE5B,KAAM,QAAS2B,SAAQC,YAWhE+C,EAAO,SAAAhC,GAAS,MAAK,CAAE3C,KAAM,OAAQ2C,cAErCE,EAAO,SAACC,EAAW7C,GAAZ,MAA6B,CAAED,KAAM,OAAQ8C,YAAW7C,gBC1B/D2E,EAAc,SAACC,EAAOjI,GAAR,MAAmB,CAC5CoD,KAAM,cACNG,KAAM0E,EAAMC,OAAO3E,KACnBsD,MAAOoB,EAAMC,OAAOrB,MACpB7G,UAGWmI,EAAe,SAACnI,EAAO6G,EAAOO,GAAf,MAA+B,CAAEhE,KAAM,eAAgBpD,QAAO6G,QAAOO,eAEpFgB,EAAe,SAAApI,GAAK,MAAK,CAAEoD,KAAM,QAASpD,QAAOsH,SAAS,IAE1De,EAAY,SAAArI,GAAK,MAAK,CAAEoD,KAAM,QAASpD,QAAOsH,SAAS,IAEvDgB,EAAe,SAACf,EAAGC,EAAGC,EAAGC,GAAV,MAAiB,CAAEtE,KAAM,eAAgBmE,IAAGC,IAAGC,IAAGC,MCTxEa,EAAa,CACjBC,SAAU,WACVzG,MAAO,IACPC,OAAQ,IACRyG,WAAY,wBACZC,YAAa,wBACbC,UAAW,mCACXC,IAAK,qBACLC,KAAM,kBACNC,UAAW,sBAGPC,EAAW,CACfP,SAAU,WACVzG,MAAO,cACPC,OAAQ,OACRgH,QAAS,MACTC,gBAAiB,wBACjBL,IAAK,uBACLC,KAAM,OACNK,aAAc,MACdC,UAAW,gCACXL,UAAW,sBAmCEM,MAhCf,SAAiBC,GACf,IAAMC,EAAWC,cACXvJ,EAAQqJ,EAAMrJ,MACdwJ,EAAQH,EAAM/B,QAAUc,EAAeC,EAEzCoB,EAAUJ,EAAMK,QAAQC,KAAI,SAAAtC,GAAM,OACpC,4BACEuC,IAAKvC,EACLjE,KAAK,SACLJ,UAAU,UACV6G,QAAS,kBAAMP,EAASnB,EAAanI,EAAOqH,EAAQgC,EAAM/B,YAEzDD,MAYL,OARAyC,OAAOC,iBACL,SACA,SAASC,IACPF,OAAOG,oBAAoB,QAASD,GAAO,GAC3CV,EAASE,GAAO,OAElB,GAGA,kBAAC,IAAMU,SAAP,KACE,yBAAKhF,MAAOqD,IACZ,yBAAKrD,MAAO6D,GAAWU,KCxDhBU,EAAU,CAAC,IAAK,IAAK,IAAK,KAC1BC,EAAc,CAAC,MAAO,QAAS,OAAQ,SAGvCC,EAAiB,CAAC,IAAK,IAAK,KAE5BlL,EAAc,CAAC,IAAK,IAAK,KAAM,IAAK,MAEpCU,EAAY,CAAC,IAAK,IAAK,IAAK,IAAK,KCFxCyK,EAAoB,SAACC,EAAS1D,EAAO7G,GACzC,IAAI2F,EAASyE,EAAYpK,GACrBwK,EAAM,GACV,OAAQD,GACN,IAAK,IACHC,EAAG,yCAAqC7E,EAArC,wDAA2FkB,GAC9F,MACF,IAAK,IACH2D,EAAG,yCAAqC7E,EAArC,+BAAkEkB,GACrE,MACF,IAAK,KACH2D,EAAG,yCAAqC7E,EAArC,2CAA8EkB,GACjF,MACF,IAAK,IACH2D,EAAG,yCAAqC7E,EAArC,4BAA+DkB,GAClE,MACF,IAAK,KACH2D,EAAG,yCAAqC7E,EAArC,wCAA2EkB,GAC9E,MACF,QACE,MAAO,GAEX,OAAO2D,GAGM,SAASC,EAAKpB,GAC3B,IAAMrJ,EAAQqJ,EAAMrJ,MACduK,EAAUG,aAAY,SAAAxH,GAAK,OAAIA,EAAMoE,QAAQjB,GAAGrG,MAChD6G,EAAQ6D,aAAY,SAAAxH,GAAK,OAAIA,EAAMoE,QAAQhB,GAAGtG,MAC9CwJ,EAAQkB,aAAY,SAAAxH,GAAK,OAAIA,EAAMoE,QAAQX,OAAO3G,MAClDsJ,EAAWC,cAEbG,EAAUF,EAAQ,kBAAC,EAAD,CAASE,QAASvK,EAAaa,MAAOA,EAAOsH,SAAS,IAAY,GACxF,OACE,8BACE,0BAAMpC,MAAO,CAAEsD,SAAU,aACvB,4BACEpF,KAAK,SACLuH,MAAOL,EAAkBC,EAAS1D,EAAO7G,GACzC6J,QAAS,SAAAe,GACPA,EAAEC,kBACFvB,EAASjB,EAAUrI,KAErBgD,UAAU,WAETuH,GAEFb,GAEH,2BAAOtG,KAAK,OAAOyD,MAAOA,EAAOiE,SAAU,SAAAF,GAAC,OAAItB,EAAStB,EAAY4C,EAAG5K,KAASuD,KAAM,KAAO4G,EAAQnK,MCjD5G,IAAM+K,GAAqB,SAAChE,EAAUF,EAAO7G,GAC3C,IAAI2F,EAASyE,EAAYpK,GACrBwK,EAAM,GACV,OAAQzD,GACN,IAAK,IACHyD,EAAG,qBAAiB7E,EAAjB,4CAA2DkB,GAC9D,MACF,IAAK,IACH2D,EAAG,uBAAmB7E,EAAnB,4CAA6DkB,GAChE,MACF,IAAK,IACH2D,EAAG,uBAAmB7E,EAAnB,4CAA6DkB,GAChE,MACF,IAAK,IACH2D,EAAG,uBAAmB7E,EAAnB,4CAA6DkB,EAAQ,IAAM,GAC9E,MACF,IAAK,IACH2D,EAAG,qBAAiB7E,EAAjB,4CAA2DkB,EAAQ,IAAM,GAC5E,MACF,QACE,MAAO,GAEX,OAAO2D,GAuCMQ,OApCf,SAAiB3B,GACf,IAAMrJ,EAAQqJ,EAAMrJ,MACd+G,EAAW2D,aAAY,SAAAxH,GAAK,OAAIA,EAAMoE,QAAQf,GAAGvG,MACjD6G,EAAQ6D,aAAY,SAAAxH,GAAK,OAAIA,EAAMoE,QAAQd,GAAGxG,MAC9CwJ,EAAQkB,aAAY,SAAAxH,GAAK,OAAIA,EAAMoE,QAAQZ,OAAO1G,MAClDsJ,EAAWC,cAEb0B,EAA0B,MAAblE,GAAiC,MAAbA,EAAmB,IAAM,GAC1D2C,EAAUF,EAAQ,kBAAC,EAAD,CAASE,QAAS7J,EAAWG,MAAOA,EAAOsH,SAAS,IAAW,GAEjF4D,EACF,0BAAMhG,MAAO,CAAEsD,SAAU,aACvB,4BACEpF,KAAK,SACLuH,MAAOI,GAAmBhE,EAAUF,EAAO7G,GAC3C6J,QAAS,SAAAe,GACPA,EAAEC,kBACFvB,EAASlB,EAAapI,KAExBgD,UAAU,WAET+D,GAEF2C,GAIL,OACE,8BACGwB,EACD,2BAAO9H,KAAK,OAAOyD,MAAOA,EAAOiE,SAAU,SAAAF,GAAC,OAAItB,EAAStB,EAAY4C,EAAG5K,KAASuD,KAAM,KAAO4G,EAAQnK,KACrGiL,IClDQE,OAPf,SAAmB9B,GACjB,IAAMrJ,EAAQqJ,EAAMrJ,MACdsJ,EAAWC,cACX1C,EAAQ6D,aAAY,SAAAxH,GAAK,OAAIA,EAAMoE,QAAQb,GAAGzG,MACpD,OAAO,2BAAOoD,KAAK,OAAOyD,MAAOA,EAAOiE,SAAU,SAAAF,GAAC,OAAItB,EAAStB,EAAY4C,EAAG5K,KAASuD,KAAM,KAAO4G,EAAQnK,M,mOCCzGoL,G,YACJ,aAAe,IAAD,8BACZ,+CACK9D,QAAU,EAAKA,QAAQ+D,KAAb,gBACf,EAAKlG,QAAU,EAAKA,QAAQkG,KAAb,gBACf,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAK5I,KAAO,EAAKA,KAAK4I,KAAV,gBALA,E,uEAcZ,IALA,IAAInI,EAAQqI,KAAKlC,MACblK,EAAc+D,EAAMmD,GACpB/E,EAAS4B,EAAMoD,GACfzG,EAAYqD,EAAMqD,GAClBhF,EAAS,CAAC2B,EAAMsD,GAAG,GAAItD,EAAMsD,GAAG,GAAItD,EAAMsD,GAAG,GAAItD,EAAMsD,GAAG,IACrDzF,EAAI,EAAGA,EAAIlB,EAAUmB,OAAQD,IACf,MAAjBlB,EAAUkB,IAA+B,MAAjBlB,EAAUkB,KACpCQ,EAAOR,GAAKQ,EAAOR,GAAK,IAAM,GAGlC,IAAIzB,EAAY4D,EAAMuD,GACtB8E,KAAKlC,MAAMvB,eAAe,UAAW,CAAC3I,EAAamC,EAAQzB,EAAW0B,EAAQjC,M,gCAS9E,IALA,IAAI4D,EAAQqI,KAAKlC,MACblK,EAAc+D,EAAMmD,GACpB/E,EAAS4B,EAAMoD,GACfzG,EAAYqD,EAAMqD,GAClBhF,EAAS,CAAC2B,EAAMsD,GAAG,GAAItD,EAAMsD,GAAG,GAAItD,EAAMsD,GAAG,GAAItD,EAAMsD,GAAG,IACrDzF,EAAI,EAAGA,EAAIlB,EAAUmB,OAAQD,IACf,MAAjBlB,EAAUkB,IAA+B,MAAjBlB,EAAUkB,KACpCQ,EAAOR,GAAKQ,EAAOR,GAAK,IAAM,GAGlC,IAAIzB,EAAY4D,EAAMuD,GACtB8E,KAAKlC,MAAMlE,QAAQhG,EAAamC,EAAQzB,EAAW0B,EAAQjC,K,+BAIpD2I,GACP,IAAI2B,EAAM3B,EAAMuD,MAChB,GAAI5B,GAAO,IAAMA,GAAO,GAAI,CAC1B,IAAI6B,EAASpJ,SAASC,eAAe,eACjCiB,EAAO0E,EAAMC,OAAO3E,KACxB,IAAKA,EACH,OAEF,IAAIoB,EAAMwF,EAAQuB,WAAU,SAAA7G,GAAG,OAAIA,IAAQtB,EAAK,MAC5CqB,EAAMyF,EAAeqB,WAAU,SAAA7G,GAAG,OAAIA,IAAQtB,EAAK,MACvD,GAAY,KAARqG,EAAY,CAEd,GAAoC,IAAhC3B,EAAMC,OAAOyD,eACf,OAEF/G,GAAOA,EAAMyF,EAAerJ,OAAS,GAAKqJ,EAAerJ,YACpD,GAAY,KAAR4I,EAETjF,GAAOA,EAAMwF,EAAQnJ,OAAS,GAAKmJ,EAAQnJ,YACtC,GAAY,KAAR4I,EAAY,CAErB,GAAI3B,EAAMC,OAAOyD,iBAAmB1D,EAAMC,OAAOrB,MAAM7F,OACrD,OAEF4D,GAAOA,EAAM,GAAKyF,EAAerJ,YAGjC2D,GAAOA,EAAM,GAAKwF,EAAQnJ,OAE5B,IAAI4K,EAAUvB,EAAezF,GAAO,IAAMuF,EAAQxF,GAClD8G,EAAOG,GAASC,QAEhB,IAAIC,EAAM,EAERA,EADU,KAARlC,GAAsB,KAARA,EACF,KAARA,EAAa6B,EAAOG,GAAS/E,MAAM7F,OAAS,EAE5CiH,EAAMC,OAAOyD,eAGrBI,YAAW,kBAAMN,EAAOG,GAASI,kBAAkBF,EAAKA,KAAM,M,6BAKhE,IAAI/L,EAAQkM,GAAMC,WAAWtE,MAAM7H,MAC/BA,EACFwL,KAAKlC,MAAMf,aAAavI,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAE5DJ,MAAM,+G,+BAIA,IAAD,OACHwM,EAAMhC,EAAQR,KAAI,SAAChE,EAAQ3F,GAAT,OACpB,kBAAC,IAAMkK,SAAP,KACE,kBAACO,EAAD,CAAMb,IAAK,KAAOjE,EAAQ3F,MAAOA,IACjC,kBAAC,GAAD,CAAS4J,IAAK,KAAOjE,EAAQ3F,MAAOA,IACpC,kBAAC,GAAD,CAAW4J,IAAK,KAAOjE,EAAQ3F,MAAOA,QAG1C,OACE,0BAAMwD,GAAG,cAAcR,UAAU,cAAcoJ,UAAWb,KAAKD,SAAUe,aAAa,OACpF,gCACA,8BACE,uCACA,4BACExC,QAAS,kBAAM,EAAKR,MAAMxB,aAAa,UACvCzE,KAAK,SACLuH,MAAM,6EACN3H,UAAU,YAEV,uBAAGQ,GAAG,aAAN,qBAEF,4BACEqG,QAAS,kBAAM,EAAKR,MAAMxB,aAAa,WACvCzE,KAAK,SACLuH,MAAM,kDACN3H,UAAU,YAEV,uBAAGQ,GAAG,eAAN,qBAEF,4BACEJ,KAAK,SACLyG,QAAS0B,KAAK9I,KACdkI,MAAM,iDACN3H,UAAU,YAEV,uBAAGQ,GAAG,oBAAN,sBAGJ,0CACA,4CACA,uCACC2I,EAAI,GACL,yCACCA,EAAI,GACL,wCACCA,EAAI,GACL,yCACCA,EAAI,GACL,yBAAK3I,GAAG,eACN,4BAAQJ,KAAK,SAASyG,QAAS0B,KAAKjE,SAApC,kBAGA,4BAAQlE,KAAK,SAASyG,QAAS0B,KAAKpG,SAApC,gC,GAhJgBmH,aAyJXC,gBAAQ,SAAArJ,GAAK,O,2VAAA,IAAUA,EAAMoE,WAAY,CACtDO,eACAC,iBACA3C,QPvJqB,SAAChG,EAAamC,EAAQzB,EAAW0B,EAAQjC,GAAzC,MAAwD,CAC7E8D,KAAM,UACNjE,cACAmC,SACAzB,YACA0B,SACAjC,cOkJA6I,eACAH,cACAM,gBANaiE,CAOZnB,I,MC9JYoB,OARf,WACE,OACE,6BACE,kBAAC,GAAD,QCHAC,G,YACJ,aAAe,IAAD,8BACZ,+CACKvJ,MAAQ,CAAE2B,IAAK,GACpB,EAAK6H,aAAe,EAAKA,aAAarB,KAAlB,gBACpB,EAAKsB,YAAc,EAAKA,YAAYtB,KAAjB,gBAJP,E,0EAODpD,GACX,IAAIpD,EAAMoD,EAAMC,OAAOrB,OAClBG,MAAMnC,IAAQA,GAAO,GAAKA,GAAO,MACpCA,EAAMoC,OAAOA,OAAOpC,GAAKqC,WACzBqE,KAAKqB,SAAS,CAAE/H,W,oCAKlB0G,KAAKlC,MAAMvB,eAAe,SAAU,CAACyD,KAAKlC,MAAMwD,WAAWtB,KAAKrI,MAAM2B,S,+BAItE,IAAIiI,EAAOvB,KAAKlC,MAAMyD,MAAQ,UAC9B,OACE,kBAAC,IAAM5C,SAAP,KACE,4BAAQL,QAAS0B,KAAKoB,aAAtB,IAAqCG,GACrC,2BAAO1J,KAAK,OAAOyD,MAAO0E,KAAKrI,MAAM2B,IAAKiG,SAAUS,KAAKmB,aAAcxH,MAAO,CAAEnD,MAAO,UACvF,yC,GA1BcgL,iBAgCPR,gBAAQ,iBAAO,KAAK,CAAEzE,kBAAtByE,CAAwCE,ICjBxCO,OAdf,WACE,IAAM1D,EAAWC,cACjB,OACE,yBAAKrE,MAAO,CAAE+H,QAAS,OAAQC,oBAAqB,MAAOC,aAAc,WACvE,6BACE,4BAAQtD,QAAS,kBAAMP,EAASxB,EAAe,gBAA/C,eACA,4BAAQ+B,QAAS,kBAAMP,EAASxB,EAAe,eAA/C,cACA,kBAAC,GAAD,CAAS+E,WAAY,SAAAO,GAAK,OAAIA,EAAQ,IAAM,KAC5C,kBAAC,GAAD,CAASP,WAAY,SAAAO,GAAK,OAAI,KAAOA,EAAQ,MAAMN,KAAM,c,MCoBlDO,OA7Bf,SAAgBhE,GACd,IAAMC,EAAWC,cACjB,OACE,6BACE,2BAAO/F,GAAG,SAASJ,KAAK,OAAO0H,SAAUzB,EAAMiE,OAAQC,QAAM,IAC7D,4BAAQvK,UAAU,UAAU6G,QAAS,kBAAMxH,SAASC,eAAe,UAAU0H,UAC3E,uBAAGxG,GAAG,aAAamH,MAAM,gBAAzB,qBAIF,4BAAQd,QAAS,kBAAMP,EAASvB,GAAK,MACnC,uBAAGvE,GAAG,WAAWmH,MAAM,2BAAvB,iCAIF,4BAAQ3H,UAAU,WAAW6G,QAAS,kBAAMP,EAASrD,GAAK,GAAO,MAC/D,uBAAGzC,GAAG,WAAWmH,MAAM,WAAvB,qBAIF,4BAAQ3H,UAAU,WAAW6G,QAAS,kBAAMP,EAASrD,GAAK,GAAM,MAC9D,uBAAGzC,GAAG,YAAYmH,MAAM,YAAxB,uB,kBCuBO6C,OA1Cf,SAAkBnE,GAChB,IAAMC,EAAWC,cADM,EAEKkE,mBAAS,MAFd,mBAEhBC,EAFgB,KAERC,EAFQ,KAIjBC,EAAc,kBAAMD,EAAU,OAE9BE,EAAiB,SAAAzK,GAAI,OAAI,WAC7BwK,IACAvE,EAAMyE,SAAS1K,KAGjB,OACE,6BACE,4BAAQJ,UAAU,UAAU6G,QAAS,SAAAe,GAAC,OAAI+C,EAAU/C,EAAEmD,iBACpD,uBAAGvK,GAAG,eAAemH,MAAM,kBAA3B,qBAIF,4BAAQd,QAAS,kBAAMP,EAASvB,GAAK,MACnC,uBAAGvE,GAAG,YAAYmH,MAAM,2BAAxB,iCAIF,4BAAQ3H,UAAU,WAAW6G,QAAS,kBAAMP,EAASrD,GAAK,GAAO,MAC/D,uBAAGzC,GAAG,WAAWmH,MAAM,WAAvB,qBAIF,4BAAQ3H,UAAU,WAAW6G,QAAS,kBAAMP,EAASrD,GAAK,GAAM,MAC9D,uBAAGzC,GAAG,YAAYmH,MAAM,YAAxB,qBAIF,kBAACqD,GAAA,EAAD,CAAMC,SAAUP,EAAQQ,aAAW,EAACC,KAAMC,QAAQV,GAASW,QAAST,GAClE,kBAACU,GAAA,EAAD,CAAUzE,QAASgE,EAAe,QAAlC,OACA,kBAACS,GAAA,EAAD,CAAUzE,QAASgE,EAAe,SAAlC,OACA,kBAACS,GAAA,EAAD,CAAUzE,QAASgE,EAAe,SAAlC,W,mOCvBFU,G,YACJ,aAAe,IAAD,8BACZ,+CACKC,YAAc,EAAKA,YAAYnD,KAAjB,gBACnB,EAAKyC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAKoD,SAAW,EAAKA,SAASpD,KAAd,gBAChB,EAAKsB,YAAc,EAAKA,YAAYtB,KAAjB,gBALP,E,yEASFpD,GAAQ,IAAD,OACXyG,EAAOzG,EAAMC,OAAOyG,MAAM,GAChC,GAAID,EAAM,CACR,IAAIE,EAAM,IAAIxJ,MACRyJ,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAAC,GACdJ,EAAIG,OAAS,SAAAE,GAEX,IAAIrN,EAASS,SAAS6M,cAAc,UAChCN,EAAMK,EAAS/G,OACfnG,EAAQ6M,EAAI7M,MACZC,EAAS4M,EAAI5M,OACjBJ,EAAOG,MAAQA,EACfH,EAAOI,OAASA,EAChBJ,EAAOW,WAAW,MAAM4M,UAAUP,EAAK,EAAG,EAAG7M,EAAOC,GACpD,IAAI9B,EAAU0B,EAAOW,WAAW,MAAM6M,aAAa,EAAG,EAAGrN,EAAOC,IAGhEJ,EAASS,SAASC,eAAe,WAC1BP,MAAQH,EAAOkC,YACtBlC,EAAOI,OAASJ,EAAOoC,aACvB,IAAMI,EAAMxC,EAAOW,WAAW,OAC9BX,EAASS,SAASC,eAAe,cAC1BP,MAAQH,EAAOkC,YACtBlC,EAAOI,OAASJ,EAAOoC,aACvB,EAAKqF,MAAMgG,YAAW,EAAOnP,GAASoP,MAAK,WACzClL,EAAI5B,aAAa,EAAK6G,MAAMnJ,QAAS,EAAG,EAAG,EAAG,EAAG0B,EAAOkC,YAAalC,EAAOoC,cAE5E,EAAKqF,MAAMtB,MAAK,MAIlB,EAAKsB,MAAMkG,WAGb,IAAIC,EAAWR,EAAK9G,OAAOuH,OACvBD,EAAS1I,WAAW,eACtB8H,EAAIc,IAAMF,EACV,EAAKnG,MAAMsG,YAAYjB,EAAKnL,KAAK4D,UAAU,EAAGuH,EAAKnL,KAAKqM,YAAY,QAEpEjQ,MAAM,oCAGVkP,EAAOgB,cAAcnB,GAIvBzG,EAAMC,OAAOrB,MAAQ,K,+BAIdzD,GACP,GAAImI,KAAKlC,MAAMnJ,QAAS,CACtB,IAAM4P,EAAOzN,SAAS6M,cAAc,KAC9BtN,EAASS,SAAS6M,cAAc,UACtCtN,EAAOG,MAAQwJ,KAAKlC,MAAMnJ,QAAQ6B,MAClCH,EAAOI,OAASuJ,KAAKlC,MAAMnJ,QAAQ8B,OACvBJ,EAAOW,WAAW,MAC1BC,aAAa+I,KAAKlC,MAAMlJ,QAAS,EAAG,GACxC2P,EAAKC,aAAa,OAAQnO,EAAOoO,UAAP,gBAA0B5M,KACpD0M,EAAKC,aAAa,WAAlB,UAAiCxE,KAAKlC,MAAM/F,SAA5C,eACAwM,EAAK9F,QACL8F,EAAKG,SACLrO,EAAOqO,Y,+BAKFhI,GACP,IAAIrG,EAASqG,EAAMC,OACfqD,KAAKlC,MAAMnJ,UAAYqL,KAAKlC,MAAMnJ,QAAQ6B,MAAQH,EAAOG,OAASwJ,KAAKlC,MAAMnJ,QAAQ8B,OAASJ,EAAOI,SACvGuJ,KAAKlC,MAAM6G,OAAOtO,EAAQqG,EAAMxE,MAAOwE,EAAMvE,S,kCAIrCuE,GACV,GAAIsD,KAAKlC,MAAMnJ,UAAYqL,KAAKlC,MAAM7I,aAAe+K,KAAKlC,MAAM5I,cAAe,CAC7E,IAAImB,EAASqG,EAAMC,OACdrE,EAAmBjC,EAAOG,MAAQH,EAAOkC,YAAjCC,EAA8CnC,EAAOI,OAASJ,EAAOoC,aAC9ErC,EAAQ,CACVlC,KAAKwB,OAAOgH,EAAMxE,MAAQ7B,EAAOqC,YAAcJ,EAAS0H,KAAKlC,MAAMjJ,IACnEX,KAAKwB,OAAOgH,EAAMvE,MAAQ9B,EAAOsC,WAAaH,EAASwH,KAAKlC,MAAM/I,KAEpE,GAAIqB,EAAM,IAAM,GAAKA,EAAM,IAAM4J,KAAKlC,MAAMnJ,QAAQ6B,OAASJ,EAAM,IAAM,GAAKA,EAAM,IAAM4J,KAAKlC,MAAMnJ,QAAQ8B,OAAQ,CACnH,IAAIuF,EAAIgE,KAAKlC,MAAMnJ,QAAQJ,KAAK6B,EAAM,GAAK4J,KAAKlC,MAAMnJ,QAAQ6B,MAAQ,EAAe,EAAXJ,EAAM,IAC5E6F,EAAI+D,KAAKlC,MAAMnJ,QAAQJ,KAAK6B,EAAM,GAAK4J,KAAKlC,MAAMnJ,QAAQ6B,MAAQ,EAAe,EAAXJ,EAAM,GAAS,GACrF8F,EAAI8D,KAAKlC,MAAMnJ,QAAQJ,KAAK6B,EAAM,GAAK4J,KAAKlC,MAAMnJ,QAAQ6B,MAAQ,EAAe,EAAXJ,EAAM,GAAS,GACrF+F,EAAI6D,KAAKlC,MAAMnJ,QAAQJ,KAAK6B,EAAM,GAAK4J,KAAKlC,MAAMnJ,QAAQ6B,MAAQ,EAAe,EAAXJ,EAAM,GAAS,GACzF,GAAI4J,KAAKlC,MAAM7I,YAAa,CAC1B,IAAIT,EAAQ,CAACwH,EAAGC,EAAGC,EAAGC,EAAG/F,EAAM,GAAIA,EAAM,IACzC4J,KAAKlC,MAAM8G,YAAYpQ,QAEvBwL,KAAKlC,MAAMf,aAAaf,EAAGC,EAAGC,EAAGC,SAG5B6D,KAAKlC,MAAM7I,aACpB+K,KAAKlC,MAAMxB,aAAa,SACxBlI,MAAM,gFAEN4L,KAAKkD,SAASxG,K,+BAKhB,OACE,yBAAKjF,UAAU,YAAYQ,GAAI,aAC7B,yBAAKR,UAAU,QACb,8CACA,8CAEA,yBAAKA,UAAU,eACb,4BAAQQ,GAAG,SAASqG,QAAS0B,KAAKoB,eAEpC,yBAAK3J,UAAU,eACb,4BAAQQ,GAAG,YAAYqG,QAAS0B,KAAKoB,eAGvC,kBAAC,GAAD,CAAQW,OAAQ/B,KAAKiD,cACrB,kBAAC,GAAD,CAAUV,SAAUvC,KAAKuC,YAG3B,kBAAC,GAAD,MACA,kBAAC,GAAD,S,8CAOJ,OAAO,M,GA3IOxB,aA+IHC,gBAAQ,SAAArJ,GAAK,O,2VAAA,IAAUA,EAAM0E,SAAU,CACpDyH,WbnKwB,SAAChM,EAAavD,GAAd,OAAuB,SAAAwJ,GAE/C,OADAA,EAAS,CAAElG,KAAM,MAAOC,cAAavD,SAC9BsQ,QAAQC,YakKfV,Yb/JyB,SAAApM,GAAI,MAAK,CAAEH,KAAM,OAAQG,SagKlDgM,Qb9JqB,iBAAO,CAAEnM,KAAM,Ya+JpC8M,Ob1IoB,SAACtO,EAAQ6B,EAAOC,GAAhB,MAA2B,CAAEN,KAAM,SAAUxB,SAAQ6B,QAAOC,Ua2IhFyM,Yb9JyB,SAAApQ,GAAK,MAAK,CAAEqD,KAAM,QAASrD,Ua+JpD+H,iBACAC,OACAF,eACAS,gBATaiE,CAUZgC,IC5KH,uCAQO,IAAMtC,GAAQqE,YAAYC,EAAa,GAAIC,YAAgBC,MAElEC,IAASC,OACP,kBAAC,IAAD,CAAU1E,MAAOA,IACf,kBAAC,GAAD,OAEF5J,SAASC,eAAe,W","file":"static/js/main.60d98d7c.chunk.js","sourcesContent":["/*\r\n  -data is an array of pixels\r\n  -comparisons specify a comparison operator [=,>,>=,<,<=]\r\n  -oldVal and newVal are pixels (rgba values in an array)\r\n  -tolerance is an rgba range (only used when the comparison operator is equality)\r\n  searches the pixels in data looking for a match with oldVal within the given tolerance range.\r\n  matched pixels get changed to newVal\r\n  */\r\nexport function changeImgData(data, comparisons, oldVal, operators, newVal, tolerance) {\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    if (isMatch(comparisons, [data[i], data[i + 1], data[i + 2], data[i + 3]], oldVal, tolerance)) {\r\n      operate(operators, data, newVal, i);\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n  -Image is an ImageData objects\r\n  -pixel ([r,g,b,a,x,y]) is a pixel in Image containing its x and y coordinate\r\n  -comparisons specify a comparison operator [=,>,>=,<,<=]\r\n  -tolerance is an rgba range (only used when the comparison operator is equality)\r\n  -Returns an array of pixel indices that corresponds to a section in Image originating at pixel with the given tolerance range\r\n*/\r\nexport function getSection(Image, pixel, comparisons, oldColour, tolerance) {\r\n  let [width, height, data] = [Image.width, Image.height, Image.data];\r\n  // Adjacent offsets of pixels (Up, Right, Down, Left)\r\n  let adjacent = [[0, -1], [1, 0], [0, 1], [-1, 0]];\r\n  // visited[i] indicates whether pixel i has been added to the frontier before\r\n  let visited = new Array(width * height);\r\n  // The array of pixels to return\r\n  let section = [];\r\n  let [x, y] = [pixel[4], pixel[5]];\r\n  // The array of pixels that need to be checked if they belong to the section\r\n  let frontier = [[x, y]];\r\n  visited[y * width + x] = true;\r\n  while (frontier.length !== 0) {\r\n    [x, y] = frontier.pop();\r\n    // Check if pixel has valid coordinates\r\n    if (x < 0 || x > width || y < 0 || y > height) {\r\n      continue;\r\n    }\r\n    // Get the colour of the pixel\r\n    let colour = [];\r\n    for (let offset = 0; offset < 4; offset++) {\r\n      colour.push(data[y * width * 4 + x * 4 + offset]);\r\n    }\r\n    // Check that the pixel colour is a match\r\n    if (isMatch(comparisons, colour, oldColour, tolerance)) {\r\n      // Add pixel to section\r\n      section.push(y * width * 4 + x * 4);\r\n      // Add adjacent pixels to frontier\r\n      // eslint-disable-next-line\r\n      adjacent.forEach(adj => {\r\n        // If they have not been added before\r\n        if (!visited[(y + adj[1]) * width + x + adj[0]]) {\r\n          visited[(y + adj[1]) * width + x + adj[0]] = true;\r\n          frontier.push([x + adj[0], y + adj[1]]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return section;\r\n}\r\n\r\n// Grayscales the image data\r\nexport function grayscale(data) {\r\n  let avg = 0;\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    avg = Math.round((data[i] + data[i + 1] + data[i + 2]) / 3);\r\n    data[i] = avg;\r\n    data[i + 1] = avg;\r\n    data[i + 2] = avg;\r\n  }\r\n}\r\n\r\n// Negates the image data\r\nexport function negative(data) {\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    data[i] = 255 - data[i];\r\n    data[i + 1] = 255 - data[i + 1];\r\n    data[i + 2] = 255 - data[i + 2];\r\n  }\r\n}\r\n\r\n// Change the light intensity of the data by the given multiplier\r\nexport function lighten(data, mult) {\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    data[i] = data[i] * mult;\r\n    data[i + 2] = data[i + 2] * mult;\r\n    data[i + 1] = data[i + 1] * mult;\r\n  }\r\n}\r\n\r\n// returns true if the two pixels are similar enough according to the comparison option and the tolerance range\r\nfunction isMatch(comparisons, pixel1, pixel2, tolerance) {\r\n  let match = true;\r\n  let compare = comparisons[0];\r\n  for (let offset = 0; offset < 4; offset++) {\r\n    compare = comparisons[offset];\r\n    switch (compare) {\r\n      case \"=\":\r\n        match = match && Math.abs(pixel1[offset] - pixel2[offset]) <= tolerance[offset];\r\n        break;\r\n      case \">\":\r\n        match = match && pixel1[offset] > pixel2[offset];\r\n        break;\r\n      case \">=\":\r\n        match = match && pixel1[offset] >= pixel2[offset];\r\n\r\n        break;\r\n      case \"<\":\r\n        match = match && pixel1[offset] < pixel2[offset];\r\n        break;\r\n      case \"<=\":\r\n        match = match && pixel1[offset] <= pixel2[offset];\r\n        break;\r\n      default:\r\n        alert(\"Something went terribly wrong. Please refresh the page and try again\");\r\n        return;\r\n    }\r\n  }\r\n  return match;\r\n}\r\n\r\n// Change the pixel in data specified by index by applying the arithmetic operator on it and pixel2's values\r\nexport function operate(operators, data, pixel, index) {\r\n  let operator = operators;\r\n  for (let offset = 0; offset < 4; offset++) {\r\n    operator = operators[offset];\r\n    switch (operator) {\r\n      case \"=\":\r\n        data[index + offset] = pixel[offset];\r\n        break;\r\n      case \"+\":\r\n        data[index + offset] += pixel[offset];\r\n        break;\r\n      case \"-\":\r\n        data[index + offset] -= pixel[offset];\r\n        break;\r\n      case \"*\":\r\n        data[index + offset] *= pixel[offset];\r\n        break;\r\n      case \"/\":\r\n        data[index + offset] /= pixel[offset];\r\n        break;\r\n      default:\r\n        alert(\"Something went terribly wrong. Please refresh the page and try again\");\r\n        return;\r\n    }\r\n  }\r\n}\r\n","import { grayscale, negative, lighten, changeImgData, getSection, operate } from \"../ToolFunctions\";\r\n\r\nexport const initialState = {\r\n  imgData: null,\r\n  newData: null,\r\n  x1: 0,\r\n  x2: 0,\r\n  y1: 0,\r\n  y2: 0,\r\n  pixelSample: false,\r\n  colourSample: false,\r\n  pixel: null,\r\n  zoom1: 0,\r\n  zoom2: 0\r\n};\r\n\r\nconst mapEffectToFunction = { GRAYSCALE: grayscale, NEGATIVE: negative, BRIGHT: lighten, REPLACE: changeImgData };\r\nconst smallestSize = 50;\r\nconst zoomRatio = 1.5;\r\n\r\nfunction imageReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET\":\r\n      return action.isNewCanvas ? { ...state, newData: action.data } : { ...state, imgData: action.data };\r\n    case \"NAME\":\r\n      return {...state, fileName: action.name};\r\n    case \"REFRESH\":\r\n      return { ...state, x1: 0, x2: 0, y1: 0, y2: 0, sample: false, pixel: null, zoom1: 0, zoom2: 0 };\r\n    case \"CENTER\":\r\n      let canvas = action.canvas;\r\n      let [x, y, imgData] =\r\n        canvas.id === \"canvas\" ? [state.x1, state.y1, state.imgData] : [state.x2, state.y2, state.newData];\r\n      // Get the appropriate center point\r\n      let point = centerPoint(action.canvas, x, y, imgData.width, imgData.height, action.pageX, action.pageY);\r\n      // Recenter image if the center point has changed\r\n      if (point[0] !== x || point[1] !== y) {\r\n        let ctx = canvas.getContext(\"2d\");\r\n        // Update state\r\n        canvas.id === \"newCanvas\" ? ([state.x2, state.y2] = point) : ([state.x1, state.y1] = point);\r\n        // Construct the recentered image data\r\n        let [width1, height1] = [imgData.width, imgData.height];\r\n        let [width2, height2] = [width1 - point[0], height1 - point[1]];\r\n        // Construct only the parts we need\r\n        width2 = Math.min(canvas.width, width2);\r\n        height2 = Math.min(canvas.height, height2);\r\n        let data = new Uint8ClampedArray(width2 * height2 * 4);\r\n        // Copy the image data\r\n        for (let row = 0; row < height2; row++) {\r\n          for (let col = 0; col < width2; col++) {\r\n            for (let val = 0; val < 4; val++) {\r\n              data[row * width2 * 4 + col * 4 + val] =\r\n                imgData.data[(point[1] + row) * width1 * 4 + (point[0] + col) * 4 + val];\r\n            }\r\n          }\r\n        }\r\n        // Draw image\r\n        imgData = new ImageData(data, width2, height2);\r\n        ctx.putImageData(imgData, 0, 0);\r\n      }\r\n      return state;\r\n    case \"PIXEL\":\r\n      changeCursor(state.pixelSample);\r\n      return { ...state, pixelSample: false, pixel: action.pixel };\r\n    case \"SAMPLE\":\r\n      if (action.sample === \"PIXEL\") {\r\n        changeCursor(state.pixelSample);\r\n        return { ...state, pixelSample: !state.pixelSample, colourSample: false };\r\n      } else if (action.sample === \"COLOUR\") {\r\n        changeCursor(state.colourSample, false);\r\n        return { ...state, pixelSample: false, colourSample: !state.colourSample };\r\n      }\r\n      return state;\r\n    case \"BASIC\":\r\n      if (state.newData) {\r\n        // Get the effect\r\n        let effect = mapEffectToFunction[action.effect];\r\n        // Copy old data to new data\r\n        copy(state.imgData.data, state.newData.data);\r\n        // Apply effect and redraw\r\n        if (action.payload) {\r\n          effect(state.newData.data, ...action.payload);\r\n        } else {\r\n          effect(state.newData.data);\r\n        }\r\n        redraw(state.x2, state.y2, state.newData);\r\n      }\r\n      return state;\r\n    case \"SECTION\": {\r\n      if (state.pixel && state.newData) {\r\n        document.body.style.cursor = \"progress\";\r\n        let section = getSection(state.imgData, state.pixel, action.comparisons, action.oldVal, action.tolerance);\r\n        let data = state.newData.data;\r\n        copy(state.imgData.data, state.newData.data);\r\n        // Replace the colour of each pixel in the section\r\n        let newVal = action.newVal;\r\n        let operators = action.operators;\r\n        section.forEach(pixel => {\r\n          operate(operators, data, newVal, pixel);\r\n        });\r\n        redraw(state.x2, state.y2, state.newData);\r\n        document.body.style.cursor = \"default\";\r\n      } else if (!state.pixel) {\r\n        alert(\r\n          \"You must first specify a section to paint. Click the cursor icon and then click on an area in the left canvas.\"\r\n        );\r\n      }\r\n      return state;\r\n    }\r\n    case \"SWAP\": {\r\n      if (state.imgData) {\r\n        let [canvasName, imgFile, x, y] = action.copyToNew\r\n          ? [\"newCanvas\", state.imgData, state.x2, state.y2]\r\n          : [\"canvas\", state.newData, state.x1, state.y1];\r\n        const canvas = document.getElementById(canvasName);\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.putImageData(imgFile, -x, -y, x, y, canvas.width, canvas.height);\r\n        let data = new Uint8ClampedArray(imgFile.data);\r\n        let copy = new ImageData(data, imgFile.width, imgFile.height);\r\n        return action.copyToNew ? { ...state, newData: copy } : { ...state, imgData: copy };\r\n      }\r\n      return state;\r\n    }\r\n    case \"ZOOM\": {\r\n      if (state.imgData) {\r\n        let [canvasName, imgFile, zoom, x, y] = action.isNewCanvas\r\n          ? [\"newCanvas\", state.newData, state.zoom2, state.x2, state.y2]\r\n          : [\"canvas\", state.imgData, state.zoom1, state.x1, state.y1];\r\n        const canvas = document.getElementById(canvasName);\r\n        // Do nothing if the action is zooming out and the canvas completely contains the image unless user has zoomed in before\r\n        // Note: zoom < 0 is only there to maintain consistency (otherwise user might be able to zoom in but not zoom back out)\r\n        if (!action.isZoomOut || zoom < 0 || imgFile.width > canvas.scrollWidth || imgFile.height > canvas.scrollHeight) {\r\n          let newZoom = action.isZoomOut ? zoom + 1 : zoom - 1;\r\n          let mult = zoomRatio ** newZoom;\r\n          // Canvas dimensions is always square so images look appropriate\r\n          let width = Math.round(canvas.scrollWidth * mult);\r\n          // Set zoom bounds while still maintaining consistency\r\n          if ((action.isZoomOut && zoom >= 0) || (!action.isZoomOut && zoom <= 0)) {\r\n            if (!action.isZoomOut && width < smallestSize) {\r\n              width = smallestSize;\r\n            } else if (action.isZoomOut && width >= imgFile.width && width >= imgFile.height) {\r\n              width = Math.max(imgFile.width, imgFile.height);\r\n            }\r\n          }\r\n          // Redraw image if the zoom was valid\r\n          if (width !== canvas.width) {\r\n            // Set the zoom\r\n            canvas.width = canvas.height = width;\r\n            // Top-left pixel might have to change due to boundaries\r\n            [x, y] = boundary([x, y], canvas, imgFile.width, imgFile.height);\r\n            // Update state and redraw\r\n            state = action.isNewCanvas\r\n              ? { ...state, x2: x, y2: y, zoom2: newZoom }\r\n              : { ...state, x1: x, y1: y, zoom1: newZoom };\r\n            redraw(x, y, imgFile, canvasName);\r\n          }\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/*\r\n-x and y are the x and y coordinates of the top left pixel on the canvas\r\n-width and height are the width and height of the canvas image data\r\n-pageX and pageY are the x and y coordinates of the clicked point on the page if there was a clicked point\r\n-Returns the x and y coordinates of the center pixel on the canvas\r\n*/\r\nfunction centerPoint(canvas, x, y, width, height, pageX, pageY) {\r\n  let halfX = canvas.width / 2;\r\n  let halfY = canvas.height / 2;\r\n  let ratioX = canvas.width / canvas.scrollWidth;\r\n  let ratioY = canvas.height / canvas.scrollHeight;\r\n  // x/y + offsetX/offsetY - offsetLeft/offsetTop = x/y coordinate of clicked point\r\n  // Multiplied by ratioX/ratioY = x/y coordinate of clicked pixel\r\n  // Subtract by half to get the top left coordinate if clicked point was the center\r\n  let point = [\r\n    Math.round(x + (pageX - canvas.offsetLeft) * ratioX - halfX),\r\n    Math.round(y + (pageY - canvas.offsetTop) * ratioY - halfY)\r\n  ];\r\n  // Compensate for boundaries\r\n  return boundary(point, canvas, width, height);\r\n}\r\n\r\n// Translates the point if it is off the boundary specified by the canvas and its image data\r\nfunction boundary(point, canvas, imgWidth, imgHeight) {\r\n  // imgWidth - canvas.width = x-coordinate of leftmost pixels when rightmost pixels are on the boundary\r\n  // imgHeight - canvas.height = y-coordinate of topmost pixels when bottommost pixels are on the boundary\r\n  if (imgWidth < canvas.width || point[0] < 0) {\r\n    point[0] = 0;\r\n  } else {\r\n    point[0] = point[0] > imgWidth - canvas.width ? imgWidth - canvas.width : point[0];\r\n  }\r\n  if (imgHeight < canvas.height || point[1] < 0) {\r\n    point[1] = 0;\r\n  } else {\r\n    point[1] = point[1] > imgHeight - canvas.height ? imgHeight - canvas.height : point[1];\r\n  }\r\n  return point;\r\n}\r\n\r\n// Redraw the canvas\r\nfunction redraw(x, y, data, canvasName = \"newCanvas\") {\r\n  let canvas = document.getElementById(canvasName);\r\n  canvas.getContext(\"2d\").putImageData(data, -x, -y, x, y, canvas.width, canvas.height);\r\n}\r\n\r\n// Copy the image data from data1 into data2\r\nfunction copy(data1, data2) {\r\n  data1.forEach((pixel, index) => (data2[index] = pixel));\r\n}\r\n\r\n// Change the cursor style\r\nfunction changeCursor(sample, isPixelSample = true) {\r\n  let cursor = isPixelSample ? \"container cross\" : \"container dropper\";\r\n  document.getElementById(\"container\").className = sample ? \"container\" : cursor;\r\n}\r\n\r\nexport default imageReducer;\r\n","const initialState = {\r\n  cc: [\"=\", \"=\", \"=\", \"=\"],\r\n  fc: [255, 255, 255, 255],\r\n  oc: [\"=\", \"=\", \"=\", \"=\"],\r\n  rc: [255, 255, 255, 255],\r\n  tc: [10, 10, 10, 10],\r\n  rModal: [false, false, false, false],\r\n  fModal: [false, false, false, false]\r\n};\r\n\r\nfunction replaceReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"UPDATEINPUT\": {\r\n      let [name, value, index] = [action.name, action.value, action.index];\r\n      let max = 255;\r\n      if (name.startsWith(\"r\")) {\r\n        let operator = state.oc[index];\r\n        if (operator === \"*\" || operator === \"/\") {\r\n          max = 500;\r\n        }\r\n      }\r\n      if (!isNaN(value) && value >= 0 && value <= max) {\r\n        value = Number(Number(value).toFixed());\r\n        state[name.substring(0, 2)][index] = value;\r\n        return state;\r\n      }\r\n      return state;\r\n    }\r\n\r\n    case \"UPDATEOPTION\": {\r\n      let [index, option, isOperator] = [action.index, action.value, action.isOperator];\r\n      if (isOperator && state.rc[index] > 255 && option !== \"*\" && option !== \"/\") {\r\n        state.rc[index] = 255;\r\n      }\r\n      if (isOperator) {\r\n        state.oc[index] = option;\r\n      } else {\r\n        state.cc[index] = option;\r\n      }\r\n      return state;\r\n    }\r\n\r\n    case \"MODAL\": {\r\n      for (let i = 0; i < state.rModal.length; i++) {\r\n        state.rModal[i] = false;\r\n        state.fModal[i] = false;\r\n      }\r\n      if (action.index >= 0) {\r\n        action.replace ? (state.rModal[action.index] = true) : (state.fModal[action.index] = true);\r\n      }\r\n      return state;\r\n    }\r\n    case \"SAMPLECOLOUR\":\r\n      state.fc[0] = action.r;\r\n      state.fc[1] = action.g;\r\n      state.fc[2] = action.b;\r\n      state.fc[3] = action.a;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default replaceReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport imageReducer from \"./imageReducer\";\r\nimport replaceReducer from \"./replaceReducer\";\r\n\r\nexport default combineReducers({\r\n  image: imageReducer,\r\n  replace: replaceReducer\r\n});\r\n","export const setImgData = (isNewCanvas, data) => dispatch => {\r\n  dispatch({ type: \"SET\", isNewCanvas, data });\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const setFileName = name => ({ type: \"NAME\", name });\r\n\r\nexport const refresh = () => ({ type: \"REFRESH\" });\r\n\r\nexport const updatePixel = pixel => ({ type: \"PIXEL\", pixel });\r\n\r\nexport const switchSample = sample => ({ type: \"SAMPLE\", sample });\r\n\r\nexport const basicImgEffect = (effect, payload) => ({ type: \"BASIC\", effect, payload });\r\n\r\nexport const section = (comparisons, oldVal, operators, newVal, tolerance) => ({\r\n  type: \"SECTION\",\r\n  comparisons,\r\n  oldVal,\r\n  operators,\r\n  newVal,\r\n  tolerance\r\n});\r\n\r\nexport const swap = copyToNew => ({ type: \"SWAP\", copyToNew });\r\n\r\nexport const zoom = (isZoomOut, isNewCanvas) => ({ type: \"ZOOM\", isZoomOut, isNewCanvas });\r\n\r\nexport const center = (canvas, pageX, pageY) => ({ type: \"CENTER\", canvas, pageX, pageY });\r\n","export const updateInput = (event, index) => ({\r\n  type: \"UPDATEINPUT\",\r\n  name: event.target.name,\r\n  value: event.target.value,\r\n  index\r\n});\r\n\r\nexport const updateOption = (index, value, isOperator) => ({ type: \"UPDATEOPTION\", index, value, isOperator });\r\n\r\nexport const replaceModal = index => ({ type: \"MODAL\", index, replace: true });\r\n\r\nexport const findModal = index => ({ type: \"MODAL\", index, replace: false });\r\n\r\nexport const sampleColour = (r, g, b, a) => ({ type: \"SAMPLECOLOUR\", r, g, b, a });\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { replaceModal, updateOption, findModal } from \"./Actions/replaceActions\";\r\n\r\nconst arrowStyle = {\r\n  position: \"absolute\",\r\n  width: \"0\",\r\n  height: \"0\",\r\n  borderLeft: \"5px solid transparent\",\r\n  borderRight: \"5px solid transparent\",\r\n  borderTop: \"10px solid rgba(255,255,255,0.8)\",\r\n  top: \"calc(-100% + 13px)\",\r\n  left: \"calc(50% - 5px)\",\r\n  animation: \"appear 0.3s linear\"\r\n};\r\n\r\nconst boxStyle = {\r\n  position: \"absolute\",\r\n  width: \"max-content\",\r\n  height: \"25px\",\r\n  padding: \"5px\",\r\n  backgroundColor: \"rgba(255,255,255,0.8)\",\r\n  top: \"calc(-100% - 22.5px)\", // half of height + padding\r\n  left: \"100%\",\r\n  borderRadius: \"5px\",\r\n  transform: \"translateX(calc(-50% - 14px))\",\r\n  animation: \"appear 0.3s linear\"\r\n};\r\n\r\nfunction Options(props) {\r\n  const dispatch = useDispatch();\r\n  const index = props.index;\r\n  const modal = props.replace ? replaceModal : findModal;\r\n\r\n  let buttons = props.options.map(option => (\r\n    <button\r\n      key={option}\r\n      type=\"button\"\r\n      className=\"findBtn\"\r\n      onClick={() => dispatch(updateOption(index, option, props.replace))}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n  // Add event listener for a click to get rid of modal\r\n  window.addEventListener(\r\n    \"click\",\r\n    function click() {\r\n      window.removeEventListener(\"click\", click, false);\r\n      dispatch(modal(-1));\r\n    },\r\n    false\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <div style={arrowStyle}></div>\r\n      <div style={boxStyle}>{buttons}</div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Options;\r\n","export const colours = [\"r\", \"g\", \"b\", \"a\"];\r\nexport const fullColours = [\"red\", \"green\", \"blue\", \"alpha\"];\r\n\r\n// First character of the names of the columns in replace grid (Find, Replace, Tolerance)\r\nexport const columnInitials = [\"f\", \"r\", \"t\"];\r\n\r\nexport const comparisons = [\"=\", \">\", \">=\", \"<\", \"<=\"];\r\n\r\nexport const operators = [\"=\", \"+\", \"-\", \"*\", \"/\"];\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateInput, findModal } from \"./Actions/replaceActions\";\r\nimport Options from \"./Options\";\r\nimport { colours, fullColours, comparisons } from \"./Constants\";\r\n\r\nconst mapCompareToTitle = (compare, value, index) => {\r\n  let colour = fullColours[index];\r\n  var msg = \"\";\r\n  switch (compare) {\r\n    case \"=\":\r\n      msg = `Select only pixels that have a ${colour} value that is within the tolerance range of ${value}`;\r\n      break;\r\n    case \">\":\r\n      msg = `Select only pixels that have a ${colour} value greater than ${value}`;\r\n      break;\r\n    case \">=\":\r\n      msg = `Select only pixels that have a ${colour} value greater than or equal to ${value}`;\r\n      break;\r\n    case \"<\":\r\n      msg = `Select only pixels that have a ${colour} value less than ${value}`;\r\n      break;\r\n    case \"<=\":\r\n      msg = `Select only pixels that have a ${colour} value less than or equal to ${value}`;\r\n      break;\r\n    default:\r\n      return \"\";\r\n  }\r\n  return msg;\r\n};\r\n\r\nexport default function Find(props) {\r\n  const index = props.index;\r\n  const compare = useSelector(state => state.replace.cc[index]);\r\n  const value = useSelector(state => state.replace.fc[index]);\r\n  const modal = useSelector(state => state.replace.fModal[index]);\r\n  const dispatch = useDispatch();\r\n\r\n  let options = modal ? <Options options={comparisons} index={index} replace={false} /> : \"\";\r\n  return (\r\n    <span>\r\n      <span style={{ position: \"relative\" }}>\r\n        <button\r\n          type=\"button\"\r\n          title={mapCompareToTitle(compare, value, index)}\r\n          onClick={e => {\r\n            e.stopPropagation();\r\n            dispatch(findModal(index));\r\n          }}\r\n          className=\"findBtn\"\r\n        >\r\n          {compare}\r\n        </button>\r\n        {options}\r\n      </span>\r\n      <input type=\"text\" value={value} onChange={e => dispatch(updateInput(e, index))} name={\"fc\" + colours[index]} />\r\n    </span>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { replaceModal, updateInput } from \"./Actions/replaceActions\";\r\nimport Options from \"./Options\";\r\nimport { colours, fullColours, operators } from \"./Constants\";\r\n\r\nconst mapOperatorToTitle = (operator, value, index) => {\r\n  let colour = fullColours[index];\r\n  var msg = \"\";\r\n  switch (operator) {\r\n    case \"=\":\r\n      msg = `Change the ${colour} value of the selected pixels to ${value}`;\r\n      break;\r\n    case \"+\":\r\n      msg = `Increase the ${colour} value of the selected pixels by ${value}`;\r\n      break;\r\n    case \"-\":\r\n      msg = `Decrease the ${colour} value of the selected pixels by ${value}`;\r\n      break;\r\n    case \"*\":\r\n      msg = `Multiply the ${colour} value of the selected pixels by ${value / 100 + 1}`;\r\n      break;\r\n    case \"/\":\r\n      msg = `Divide the ${colour} value of the selected pixels by ${value / 100 + 1}`;\r\n      break;\r\n    default:\r\n      return \"\";\r\n  }\r\n  return msg;\r\n};\r\n\r\nfunction Replace(props) {\r\n  const index = props.index;\r\n  const operator = useSelector(state => state.replace.oc[index]);\r\n  const value = useSelector(state => state.replace.rc[index]);\r\n  const modal = useSelector(state => state.replace.rModal[index]);\r\n  const dispatch = useDispatch();\r\n\r\n  let percentage = operator === \"*\" || operator === \"/\" ? \"%\" : \"\";\r\n  let options = modal ? <Options options={operators} index={index} replace={true} /> : \"\";\r\n  // The operator button\r\n  let button = (\r\n    <span style={{ position: \"relative\" }}>\r\n      <button\r\n        type=\"button\"\r\n        title={mapOperatorToTitle(operator, value, index)}\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n          dispatch(replaceModal(index));\r\n        }}\r\n        className=\"findBtn\"\r\n      >\r\n        {operator}\r\n      </button>\r\n      {options}\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <span>\r\n      {button}\r\n      <input type=\"text\" value={value} onChange={e => dispatch(updateInput(e, index))} name={\"rc\" + colours[index]} />\r\n      {percentage}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Replace;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateInput } from \"./Actions/replaceActions\";\r\nimport { colours } from \"./Constants\";\r\n\r\nfunction Tolerance(props) {\r\n  const index = props.index;\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(state => state.replace.tc[index]);\r\n  return <input type=\"text\" value={value} onChange={e => dispatch(updateInput(e, index))} name={\"tc\" + colours[index]} />;\r\n}\r\n\r\nexport default Tolerance;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { store } from \"./index\";\r\nimport { switchSample, basicImgEffect, section } from \"./Actions/toolActions\";\r\nimport { updateOption, updateInput, sampleColour } from \"./Actions/replaceActions\";\r\nimport Find from \"./Find\";\r\nimport Replace from \"./Replace\";\r\nimport { colours, columnInitials } from \"./Constants\";\r\nimport Tolerance from \"./Tolerance\";\r\n\r\nclass ReplaceTool extends Component {\r\n  constructor() {\r\n    super();\r\n    this.replace = this.replace.bind(this);\r\n    this.section = this.section.bind(this);\r\n    this.navigate = this.navigate.bind(this);\r\n    this.copy = this.copy.bind(this);\r\n  }\r\n\r\n  replace() {\r\n    let state = this.props;\r\n    let comparisons = state.cc;\r\n    let oldVal = state.fc;\r\n    let operators = state.oc;\r\n    let newVal = [state.rc[0], state.rc[1], state.rc[2], state.rc[3]];\r\n    for (let i = 0; i < operators.length; i++) {\r\n      if (operators[i] === \"*\" || operators[i] === \"/\") {\r\n        newVal[i] = newVal[i] / 100 + 1;\r\n      }\r\n    }\r\n    let tolerance = state.tc;\r\n    this.props.basicImgEffect(\"REPLACE\", [comparisons, oldVal, operators, newVal, tolerance]);\r\n  }\r\n\r\n  section() {\r\n    let state = this.props;\r\n    let comparisons = state.cc;\r\n    let oldVal = state.fc;\r\n    let operators = state.oc;\r\n    let newVal = [state.rc[0], state.rc[1], state.rc[2], state.rc[3]];\r\n    for (let i = 0; i < operators.length; i++) {\r\n      if (operators[i] === \"*\" || operators[i] === \"/\") {\r\n        newVal[i] = newVal[i] / 100 + 1;\r\n      }\r\n    }\r\n    let tolerance = state.tc;\r\n    this.props.section(comparisons, oldVal, operators, newVal, tolerance);\r\n  }\r\n\r\n  // Helps the user navigate the input boxes using arrow keys\r\n  navigate(event) {\r\n    let key = event.which;\r\n    if (key >= 37 && key <= 40) {\r\n      let parent = document.getElementById(\"replaceGrid\");\r\n      let name = event.target.name;\r\n      if (!name) {\r\n        return;\r\n      }\r\n      let row = colours.findIndex(val => val === name[2]);\r\n      let col = columnInitials.findIndex(val => val === name[0]);\r\n      if (key === 37) {\r\n        // Left\r\n        if (event.target.selectionStart !== 0) {\r\n          return;\r\n        }\r\n        col = (col + columnInitials.length - 1) % columnInitials.length;\r\n      } else if (key === 38) {\r\n        // Up\r\n        row = (row + colours.length - 1) % colours.length;\r\n      } else if (key === 39) {\r\n        // Right\r\n        if (event.target.selectionStart !== event.target.value.length) {\r\n          return;\r\n        }\r\n        col = (col + 1) % columnInitials.length;\r\n      } else {\r\n        // Down\r\n        row = (row + 1) % colours.length;\r\n      }\r\n      let newName = columnInitials[col] + \"c\" + colours[row];\r\n      parent[newName].focus();\r\n      // Set cursor position\r\n      var end = 0;\r\n      if (key === 37 || key === 39) {\r\n        end = key === 37 ? parent[newName].value.length : 0;\r\n      } else {\r\n        end = event.target.selectionStart;\r\n      }\r\n      // Use setTimeout so focus occurs first\r\n      setTimeout(() => parent[newName].setSelectionRange(end, end), 0);\r\n    }\r\n  }\r\n\r\n  copy() {\r\n    let pixel = store.getState().image.pixel;\r\n    if (pixel) {\r\n      this.props.sampleColour(pixel[0], pixel[1], pixel[2], pixel[3]);\r\n    } else {\r\n      alert(\"You must specify a pixel first. Click on the cursor icon and then click on a pixel on the canvas to do so\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let frt = colours.map((colour, index) => (\r\n      <React.Fragment>\r\n        <Find key={\"fc\" + colour} index={index} />\r\n        <Replace key={\"rc\" + colour} index={index} />\r\n        <Tolerance key={\"tc\" + colour} index={index} />\r\n      </React.Fragment>\r\n    ));\r\n    return (\r\n      <form id=\"replaceGrid\" className=\"replaceGrid\" onKeyDown={this.navigate} autoComplete=\"off\">\r\n        <label></label>\r\n        <span>\r\n          <label>Find</label>\r\n          <button\r\n            onClick={() => this.props.switchSample(\"PIXEL\")}\r\n            type=\"button\"\r\n            title=\"Specify a section on the canvas by clicking on a pixel within that section\"\r\n            className=\"infoTool\"\r\n          >\r\n            <i id=\"clickIcon\">&nbsp;&nbsp;&nbsp;&nbsp;</i>\r\n          </button>\r\n          <button\r\n            onClick={() => this.props.switchSample(\"COLOUR\")}\r\n            type=\"button\"\r\n            title=\"Sample a pixel's colour off one of the canvases\"\r\n            className=\"infoTool\"\r\n          >\r\n            <i id=\"dropperIcon\">&nbsp;&nbsp;&nbsp;&nbsp;</i>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.copy}\r\n            title=\"Copy the selected pixel's colour to the inputs\"\r\n            className=\"infoTool\"\r\n          >\r\n            <i id=\"mouseDropperIcon\">&nbsp;&nbsp;&nbsp;&nbsp;</i>\r\n          </button>\r\n        </span>\r\n        <label>Replace</label>\r\n        <label>Tolerance</label>\r\n        <label>Red:</label>\r\n        {frt[0]}\r\n        <label>Green:</label>\r\n        {frt[1]}\r\n        <label>Blue:</label>\r\n        {frt[2]}\r\n        <label>Alpha:</label>\r\n        {frt[3]}\r\n        <div id=\"replaceBtns\">\r\n          <button type=\"button\" onClick={this.replace}>\r\n            Replace Colour\r\n          </button>\r\n          <button type=\"button\" onClick={this.section}>\r\n            Replace Section Colour\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({ ...state.replace }), {\r\n  switchSample,\r\n  basicImgEffect,\r\n  section,\r\n  updateOption,\r\n  updateInput,\r\n  sampleColour\r\n})(ReplaceTool);\r\n","import React from \"react\";\r\nimport ReplaceTool from \"./ReplaceTool\";\r\nimport \"./Styles/Tools.css\";\r\n\r\nfunction Tools() {\r\n  return (\r\n    <div>\r\n      <ReplaceTool />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tools;\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { basicImgEffect } from \"./Actions/toolActions\";\r\n\r\nclass Lighten extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = { val: 0 };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    let val = event.target.value;\r\n    if (!isNaN(val) && val >= 0 && val <= 500) {\r\n      val = Number(Number(val).toFixed());\r\n      this.setState({ val });\r\n    }\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.basicImgEffect(\"BRIGHT\", [this.props.multiplier(this.state.val)]);\r\n  }\r\n\r\n  render() {\r\n    let text = this.props.text || \"Lighten\";\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={this.handleClick}> {text}</button>\r\n        <input type=\"text\" value={this.state.val} onChange={this.handleChange} style={{ width: \"25px\" }} />\r\n        <label>%</label>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(() => ({}), { basicImgEffect })(Lighten);\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { basicImgEffect } from \"./Actions/toolActions\";\r\nimport Lighten from \"./Lighten\";\r\n\r\nfunction SimpleTools() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr\", justifyItems: \"center\" }}>\r\n      <div>\r\n        <button onClick={() => dispatch(basicImgEffect(\"GRAYSCALE\"))}> Grayscale </button>\r\n        <button onClick={() => dispatch(basicImgEffect(\"NEGATIVE\"))}> Negative </button>\r\n        <Lighten multiplier={ratio => ratio / 100 + 1} />\r\n        <Lighten multiplier={ratio => 100 / (ratio + 100)} text={\"Darken\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SimpleTools;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { swap, zoom } from \"./Actions/toolActions\";\r\n\r\nfunction Upload(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <input id=\"upload\" type=\"file\" onChange={props.change} hidden />\r\n      <button className=\"fileBtn\" onClick={() => document.getElementById(\"upload\").click()}>\r\n        <i id=\"uploadIcon\" title=\"Upload Image\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button onClick={() => dispatch(swap(false))}>\r\n        <i id=\"leftIcon\" title=\"Copy new preview to old\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button className=\"infoTool\" onClick={() => dispatch(zoom(false, false))}>\r\n        <i id=\"plusIcon\" title=\"Zoom in\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button className=\"infoTool\" onClick={() => dispatch(zoom(true, false))}>\r\n        <i id=\"minusIcon\" title=\"Zoom out\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { swap, zoom } from \"./Actions/toolActions\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nfunction Download(props) {\r\n  const dispatch = useDispatch();\r\n  const [anchor, setAnchor] = useState(null);\r\n\r\n  const handleClose = () => setAnchor(null);\r\n\r\n  const handleDownload = type => () => {\r\n    handleClose();\r\n    props.download(type);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"fileBtn\" onClick={e => setAnchor(e.currentTarget)}>\r\n        <i id=\"downloadIcon\" title=\"Download Image\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button onClick={() => dispatch(swap(true))}>\r\n        <i id=\"rightIcon\" title=\"Copy old preview to new\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button className=\"infoTool\" onClick={() => dispatch(zoom(false, true))}>\r\n        <i id=\"plusIcon\" title=\"Zoom in\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button className=\"infoTool\" onClick={() => dispatch(zoom(true, true))}>\r\n        <i id=\"minusIcon\" title=\"Zoom out\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <Menu anchorEl={anchor} keepMounted open={Boolean(anchor)} onClose={handleClose}>\r\n        <MenuItem onClick={handleDownload(\"png\")}>PNG</MenuItem>\r\n        <MenuItem onClick={handleDownload(\"jpeg\")}>JPG</MenuItem>\r\n        <MenuItem onClick={handleDownload(\"webp\")}>WebP</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Download;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setImgData,\r\n  setFileName,\r\n  refresh,\r\n  center,\r\n  updatePixel,\r\n  basicImgEffect,\r\n  swap,\r\n  switchSample\r\n} from \"./Actions/toolActions\";\r\nimport { sampleColour } from \"./Actions/replaceActions\";\r\nimport Tools from \"./Tools\";\r\nimport SimpleTools from \"./SimpleTools\";\r\nimport \"./Styles/App.css\";\r\nimport Upload from \"./Upload\";\r\nimport Download from \"./Download\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.imageChange = this.imageChange.bind(this);\r\n    this.download = this.download.bind(this);\r\n    this.recenter = this.recenter.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  // Fires when a new image is uploaded\r\n  imageChange(event) {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      let img = new Image();\r\n      const reader = new FileReader();\r\n      reader.onload = read => {\r\n        img.onload = imgEvent => {\r\n          // Get image data\r\n          var canvas = document.createElement(\"canvas\");\r\n          let img = imgEvent.target;\r\n          let width = img.width;\r\n          let height = img.height;\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\r\n          let imgData = canvas.getContext(\"2d\").getImageData(0, 0, width, height);\r\n\r\n          // Draw image onto canvases\r\n          canvas = document.getElementById(\"canvas\");\r\n          canvas.width = canvas.scrollWidth;\r\n          canvas.height = canvas.scrollHeight;\r\n          const ctx = canvas.getContext(\"2d\");\r\n          canvas = document.getElementById(\"newCanvas\");\r\n          canvas.width = canvas.scrollWidth;\r\n          canvas.height = canvas.scrollHeight;\r\n          this.props.setImgData(false, imgData).then(() => {\r\n            ctx.putImageData(this.props.imgData, 0, 0, 0, 0, canvas.scrollWidth, canvas.scrollHeight);\r\n            // copy image data into other canvas\r\n            this.props.swap(true);\r\n          });\r\n\r\n          // refresh state\r\n          this.props.refresh();\r\n        };\r\n\r\n        let filedata = read.target.result;\r\n        if (filedata.startsWith(\"data:image\")) {\r\n          img.src = filedata;\r\n          this.props.setFileName(file.name.substring(0, file.name.lastIndexOf(\".\")));\r\n        } else {\r\n          alert(\"That file type is not supported\");\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n    // Prevent file name from appearing\r\n    //let name = event.target.value.substr(event.target.value.lastIndexOf(\"\\\\\") + 1);\r\n    event.target.value = \"\";\r\n  }\r\n\r\n  // Download new image\r\n  download(type) {\r\n    if (this.props.imgData) {\r\n      const link = document.createElement(\"a\");\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = this.props.imgData.width;\r\n      canvas.height = this.props.imgData.height;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.putImageData(this.props.newData, 0, 0);\r\n      link.setAttribute(\"href\", canvas.toDataURL(`image/${type}`));\r\n      link.setAttribute(\"download\", `${this.props.fileName}-converted`);\r\n      link.click();\r\n      link.remove();\r\n      canvas.remove();\r\n    }\r\n  }\r\n\r\n  // Center the image on canvas to the clicked point\r\n  recenter(event) {\r\n    let canvas = event.target;\r\n    if (this.props.imgData && (this.props.imgData.width > canvas.width || this.props.imgData.height > canvas.height)) {\r\n      this.props.center(canvas, event.pageX, event.pageY);\r\n    }\r\n  }\r\n\r\n  handleClick(event) {\r\n    if (this.props.imgData && (this.props.pixelSample || this.props.colourSample)) {\r\n      let canvas = event.target;\r\n      let [ratioX, ratioY] = [canvas.width / canvas.scrollWidth, canvas.height / canvas.scrollHeight];\r\n      let point = [\r\n        Math.round((event.pageX - canvas.offsetLeft) * ratioX + this.props.x1),\r\n        Math.round((event.pageY - canvas.offsetTop) * ratioY + this.props.y1)\r\n      ];\r\n      if (point[0] >= 0 && point[0] <= this.props.imgData.width && point[1] >= 0 && point[1] <= this.props.imgData.height) {\r\n        let r = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4];\r\n        let g = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4 + 1];\r\n        let b = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4 + 2];\r\n        let a = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4 + 3];\r\n        if (this.props.pixelSample) {\r\n          let pixel = [r, g, b, a, point[0], point[1]];\r\n          this.props.updatePixel(pixel);\r\n        } else {\r\n          this.props.sampleColour(r, g, b, a);\r\n        }\r\n      }\r\n    } else if (this.props.pixelSample) {\r\n      this.props.switchSample(\"PIXEL\");\r\n      alert(\"You must upload an image first. Click the upload button to upload an image.\");\r\n    } else {\r\n      this.recenter(event);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\" id={\"container\"}>\r\n        <div className=\"grid\">\r\n          <label>Old Preview</label>\r\n          <label>New Preview</label>\r\n\r\n          <div className=\"transparent\">\r\n            <canvas id=\"canvas\" onClick={this.handleClick}></canvas>\r\n          </div>\r\n          <div className=\"transparent\">\r\n            <canvas id=\"newCanvas\" onClick={this.handleClick}></canvas>\r\n          </div>\r\n\r\n          <Upload change={this.imageChange} />\r\n          <Download download={this.download} />\r\n        </div>\r\n\r\n        <Tools />\r\n        <SimpleTools />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // No need to rerender since the canvas rerenders on its own\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default connect(state => ({ ...state.image }), {\r\n  setImgData,\r\n  setFileName,\r\n  refresh,\r\n  center,\r\n  updatePixel,\r\n  basicImgEffect,\r\n  swap,\r\n  switchSample,\r\n  sampleColour\r\n})(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./Reducers/rootReducer\";\r\nimport App from \"./App\";\r\n\r\nexport const store = createStore(rootReducer, {}, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}