{"version":3,"sources":["ToolFunctions.js","Reducers/imageReducer.js","Actions/toolActions.js","Replace.js","Tools.js","Lighten.js","SimpleTools.js","Upload.js","Download.js","App.js","index.js"],"names":["isMatch","pixel1","pixel2","tolerance","match","offset","Math","abs","initialState","imgData","newData","x1","x2","y1","y2","sample","pixel","zoom1","zoom2","mapEffectToFunction","GRAYSCALE","data","avg","i","length","round","NEGATIVE","BRIGHT","mult","REPLACE","oldVal","newVal","smallestSize","zoomRatio","boundary","point","canvas","imgWidth","imgHeight","width","height","redraw","x","y","canvasName","document","getElementById","getContext","putImageData","copy","data1","data2","forEach","index","changeCursor","className","imageReducer","state","action","type","isNewCanvas","id","pageX","pageY","halfX","halfY","ratioX","scrollWidth","ratioY","scrollHeight","offsetLeft","offsetTop","centerPoint","ctx","width1","height1","width2","height2","min","Uint8ClampedArray","row","col","val","ImageData","effect","payload","section","Image","adjacent","visited","Array","oldColour","frontier","pop","colour","push","adj","getSection","copyToNew","imgFile","zoom","isZoomOut","newZoom","max","switchSample","basicImgEffect","swap","Replace","fcr","fcg","fcb","fca","rcr","rcg","rcb","rca","tcr","tcg","tcb","tca","onChange","bind","replace","click","navigate","event","value","Number","target","isNaN","toFixed","name","this","setState","preventDefault","props","alert","key","which","parent","parentElement","start","end","num","selectionStart","focus","onKeyDown","onClick","title","e","prevState","Component","connect","Tools","Lighten","handleChange","handleClick","multiplier","text","Fragment","style","SimpleTools","dispatch","useDispatch","display","gridTemplateColumns","justifyItems","ratio","Upload","change","hidden","Download","download","href","App","imageChange","recenter","file","files","img","reader","FileReader","onload","read","imgEvent","createElement","drawImage","getImageData","setImgData","then","refresh","filedata","result","startsWith","src","readAsDataURL","link","setAttribute","toDataURL","center","updatePixel","Promise","resolve","store","createStore","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.63dadb5f.chunk.js","sourcesContent":["/*\r\n  -data is an array of pixels\r\n  -oldVal and newVal are pixels (rgba values in an array)\r\n  -tolerance is an rgba range\r\n  searches the pixels in data looking for a match with oldVal within the given tolerance range.\r\n  matched pixels get changed to newVal\r\n  */\r\nexport function changeImgData(data, oldVal, newVal, tolerance) {\r\n  let match = false;\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    match = isMatch([data[i], data[i + 1], data[i + 2], data[i + 3]], oldVal, tolerance);\r\n    if (match) {\r\n      for (let offset = 0; offset < 4; offset++) {\r\n        data[i + offset] = newVal[offset];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n  -Image is an ImageData objects\r\n  -pixel ([r,g,b,a,x,y]) is a pixel in Image containing its x and y coordinate\r\n  -tolerance is an rgba range\r\n  -Returns an array of pixel indices that corresponds to a section in Image originating at pixel with the given tolerance range\r\n*/\r\nexport function getSection(Image, pixel, tolerance) {\r\n  let [width, height, data] = [Image.width, Image.height, Image.data];\r\n  // Adjacent offsets of pixels (Up, Right, Down, Left)\r\n  let adjacent = [[0, -1], [1, 0], [0, 1], [-1, 0]];\r\n  // visited[i] indicates whether pixel i has been added to the frontier before\r\n  let visited = new Array(width * height);\r\n  // The array of pixels to return\r\n  let section = [];\r\n  let oldColour = [pixel[0], pixel[1], pixel[2], pixel[3]];\r\n  let [x, y] = [pixel[4], pixel[5]];\r\n  // The array of pixels that need to be checked if they belong to the section\r\n  let frontier = [[x, y]];\r\n  visited[y * width + x] = true;\r\n  while (frontier.length !== 0) {\r\n    [x, y] = frontier.pop();\r\n    // Check if pixel has valid coordinates\r\n    if (x < 0 || x > width || y < 0 || y > height) {\r\n      continue;\r\n    }\r\n    // Get the colour of the pixel\r\n    let colour = [];\r\n    for (let offset = 0; offset < 4; offset++) {\r\n      colour.push(data[y * width * 4 + x * 4 + offset]);\r\n    }\r\n    // Check that the pixel colour is a match\r\n    if (isMatch(colour, oldColour, tolerance)) {\r\n      // Add pixel to section\r\n      section.push(y * width * 4 + x * 4);\r\n      // Add adjacent pixels to frontier\r\n      // eslint-disable-next-line\r\n      adjacent.forEach(adj => {\r\n        // If they have not been added before\r\n        if (!visited[(y + adj[1]) * width + x + adj[0]]) {\r\n          visited[(y + adj[1]) * width + x + adj[0]] = true;\r\n          frontier.push([x + adj[0], y + adj[1]]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return section;\r\n}\r\n\r\n// Grayscales the image data\r\nexport function grayscale(data) {\r\n  let avg = 0;\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    avg = Math.round((data[i] + data[i + 1] + data[i + 2]) / 3);\r\n    data[i] = avg;\r\n    data[i + 1] = avg;\r\n    data[i + 2] = avg;\r\n  }\r\n}\r\n\r\n// Negates the image data\r\nexport function negative(data) {\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    data[i] = 255 - data[i];\r\n    data[i + 1] = 255 - data[i + 1];\r\n    data[i + 2] = 255 - data[i + 2];\r\n  }\r\n}\r\n\r\n// Change the light intensity of the data by the given multiplier\r\nexport function lighten(data, mult) {\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    data[i] = data[i] * mult > 255 ? 255 : data[i] * mult;\r\n    data[i + 1] = data[i + 1] * mult > 255 ? 255 : data[i + 1] * mult;\r\n    data[i + 2] = data[i + 2] * mult > 255 ? 255 : data[i + 2] * mult;\r\n  }\r\n}\r\n\r\n// returns true if the two pixels are similar enough according to the tolerance range\r\nexport function isMatch(pixel1, pixel2, tolerance) {\r\n  let match = true;\r\n  for (let offset = 0; offset < 4; offset++) {\r\n    match = match && Math.abs(pixel1[offset] - pixel2[offset]) <= tolerance[offset];\r\n  }\r\n  return match;\r\n}\r\n","import { grayscale, negative, lighten, changeImgData, getSection } from \"../ToolFunctions\";\r\n\r\nexport const initialState = {\r\n  imgData: null,\r\n  newData: null,\r\n  x1: 0,\r\n  x2: 0,\r\n  y1: 0,\r\n  y2: 0,\r\n  sample: false,\r\n  pixel: null,\r\n  zoom1: 0,\r\n  zoom2: 0\r\n};\r\n\r\nconst mapEffectToFunction = { GRAYSCALE: grayscale, NEGATIVE: negative, BRIGHT: lighten, REPLACE: changeImgData };\r\nconst smallestSize = 50;\r\nconst zoomRatio = 1.5;\r\n\r\nfunction imageReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET\":\r\n      return action.isNewCanvas ? { ...state, newData: action.data } : { ...state, imgData: action.data };\r\n    case \"REFRESH\":\r\n      return { ...state, x1: 0, x2: 0, y1: 0, y2: 0, sample: false, pixel: null, zoom1: 0, zoom2: 0 };\r\n    case \"CENTER\":\r\n      let canvas = action.canvas;\r\n      let [x, y, imgData] =\r\n        canvas.id === \"canvas\" ? [state.x1, state.y1, state.imgData] : [state.x2, state.y2, state.newData];\r\n      // Get the appropriate center point\r\n      let point = centerPoint(action.canvas, x, y, imgData.width, imgData.height, action.pageX, action.pageY);\r\n      // Recenter image if the center point has changed\r\n      if (point[0] !== x || point[1] !== y) {\r\n        let ctx = canvas.getContext(\"2d\");\r\n        // Update state\r\n        canvas.id === \"newCanvas\" ? ([state.x2, state.y2] = point) : ([state.x1, state.y1] = point);\r\n        // Construct the recentered image data\r\n        let [width1, height1] = [imgData.width, imgData.height];\r\n        let [width2, height2] = [width1 - point[0], height1 - point[1]];\r\n        // Construct only the parts we need\r\n        width2 = Math.min(canvas.width, width2);\r\n        height2 = Math.min(canvas.height, height2);\r\n        let data = new Uint8ClampedArray(width2 * height2 * 4);\r\n        // Copy the image data\r\n        for (let row = 0; row < height2; row++) {\r\n          for (let col = 0; col < width2; col++) {\r\n            for (let val = 0; val < 4; val++) {\r\n              data[row * width2 * 4 + col * 4 + val] =\r\n                imgData.data[(point[1] + row) * width1 * 4 + (point[0] + col) * 4 + val];\r\n            }\r\n          }\r\n        }\r\n        // Draw image\r\n        imgData = new ImageData(data, width2, height2);\r\n        ctx.putImageData(imgData, 0, 0);\r\n      }\r\n      return state;\r\n    case \"PIXEL\":\r\n      changeCursor(state.sample);\r\n      return { ...state, sample: false, pixel: action.pixel };\r\n    case \"SAMPLE\":\r\n      changeCursor(state.sample);\r\n      return { ...state, sample: !state.sample };\r\n    case \"BASIC\":\r\n      if (state.newData) {\r\n        // Get the effect\r\n        let effect = mapEffectToFunction[action.effect];\r\n        // Copy old data to new data\r\n        copy(state.imgData.data, state.newData.data);\r\n        // Apply effect and redraw\r\n        if (action.payload) {\r\n          effect(state.newData.data, ...action.payload);\r\n        } else {\r\n          effect(state.newData.data);\r\n        }\r\n        redraw(state.x2, state.y2, state.newData);\r\n      }\r\n      return state;\r\n    case \"SECTION\": {\r\n      if (state.pixel && state.newData) {\r\n        let section = getSection(state.imgData, state.pixel, action.tolerance);\r\n        let data = state.newData.data;\r\n        copy(state.imgData.data, state.newData.data);\r\n        // Replace the colour of each pixel in the section\r\n        let newVal = action.newVal;\r\n        section.forEach(pixel => {\r\n          data[pixel] = newVal[0];\r\n          data[pixel + 1] = newVal[1];\r\n          data[pixel + 2] = newVal[2];\r\n          data[pixel + 3] = newVal[3];\r\n        });\r\n        redraw(state.x2, state.y2, state.newData);\r\n      }\r\n      return state;\r\n    }\r\n    case \"SWAP\": {\r\n      if (state.imgData) {\r\n        let [canvasName, imgFile, x, y] = action.copyToNew\r\n          ? [\"newCanvas\", state.imgData, state.x2, state.y2]\r\n          : [\"canvas\", state.newData, state.x1, state.y1];\r\n        const canvas = document.getElementById(canvasName);\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.putImageData(imgFile, -x, -y, x, y, canvas.width, canvas.height);\r\n        let data = new Uint8ClampedArray(imgFile.data);\r\n        let copy = new ImageData(data, imgFile.width, imgFile.height);\r\n        return action.copyToNew ? { ...state, newData: copy } : { ...state, imgData: copy };\r\n      }\r\n      return state;\r\n    }\r\n    case \"ZOOM\": {\r\n      if (state.imgData) {\r\n        let [canvasName, imgFile, zoom, x, y] = action.isNewCanvas\r\n          ? [\"newCanvas\", state.newData, state.zoom2, state.x2, state.y2]\r\n          : [\"canvas\", state.imgData, state.zoom1, state.x1, state.y1];\r\n        const canvas = document.getElementById(canvasName);\r\n        // Do nothing if the action is zooming out and the canvas completely contains the image unless user has zoomed in before\r\n        // Note: zoom < 0 is only there to maintain consistency (otherwise user might be able to zoom in but not zoom back out)\r\n        if (!action.isZoomOut || zoom < 0 || imgFile.width > canvas.scrollWidth || imgFile.height > canvas.scrollHeight) {\r\n          let newZoom = action.isZoomOut ? zoom + 1 : zoom - 1;\r\n          let mult = zoomRatio ** newZoom;\r\n          // Canvas dimensions is always square so images look appropriate\r\n          let width = Math.round(canvas.scrollWidth * mult);\r\n          // Set zoom bounds while still maintaining consistency\r\n          if ((action.isZoomOut && zoom >= 0) || (!action.isZoomOut && zoom <= 0)) {\r\n            if (!action.isZoomOut && width < smallestSize) {\r\n              width = smallestSize;\r\n            } else if (action.isZoomOut && width >= imgFile.width && width >= imgFile.height) {\r\n              width = Math.max(imgFile.width, imgFile.height);\r\n            }\r\n          }\r\n          // Redraw image if the zoom was valid\r\n          if (width !== canvas.width) {\r\n            // Set the zoom\r\n            canvas.width = canvas.height = width;\r\n            // Top-left pixel might have to change due to boundaries\r\n            [x, y] = boundary([x, y], canvas, imgFile.width, imgFile.height);\r\n            // Update state and redraw\r\n            state = action.isNewCanvas\r\n              ? { ...state, x2: x, y2: y, zoom2: newZoom }\r\n              : { ...state, x1: x, y1: y, zoom1: newZoom };\r\n            redraw(x, y, imgFile, canvasName);\r\n          }\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/*\r\n-x and y are the x and y coordinates of the top left pixel on the canvas\r\n-width and height are the width and height of the canvas image data\r\n-pageX and pageY are the x and y coordinates of the clicked point on the page if there was a clicked point\r\n-Returns the x and y coordinates of the center pixel on the canvas\r\n*/\r\nfunction centerPoint(canvas, x, y, width, height, pageX, pageY) {\r\n  let halfX = canvas.width / 2;\r\n  let halfY = canvas.height / 2;\r\n  let ratioX = canvas.width / canvas.scrollWidth;\r\n  let ratioY = canvas.height / canvas.scrollHeight;\r\n  // x/y + offsetX/offsetY - offsetLeft/offsetTop = x/y coordinate of clicked point\r\n  // Multiplied by ratioX/ratioY = x/y coordinate of clicked pixel\r\n  // Subtract by half to get the top left coordinate if clicked point was the center\r\n  let point = [\r\n    Math.round(x + (pageX - canvas.offsetLeft) * ratioX - halfX),\r\n    Math.round(y + (pageY - canvas.offsetTop) * ratioY - halfY)\r\n  ];\r\n  // Compensate for boundaries\r\n  return boundary(point, canvas, width, height);\r\n}\r\n\r\n// Translates the point if it is off the boundary specified by the canvas and its image data\r\nfunction boundary(point, canvas, imgWidth, imgHeight) {\r\n  // imgWidth - canvas.width = x-coordinate of leftmost pixels when rightmost pixels are on the boundary\r\n  // imgHeight - canvas.height = y-coordinate of topmost pixels when bottommost pixels are on the boundary\r\n  if (imgWidth < canvas.width || point[0] < 0) {\r\n    point[0] = 0;\r\n  } else {\r\n    point[0] = point[0] > imgWidth - canvas.width ? imgWidth - canvas.width : point[0];\r\n  }\r\n  if (imgHeight < canvas.height || point[1] < 0) {\r\n    point[1] = 0;\r\n  } else {\r\n    point[1] = point[1] > imgHeight - canvas.height ? imgHeight - canvas.height : point[1];\r\n  }\r\n  return point;\r\n}\r\n\r\n// Redraw the canvas\r\nfunction redraw(x, y, data, canvasName = \"newCanvas\") {\r\n  let canvas = document.getElementById(canvasName);\r\n  canvas.getContext(\"2d\").putImageData(data, -x, -y, x, y, canvas.width, canvas.height);\r\n}\r\n\r\n// Copy the image data from data1 into data2\r\nfunction copy(data1, data2) {\r\n  data1.forEach((pixel, index) => (data2[index] = pixel));\r\n}\r\n\r\n// Change the cursor style\r\nfunction changeCursor(sample) {\r\n  document.getElementById(\"container\").className = sample ? \"container\" : \"container cross\";\r\n}\r\n\r\nexport default imageReducer;\r\n","export const setImgData = (isNewCanvas, data) => dispatch => {\r\n  dispatch({ type: \"SET\", isNewCanvas, data });\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const refresh = () => ({ type: \"REFRESH\" });\r\n\r\nexport const updatePixel = pixel => ({ type: \"PIXEL\", pixel });\r\n\r\nexport const switchSample = () => ({ type: \"SAMPLE\" });\r\n\r\nexport const basicImgEffect = (effect, payload) => ({ type: \"BASIC\", effect, payload });\r\n\r\nexport const section = (newVal, tolerance) => ({ type: \"SECTION\", newVal, tolerance });\r\n\r\nexport const swap = copyToNew => ({ type: \"SWAP\", copyToNew });\r\n\r\nexport const zoom = (isZoomOut, isNewCanvas) => ({ type: \"ZOOM\", isZoomOut, isNewCanvas });\r\n\r\nexport const center = (canvas, pageX, pageY) => ({ type: \"CENTER\", canvas, pageX, pageY });\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { switchSample, basicImgEffect, section } from \"./Actions/toolActions\";\r\n\r\nclass Replace extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fcr: 255,\r\n      fcg: 255,\r\n      fcb: 255,\r\n      fca: 255,\r\n      rcr: 255,\r\n      rcg: 255,\r\n      rcb: 255,\r\n      rca: 255,\r\n      tcr: 10,\r\n      tcg: 10,\r\n      tcb: 10,\r\n      tca: 10\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.replace = this.replace.bind(this);\r\n    this.section = this.section.bind(this);\r\n    this.click = this.click.bind(this);\r\n    this.navigate = this.navigate.bind(this);\r\n  }\r\n\r\n  onChange(event) {\r\n    let value = Number(event.target.value);\r\n    if (!isNaN(value) && value >= 0 && value <= 255) {\r\n      value = Number(value.toFixed());\r\n      let state = { [event.target.name]: value };\r\n      this.setState(state);\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, prevState) {\r\n    if (props.pixel) {\r\n      let pixel = props.pixel;\r\n      if (prevState.pixel && prevState.pixel[4] === pixel[4] && prevState.pixel[5] === pixel[5]) {\r\n        return null;\r\n      }\r\n      return { fcr: pixel[0], fcg: pixel[1], fcb: pixel[2], fca: pixel[3], pixel };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  replace(event) {\r\n    event.preventDefault();\r\n    let state = this.state;\r\n    let oldVal = [state.fcr, state.fcg, state.fcb, state.fca];\r\n    let newVal = [state.rcr, state.rcg, state.rcb, state.rca];\r\n    let tolerance = [state.tcr, state.tcg, state.tcb, state.tca];\r\n    this.props.basicImgEffect(\"REPLACE\", [oldVal, newVal, tolerance]);\r\n  }\r\n\r\n  click(event) {\r\n    event.preventDefault();\r\n    this.props.switchSample();\r\n  }\r\n\r\n  section(event) {\r\n    event.preventDefault();\r\n    let pixel = this.props.pixel;\r\n    let state = this.state;\r\n    if (pixel && pixel[0] === state.fcr && pixel[1] === state.fcg && pixel[2] === state.fcb && pixel[3] === state.fca) {\r\n      let newVal = [state.rcr, state.rcg, state.rcb, state.rca];\r\n      let tolerance = [state.tcr, state.tcg, state.tcb, state.tca];\r\n      this.props.section(newVal, tolerance);\r\n    } else {\r\n      alert(\"You must first specify a section to paint. Click the cursor icon and then click on an area of the canvas.\");\r\n    }\r\n  }\r\n\r\n  // Helps the user navigate the input boxes using arrow keys\r\n  navigate(event) {\r\n    let key = event.which;\r\n    if (key >= 37 && key <= 40) {\r\n      let parent = event.target.parentElement;\r\n      if (parent.id !== \"replaceGrid\") {\r\n        return;\r\n      }\r\n      let name = event.target.name;\r\n      let start = name[0];\r\n      let end = name[2];\r\n      let num = start === \"f\" ? 1 : start === \"r\" ? 2 : 3;\r\n      num += end === \"r\" ? 0 : end === \"g\" ? 3 : end === \"b\" ? 6 : 9;\r\n      if (key === 37) {\r\n        // Left\r\n        num -= event.target.selectionStart === 0 ? 1 : num;\r\n      } else if (key === 38) {\r\n        // Up\r\n        num -= 3;\r\n      } else if (key === 39) {\r\n        // Right\r\n        num += event.target.selectionStart === event.target.value.length ? 1 : 12;\r\n      } else {\r\n        // Down\r\n        num += 3;\r\n      }\r\n      if (num >= 1 && num <= 12) {\r\n        parent[num].focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"replaceGrid\" className=\"replaceGrid\" onKeyDown={this.navigate}>\r\n        <label></label>\r\n        <span>\r\n          <label>Find</label>\r\n          <button onClick={this.click} title=\"Click section on canvas\" className=\"infoTool\">\r\n            <i id=\"clickIcon\">&nbsp;&nbsp;&nbsp;&nbsp;</i>\r\n          </button>\r\n        </span>\r\n        <label>Replace</label>\r\n        <label>Tolerance</label>\r\n        <label>Red:</label>\r\n        <input type=\"text\" value={this.state.fcr} onChange={e => this.onChange(e)} name=\"fcr\" />\r\n        <input type=\"text\" value={this.state.rcr} onChange={e => this.onChange(e)} name=\"rcr\" />\r\n        <input type=\"text\" value={this.state.tcr} onChange={e => this.onChange(e)} name=\"tcr\" />\r\n        <label>Green:</label>\r\n        <input type=\"text\" value={this.state.fcg} onChange={e => this.onChange(e)} name=\"fcg\" />\r\n        <input type=\"text\" value={this.state.rcg} onChange={e => this.onChange(e)} name=\"rcg\" />\r\n        <input type=\"text\" value={this.state.tcg} onChange={e => this.onChange(e)} name=\"tcg\" />\r\n        <label>Blue:</label>\r\n        <input type=\"text\" value={this.state.fcb} onChange={e => this.onChange(e)} name=\"fcb\" />\r\n        <input type=\"text\" value={this.state.rcb} onChange={e => this.onChange(e)} name=\"rcb\" />\r\n        <input type=\"text\" value={this.state.tcb} onChange={e => this.onChange(e)} name=\"tcb\" />\r\n        <label>Alpha:</label>\r\n        <input type=\"text\" value={this.state.fca} onChange={e => this.onChange(e)} name=\"fca\" />\r\n        <input type=\"text\" value={this.state.rca} onChange={e => this.onChange(e)} name=\"rca\" />\r\n        <input type=\"text\" value={this.state.tca} onChange={e => this.onChange(e)} name=\"tca\" />\r\n        <div id=\"replaceBtns\">\r\n          <button onClick={this.replace}>Replace Colour</button>\r\n          <button onClick={this.section}>Replace Section Colour</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    pixel: state.pixel\r\n  }),\r\n  { switchSample, basicImgEffect, section }\r\n)(Replace);\r\n","import React from \"react\";\r\nimport Replace from \"./Replace\";\r\nimport \"./Styles/Tools.css\";\r\n\r\nfunction Tools() {\r\n  return (\r\n    <div>\r\n      <Replace />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tools;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { basicImgEffect } from \"./Actions/toolActions\";\r\n\r\nclass Lighten extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { val: 0 };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    let val = event.target.value;\r\n    if (!isNaN(val) && val >= 0 && val <= 500) {\r\n      val = Number(Number(val).toFixed());\r\n      this.setState({ val });\r\n    }\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.basicImgEffect(\"BRIGHT\", [this.props.multiplier(this.state.val)]);\r\n  }\r\n\r\n  render() {\r\n    let text = this.props.text || \"Lighten\";\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={this.handleClick}> {text}</button>\r\n        <input type=\"text\" value={this.state.val} onChange={this.handleChange} style={{ width: \"25px\" }} />\r\n        <label>%</label>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  () => ({}),\r\n  { basicImgEffect }\r\n)(Lighten);\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { basicImgEffect } from \"./Actions/toolActions\";\r\nimport Lighten from \"./Lighten\";\r\n\r\nfunction SimpleTools() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr\", justifyItems: \"center\" }}>\r\n      <div>\r\n        <button onClick={() => dispatch(basicImgEffect(\"GRAYSCALE\"))}> Grayscale </button>\r\n        <button onClick={() => dispatch(basicImgEffect(\"NEGATIVE\"))}> Negative </button>\r\n        <Lighten multiplier={ratio => ratio / 100 + 1} />\r\n        <Lighten multiplier={ratio => 100 / (ratio + 100)} text={\"Darken\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SimpleTools;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { swap, zoom } from \"./Actions/toolActions\";\r\n\r\nfunction Upload(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <input id=\"upload\" type=\"file\" onChange={props.change} hidden />\r\n      <button className=\"fileBtn\" onClick={() => document.getElementById(\"upload\").click()}>\r\n        <i id=\"uploadIcon\" title=\"Upload Image\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button onClick={() => dispatch(swap(false))}>\r\n        <i id=\"leftIcon\" title=\"Copy new preview to old\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button className=\"infoTool\" onClick={() => dispatch(zoom(false, false))}>\r\n        <i id=\"plusIcon\" title=\"Zoom in\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button className=\"infoTool\" onClick={() => dispatch(zoom(true, false))}>\r\n        <i id=\"minusIcon\" title=\"Zoom out\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { swap, zoom } from \"./Actions/toolActions\";\r\n\r\nfunction Download(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <button className=\"fileBtn\" onClick={props.download}>\r\n        <i id=\"downloadIcon\" title=\"Download Image\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button onClick={() => dispatch(swap(true))}>\r\n        <i id=\"rightIcon\" title=\"Copy old preview to new\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button className=\"infoTool\" onClick={() => dispatch(zoom(false, true))}>\r\n        <i id=\"plusIcon\" title=\"Zoom in\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <button className=\"infoTool\" onClick={() => dispatch(zoom(true, true))}>\r\n        <i id=\"minusIcon\" title=\"Zoom out\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </i>\r\n      </button>\r\n      <a id=\"download\" href=\"/\" style={{ display: \"none\" }} download=\"converted\">\r\n        Download\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Download;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setImgData, refresh, center, updatePixel, basicImgEffect, swap, switchSample } from \"./Actions/toolActions\";\nimport Tools from \"./Tools\";\nimport SimpleTools from \"./SimpleTools\";\nimport \"./Styles/App.css\";\nimport Upload from \"./Upload\";\nimport Download from \"./Download\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.imageChange = this.imageChange.bind(this);\n    this.download = this.download.bind(this);\n    this.recenter = this.recenter.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // Fires when a new image is uploaded\n  imageChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      let img = new Image();\n      const reader = new FileReader();\n      reader.onload = read => {\n        img.onload = imgEvent => {\n          // Get image data\n          var canvas = document.createElement(\"canvas\");\n          let img = imgEvent.target;\n          let width = img.width;\n          let height = img.height;\n          canvas.width = width;\n          canvas.height = height;\n          canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n          let imgData = canvas.getContext(\"2d\").getImageData(0, 0, width, height);\n\n          // Draw image onto canvases\n          canvas = document.getElementById(\"canvas\");\n          canvas.width = canvas.scrollWidth;\n          canvas.height = canvas.scrollHeight;\n          const ctx = canvas.getContext(\"2d\");\n          canvas = document.getElementById(\"newCanvas\");\n          canvas.width = canvas.scrollWidth;\n          canvas.height = canvas.scrollHeight;\n          this.props.setImgData(false, imgData).then(() => {\n            ctx.putImageData(this.props.imgData, 0, 0, 0, 0, canvas.scrollWidth, canvas.scrollHeight);\n            // copy image data into other canvas\n            this.props.swap(true);\n          });\n\n          // refresh state\n          this.props.refresh();\n        };\n\n        let filedata = read.target.result;\n        if (filedata.startsWith(\"data:image\")) {\n          img.src = filedata;\n        } else {\n          alert(\"That file type is not supported\");\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n    // Prevent file name from appearing\n    //let name = event.target.value.substr(event.target.value.lastIndexOf(\"\\\\\") + 1);\n    event.target.value = \"\";\n  }\n\n  // Download new image\n  download() {\n    const link = document.getElementById(\"download\");\n    if (this.props.imgData) {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = this.props.imgData.width;\n      canvas.height = this.props.imgData.height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.putImageData(this.props.newData, 0, 0);\n      link.setAttribute(\"href\", canvas.toDataURL());\n      link.click();\n    }\n  }\n\n  // Center the image on canvas to the clicked point\n  recenter(event) {\n    let canvas = event.target;\n    if (this.props.imgData && (this.props.imgData.width > canvas.width || this.props.imgData.height > canvas.height)) {\n      this.props.center(canvas, event.pageX, event.pageY);\n    }\n  }\n\n  handleClick(event) {\n    if (this.props.imgData && this.props.sample && event.target.id === \"canvas\") {\n      let canvas = event.target;\n      let [ratioX, ratioY] = [canvas.width / canvas.scrollWidth, canvas.height / canvas.scrollHeight];\n      let point = [\n        Math.round((event.pageX - canvas.offsetLeft) * ratioX + this.props.x1),\n        Math.round((event.pageY - canvas.offsetTop) * ratioY + this.props.y1)\n      ];\n      if (point[0] >= 0 && point[0] <= this.props.imgData.width && point[1] >= 0 && point[1] <= this.props.imgData.height) {\n        let r = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4];\n        let g = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4 + 1];\n        let b = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4 + 2];\n        let a = this.props.imgData.data[point[1] * this.props.imgData.width * 4 + point[0] * 4 + 3];\n        let pixel = [r, g, b, a, point[0], point[1]];\n        this.props.updatePixel(pixel);\n      }\n    } else if (this.props.sample) {\n      this.props.switchSample();\n    } else {\n      this.recenter(event);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\" id={\"container\"}>\n        <div className=\"grid\">\n          <label>Old Preview</label>\n          <label>New Preview</label>\n\n          <div className=\"transparent\">\n            <canvas id=\"canvas\" onClick={this.handleClick}></canvas>\n          </div>\n          <div className=\"transparent\">\n            <canvas id=\"newCanvas\" onClick={this.handleClick}></canvas>\n          </div>\n\n          <Upload change={this.imageChange} />\n          <Download download={this.download} />\n        </div>\n\n        <Tools />\n        <SimpleTools />\n      </div>\n    );\n  }\n\n  // No need to rerender since the canvas rerenders on its own\n  shouldComponentUpdate() {\n    return false;\n  }\n}\n\nexport default connect(\n  state => ({ ...state }),\n  { setImgData, refresh, center, updatePixel, basicImgEffect, swap, switchSample }\n)(App);\n\n//TODO: add icons for zoom, improved colour replacement support\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport imageReducer, { initialState } from \"./Reducers/imageReducer.js\";\nimport App from \"./App\";\n\nlet store = createStore(imageReducer, initialState, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}