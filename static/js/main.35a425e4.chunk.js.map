{"version":3,"sources":["Replace.js","Tools.js","ToolFunctions.js","Lighten.js","App.js","index.js"],"names":["Replace","state","fcr","fcg","fcb","fca","rcr","rcg","rcb","rca","tcr","tcg","tcb","tca","pixel","onChange","bind","replace","section","click","navigate","event","value","Number","target","isNaN","toFixed","name","this","setState","preventDefault","props","alert","key","which","parent","parentElement","start","end","num","selectionStart","length","focus","id","className","onKeyDown","onClick","title","type","e","prevState","Component","Tools","file","input","replaceColour","isMatch","pixel1","pixel2","tolerance","match","offset","Math","abs","Lighten","val","handleChange","text","Fragment","lighten","style","width","App","imgData","newData","x1","x2","y1","y2","sample","imageChange","download","loadImage","swapImage","recentre","handleClick","replaceSection","copy","grayscale","negative","files","img","Image","reader","FileReader","onload","read","imgEvent","canvas","document","createElement","height","getContext","drawImage","getImageData","filedata","result","startsWith","src","readAsDataURL","getElementById","scrollWidth","scrollHeight","ctx","putImageData","copyNew","canvasName","imgFile","data","Uint8ClampedArray","ImageData","oldVal","newVal","file1","file2","imgData1","imgData2","i","changeImgData","link","setAttribute","toDataURL","clearRect","x","y","half","point","pageX","offsetLeft","pageY","offsetTop","width1","height1","width2","height2","row","col","newColour","adjacent","visited","Array","oldColour","frontier","pop","colour","push","forEach","adj","getSection","copyToNew","data1","data2","index","avg","round","ratio","mult","cls","hidden","href","display","gridTemplateColumns","justifyItems","ReactDOM","render"],"mappings":"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","file":"static/js/main.35a425e4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Replace extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fcr: 255,\r\n      fcg: 255,\r\n      fcb: 255,\r\n      fca: 255,\r\n      rcr: 255,\r\n      rcg: 255,\r\n      rcb: 255,\r\n      rca: 255,\r\n      tcr: 10,\r\n      tcg: 10,\r\n      tcb: 10,\r\n      tca: 10,\r\n      pixel: null\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.replace = this.replace.bind(this);\r\n    this.section = this.section.bind(this);\r\n    this.click = this.click.bind(this);\r\n    this.navigate = this.navigate.bind(this);\r\n  }\r\n\r\n  onChange(event) {\r\n    let value = Number(event.target.value);\r\n    if (!isNaN(value) && value >= 0 && value <= 255) {\r\n      value = Number(value.toFixed());\r\n      let state = { [event.target.name]: value };\r\n      this.setState(state);\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, prevState) {\r\n    if (props.pixel) {\r\n      let pixel = props.pixel;\r\n      if (prevState.pixel && prevState.pixel[4] === pixel[4] && prevState.pixel[5] === pixel[5]) {\r\n        return null;\r\n      }\r\n      return { fcr: pixel[0], fcg: pixel[1], fcb: pixel[2], fca: pixel[3], pixel };\r\n    }\r\n    return { pixel: null };\r\n  }\r\n\r\n  replace(event) {\r\n    event.preventDefault();\r\n    this.props.replace(this.state);\r\n  }\r\n\r\n  click(event) {\r\n    event.preventDefault();\r\n    this.props.click();\r\n  }\r\n\r\n  section(event) {\r\n    event.preventDefault();\r\n    let pixel = this.state.pixel;\r\n    let state = this.state;\r\n    if (pixel && pixel[0] === state.fcr && pixel[1] === state.fcg && pixel[2] === state.fcb && pixel[3] === state.fca) {\r\n      this.props.section(this.state);\r\n    } else {\r\n      alert(\"You must first specify a section to paint. Click the cursor icon and then click on an area of the canvas.\");\r\n    }\r\n  }\r\n\r\n  navigate(event) {\r\n    let key = event.which;\r\n    if (key >= 37 && key <= 40) {\r\n      let parent = event.target.parentElement;\r\n      let name = event.target.name;\r\n      let start = name[0];\r\n      let end = name[2];\r\n      let num = start === \"f\" ? 1 : start === \"r\" ? 2 : 3;\r\n      num += end === \"r\" ? 0 : end === \"g\" ? 3 : end === \"b\" ? 6 : 9;\r\n      if (key === 37) {\r\n        num -= event.target.selectionStart === 0 ? 1 : num;\r\n      } else if (key === 38) {\r\n        num -= 3;\r\n      } else if (key === 39) {\r\n        num += event.target.selectionStart === event.target.value.length ? 1 : 12;\r\n      } else {\r\n        num += 3;\r\n      }\r\n      if (num >= 1 && num <= 12) {\r\n        parent[num].focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"e\" className=\"replaceGrid\" onKeyDown={this.navigate}>\r\n        <label></label>\r\n        <span>\r\n          <label>Find</label>\r\n          <button onClick={this.click} title=\"Click section on canvas\">\r\n            <i id=\"clickIcon\">&nbsp;&nbsp;&nbsp;&nbsp;</i>\r\n          </button>\r\n        </span>\r\n        <label>Replace</label>\r\n        <label>Tolerance</label>\r\n        <label>Red:</label>\r\n        <input type=\"text\" value={this.state.fcr} onChange={e => this.onChange(e)} name=\"fcr\" />\r\n        <input type=\"text\" value={this.state.rcr} onChange={e => this.onChange(e)} name=\"rcr\" />\r\n        <input type=\"text\" value={this.state.tcr} onChange={e => this.onChange(e)} name=\"tcr\" />\r\n        <label>Green:</label>\r\n        <input type=\"text\" value={this.state.fcg} onChange={e => this.onChange(e)} name=\"fcg\" />\r\n        <input type=\"text\" value={this.state.rcg} onChange={e => this.onChange(e)} name=\"rcg\" />\r\n        <input type=\"text\" value={this.state.tcg} onChange={e => this.onChange(e)} name=\"tcg\" />\r\n        <label>Blue:</label>\r\n        <input type=\"text\" value={this.state.fcb} onChange={e => this.onChange(e)} name=\"fcb\" />\r\n        <input type=\"text\" value={this.state.rcb} onChange={e => this.onChange(e)} name=\"rcb\" />\r\n        <input type=\"text\" value={this.state.tcb} onChange={e => this.onChange(e)} name=\"tcb\" />\r\n        <label>Alpha:</label>\r\n        <input type=\"text\" value={this.state.fca} onChange={e => this.onChange(e)} name=\"fca\" />\r\n        <input type=\"text\" value={this.state.rca} onChange={e => this.onChange(e)} name=\"rca\" />\r\n        <input type=\"text\" value={this.state.tca} onChange={e => this.onChange(e)} name=\"tca\" />\r\n        <div id=\"replaceBtns\">\r\n          <button onClick={this.replace}>Replace Colour</button>\r\n          <button onClick={this.section}>Replace Section Colour</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Replace;\r\n","import React from \"react\";\r\nimport Replace from \"./Replace\";\r\nimport \"./Tools.css\";\r\n\r\nfunction replaceColour(replace, file, input) {\r\n  let oldVal = [input.fcr, input.fcg, input.fcb, input.fca];\r\n  let newVal = [input.rcr, input.rcg, input.rcb, input.rca];\r\n  let tolerance = [input.tcr, input.tcg, input.tcb, input.tca];\r\n  replace(file, oldVal, newVal, tolerance);\r\n}\r\n\r\nfunction Tools(props) {\r\n  return (\r\n    <div>\r\n      <Replace\r\n        replace={state => replaceColour(props.replace, props.file, state)}\r\n        section={props.section}\r\n        click={props.click}\r\n        pixel={props.pixel}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tools;\r\n","/*\r\n  -file1 and file2 are both ImageData objects\r\n  -oldVal and newVal are pixels (rgba values in an array)\r\n  -tolerance is an rgba range\r\n  searches the pixels in file1 looking for a match with oldVal within the given tolerance range.\r\n  corresponding pixels in file2 that were matched are changed to newVal\r\n  corresponding pixels in file2 that were unmatched are changed to the unmatched pixel\r\n  */\r\nexport function changeImgData(file1, file2, oldVal, newVal, tolerance) {\r\n  let match = false;\r\n  let imgData1 = file1.data;\r\n  let imgData2 = file2.data;\r\n  for (let i = 0; i < imgData1.length; i += 4) {\r\n    match = isMatch([imgData1[i], imgData1[i + 1], imgData1[i + 2], imgData1[i + 3]], oldVal, tolerance);\r\n    if (match) {\r\n      for (let offset = 0; offset < 4; offset++) {\r\n        imgData2[i + offset] = newVal[offset];\r\n      }\r\n    } else {\r\n      for (let offset = 0; offset < 4; offset++) {\r\n        imgData2[i + offset] = imgData1[i + offset];\r\n      }\r\n    }\r\n  }\r\n}\r\n/*\r\n  -Image is an ImageData objects\r\n  -pixel ([r,g,b,a,x,y]) is a pixel in Image containing its x and y coordinate\r\n  -tolerance is an rgba range\r\n  -Returns an array of pixel indices that corresponds to a section in Image originating at pixel with the given tolerance range\r\n*/\r\nexport function getSection(Image, pixel, tolerance) {\r\n  let [width, height, data] = [Image.width, Image.height, Image.data];\r\n  // Adjacent offsets of pixels (Up, Right, Down, Left)\r\n  let adjacent = [[0, -1], [1, 0], [0, 1], [-1, 0]];\r\n  // visited[i] indicates whether pixel i has been added to the frontier before\r\n  let visited = new Array(width * height);\r\n  // The array of pixels to return\r\n  let section = [];\r\n  let oldColour = [pixel[0], pixel[1], pixel[2], pixel[3]];\r\n  let [x, y] = [pixel[4], pixel[5]];\r\n  // The array of pixels that need to be checked if they belong to the section\r\n  let frontier = [[x, y]];\r\n  visited[y * width + x] = true;\r\n  while (frontier.length !== 0) {\r\n    [x, y] = frontier.pop();\r\n    // Check if pixel has valid coordinates\r\n    if (x < 0 || x > width || y < 0 || y > height) {\r\n      continue;\r\n    }\r\n    // Get the colour of the pixel\r\n    let colour = [];\r\n    for (let offset = 0; offset < 4; offset++) {\r\n      colour.push(data[y * width * 4 + x * 4 + offset]);\r\n    }\r\n    // Check that the pixel colour is a match\r\n    if (isMatch(colour, oldColour, tolerance)) {\r\n      // Add pixel to section\r\n      section.push(y * width * 4 + x * 4);\r\n      // Add adjacent pixels to frontier\r\n      adjacent.forEach(adj => {\r\n        // If they have not been added before\r\n        if (!visited[(y + adj[1]) * width + x + adj[0]]) {\r\n          visited[(y + adj[1]) * width + x + adj[0]] = true;\r\n          frontier.push([x + adj[0], y + adj[1]]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return section;\r\n}\r\n\r\n// returns true if the two pixels are similar enough according to the tolerance range\r\nexport function isMatch(pixel1, pixel2, tolerance) {\r\n  let match = true;\r\n  for (let offset = 0; offset < 4; offset++) {\r\n    match = match && Math.abs(pixel1[offset] - pixel2[offset]) <= tolerance[offset];\r\n  }\r\n  return match;\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Lighten extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { val: 0 };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    let val = event.target.value;\r\n    if (!isNaN(val) && val >= 0 && val <= 100) {\r\n      val = Number(Number(val).toFixed());\r\n      this.setState({ val });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let text = this.props.text || \"Lighten\";\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={() => this.props.lighten(this.state.val)}> {text}</button>\r\n        <input type=\"text\" value={this.state.val} onChange={this.handleChange} style={{ width: \"25px\" }} />\r\n        <label>%</label>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lighten;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Tools from \"./Tools\";\nimport { changeImgData, getSection } from \"./ToolFunctions\";\nimport Lighten from \"./Lighten\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { imgData: null, newData: null, x1: 0, x2: 0, y1: 0, y2: 0, sample: false, pixel: null };\n    this.imageChange = this.imageChange.bind(this);\n    this.download = this.download.bind(this);\n    this.loadImage = this.loadImage.bind(this);\n    this.swapImage = this.swapImage.bind(this);\n    this.replace = this.replace.bind(this);\n    this.recentre = this.recentre.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.replaceSection = this.replaceSection.bind(this);\n    this.copy = this.copy.bind(this);\n    this.grayscale = this.grayscale.bind(this);\n    this.negative = this.negative.bind(this);\n    this.lighten = this.lighten.bind(this);\n  }\n\n  imageChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      let img = new Image();\n      const reader = new FileReader();\n      reader.onload = read => {\n        img.onload = imgEvent => {\n          var canvas = document.createElement(\"canvas\");\n          let img = imgEvent.target;\n          let width = img.width;\n          let height = img.height;\n          canvas.width = width;\n          canvas.height = height;\n          canvas.getContext(\"2d\").drawImage(img, 0, 0, width, height);\n          let imgData = canvas.getContext(\"2d\").getImageData(0, 0, width, height);\n          this.setState({ imgData }, this.loadImage);\n        };\n        let filedata = read.target.result;\n        if (filedata.startsWith(\"data:image\")) {\n          img.src = filedata;\n        } else {\n          alert(\"That file type is not supported\");\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n    event.target.value = \"\";\n  }\n\n  loadImage() {\n    var canvas = document.getElementById(\"canvas\");\n    canvas.width = canvas.scrollWidth;\n    canvas.height = canvas.scrollHeight;\n    const ctx = canvas.getContext(\"2d\");\n    canvas = document.getElementById(\"newCanvas\");\n    canvas.width = canvas.scrollWidth;\n    canvas.height = canvas.scrollHeight;\n    ctx.putImageData(this.state.imgData, 0, 0);\n    // copy image data into other canvas\n    this.swapImage(false);\n    // refresh state\n    this.setState({ x1: 0, x2: 0, y1: 0, y2: 0, sample: false, pixel: null });\n  }\n\n  swapImage(copyNew) {\n    if (this.state.imgData) {\n      let [canvasName, imgFile] = copyNew ? [\"canvas\", this.state.newData] : [\"newCanvas\", this.state.imgData];\n      const ctx = document.getElementById(canvasName).getContext(\"2d\");\n      ctx.putImageData(imgFile, 0, 0);\n      let data = new Uint8ClampedArray(imgFile.data);\n      let copy = new ImageData(data, imgFile.width, imgFile.height);\n      copyNew ? this.setState({ imgData: copy, x1: 0, y1: 0 }) : this.setState({ newData: copy, x2: 0, y2: 0 });\n    }\n  }\n\n  replace(file, oldVal, newVal, tolerance) {\n    if (file) {\n      changeImgData(this.state.imgData, file, oldVal, newVal, tolerance);\n      var canvas2 = document.getElementById(\"newCanvas\").getContext(\"2d\");\n      canvas2.putImageData(file, 0, 0);\n    }\n  }\n\n  // Download new image\n  download() {\n    const link = document.getElementById(\"download\");\n    if (this.state.imgData) {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = this.state.imgData.width;\n      canvas.height = this.state.imgData.height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.putImageData(this.state.newData, 0, 0);\n      link.setAttribute(\"href\", canvas.toDataURL());\n      link.click();\n    }\n  }\n\n  recentre(event) {\n    let canvas = event.target;\n    if (this.state.imgData && (this.state.imgData.width > canvas.width || this.state.imgData.height > canvas.height)) {\n      let ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      let x = canvas.id === \"canvas\" ? this.state.x1 : this.state.x2;\n      let y = canvas.id === \"canvas\" ? this.state.y1 : this.state.y2;\n      let imgData = canvas.id === \"canvas\" ? this.state.imgData : this.state.newData;\n      let half = canvas.width / 2;\n      let point = [x + event.pageX - canvas.offsetLeft - half, y + event.pageY - canvas.offsetTop - half];\n      point[0] = point[0] < 0 ? 0 : point[0];\n      point[0] = point[0] > imgData.width - canvas.width ? imgData.width - canvas.width : point[0];\n      point[0] = imgData.width < canvas.width ? 0 : point[0];\n      point[1] = point[1] < 0 ? 0 : point[1];\n      point[1] = point[1] > imgData.height - canvas.height ? imgData.height - canvas.height : point[1];\n      point[1] = imgData.width < canvas.width ? 0 : point[1];\n      canvas.id === \"canvas\" ? this.setState({ x1: point[0], y1: point[1] }) : this.setState({ x2: point[0], y2: point[1] });\n      let [width1, height1] = [imgData.width, imgData.height];\n      let [width2, height2] = [width1 - point[0], height1 - point[1]];\n      let data = new Uint8ClampedArray(width2 * height2 * 4);\n      for (let row = 0; row < height2; row++) {\n        for (let col = 0; col < width2; col++) {\n          for (let val = 0; val < 4; val++) {\n            data[row * width2 * 4 + col * 4 + val] =\n              imgData.data[(point[1] + row) * width1 * 4 + (point[0] + col) * 4 + val];\n          }\n        }\n      }\n      imgData = new ImageData(data, width2, height2);\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  handleClick(event) {\n    if (this.state.imgData && this.state.sample && event.target.id === \"canvas\") {\n      let canvas = event.target;\n      let point = [event.pageX - canvas.offsetLeft + this.state.x1, event.pageY - canvas.offsetTop + this.state.y1];\n      if (point[0] >= 0 && point[0] <= this.state.imgData.width && point[1] >= 0 && point[1] <= this.state.imgData.height) {\n        let r = this.state.imgData.data[point[1] * this.state.imgData.width * 4 + point[0] * 4];\n        let g = this.state.imgData.data[point[1] * this.state.imgData.width * 4 + point[0] * 4 + 1];\n        let b = this.state.imgData.data[point[1] * this.state.imgData.width * 4 + point[0] * 4 + 2];\n        let a = this.state.imgData.data[point[1] * this.state.imgData.width * 4 + point[0] * 4 + 3];\n        let pixel = [r, g, b, a, point[0], point[1]];\n        this.setState({ sample: false, pixel });\n      }\n    } else if (this.state.sample) {\n      this.setState({ sample: false });\n    } else {\n      this.recentre(event);\n    }\n  }\n\n  replaceSection(state) {\n    if (this.state.pixel) {\n      let newColour = [state.rcr, state.rcg, state.rcb, state.rca];\n      let tolerance = [state.tcr, state.tcg, state.tcb, state.tca];\n      let section = getSection(this.state.imgData, this.state.pixel, tolerance);\n      let data = this.state.newData.data;\n      this.copy(true);\n      // Replace the colour of each pixel in the section\n      section.forEach(pixel => {\n        data[pixel] = newColour[0];\n        data[pixel + 1] = newColour[1];\n        data[pixel + 2] = newColour[2];\n        data[pixel + 3] = newColour[3];\n      });\n      // Redraw the image\n      document\n        .getElementById(\"newCanvas\")\n        .getContext(\"2d\")\n        .putImageData(this.state.newData, 0, 0);\n    }\n  }\n\n  // Copy the old data to the new data or vice versa\n  copy(copyToNew) {\n    let data1 = copyToNew ? this.state.imgData.data : this.state.newData.data;\n    let data2 = copyToNew ? this.state.newData.data : this.state.imgData.data;\n    data1.forEach((pixel, index) => (data2[index] = pixel));\n  }\n\n  grayscale() {\n    if (this.state.newData) {\n      let data = this.state.newData.data;\n      this.copy(true);\n      let avg = 0;\n      for (let i = 0; i < data.length; i += 4) {\n        avg = Math.round((data[i] + data[i + 1] + data[i + 2]) / 3);\n        data[i] = avg;\n        data[i + 1] = avg;\n        data[i + 2] = avg;\n      }\n      // Redraw the image\n      document\n        .getElementById(\"newCanvas\")\n        .getContext(\"2d\")\n        .putImageData(this.state.newData, 0, 0);\n    }\n  }\n\n  negative() {\n    if (this.state.newData) {\n      let data = this.state.newData.data;\n      this.copy(true);\n      for (let i = 0; i < data.length; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n      // Redraw the image\n      document\n        .getElementById(\"newCanvas\")\n        .getContext(\"2d\")\n        .putImageData(this.state.newData, 0, 0);\n    }\n  }\n\n  lighten(ratio, mult = ratio / 100 + 1) {\n    if (this.state.newData) {\n      let data = this.state.newData.data;\n      this.copy(true);\n      for (let i = 0; i < data.length; i += 4) {\n        data[i] = data[i] * mult > 255 ? 255 : data[i] * mult;\n        data[i + 1] = data[i + 1] * mult > 255 ? 255 : data[i + 1] * mult;\n        data[i + 2] = data[i + 2] * mult > 255 ? 255 : data[i + 2] * mult;\n      }\n      // Redraw the image\n      document\n        .getElementById(\"newCanvas\")\n        .getContext(\"2d\")\n        .putImageData(this.state.newData, 0, 0);\n    }\n  }\n\n  render() {\n    let cls = this.state.sample ? \"container cross\" : \"container\";\n    return (\n      <div className={cls}>\n        <div className=\"grid\">\n          <label>Old Preview</label>\n          <label>New Preview</label>\n\n          <div className=\"transparent\">\n            <canvas id=\"canvas\" onClick={this.handleClick}></canvas>\n          </div>\n          <div className=\"transparent\">\n            <canvas id=\"newCanvas\" onClick={this.handleClick}></canvas>\n          </div>\n\n          <input id=\"upload\" type=\"file\" onChange={this.imageChange} hidden />\n\n          <div>\n            <button onClick={() => document.getElementById(\"upload\").click()}>Upload Image</button>\n\n            <button onClick={() => this.swapImage(true)}>\n              <i id=\"leftIcon\" title=\"Copy new preview to old\">\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              </i>\n            </button>\n          </div>\n\n          <div>\n            <button onClick={this.download}>Download</button>\n            <button onClick={() => this.swapImage(false)}>\n              <i id=\"rightIcon\" title=\"Copy old preview to new\">\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              </i>\n            </button>\n          </div>\n        </div>\n\n        <a id=\"download\" href=\"/\" style={{ display: \"none\" }} download=\"converted\">\n          Download\n        </a>\n\n        <Tools\n          replace={this.replace}\n          file={this.state.newData}\n          click={() => this.setState({ sample: !this.state.sample })}\n          pixel={this.state.pixel}\n          section={this.replaceSection}\n        />\n\n        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr\", justifyItems: \"center\" }}>\n          <div>\n            <button onClick={this.grayscale}> Grayscale </button>\n            <button onClick={this.negative}> Negative </button>\n            <Lighten lighten={this.lighten} />\n            <Lighten lighten={value => this.lighten(value, 100 / (value + 100))} text={\"Darken\"} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}